// <auto-generated>This is auto-generated code by DIS. Do not modify.</auto-generated>
using System.ComponentModel;
using System.Collections;
using System.Collections.Generic;
using System.Linq;

namespace Skyline.DataMiner.Scripting
{
public static class Parameter
{
	/// <summary>PID: 1 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int qa1_1 = 1;
	/// <summary>PID: 1 | Type: read</summary>
	public const int qa1 = 1;
	/// <summary>PID: 3 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int pollingwasenabled_3 = 3;
	/// <summary>PID: 3 | Type: read</summary>
	public const int pollingwasenabled = 3;
	/// <summary>PID: 10 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int totalprocessorload_10 = 10;
	/// <summary>PID: 10 | Type: read</summary>
	public const int totalprocessorload = 10;
	/// <summary>PID: 11 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int numberofcores_11 = 11;
	/// <summary>PID: 11 | Type: read</summary>
	public const int numberofcores = 11;
	/// <summary>PID: 12 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int sscpuidle_12 = 12;
	/// <summary>PID: 12 | Type: read</summary>
	public const int sscpuidle = 12;
	/// <summary>PID: 15 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int tableinstance_15 = 15;
	/// <summary>PID: 15 | Type: read</summary>
	public const int tableinstance = 15;
	/// <summary>PID: 18 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int statuscode_18 = 18;
	/// <summary>PID: 18 | Type: read</summary>
	public const int statuscode = 18;
	/// <summary>PID: 19 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int responsecontent_19 = 19;
	/// <summary>PID: 19 | Type: read</summary>
	public const int responsecontent = 19;
	/// <summary>PID: 20 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int time_flag_new_20 = 20;
	/// <summary>PID: 20 | Type: read</summary>
	public const int time_flag_new = 20;
	/// <summary>PID: 21 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int time_flag_old_21 = 21;
	/// <summary>PID: 21 | Type: read</summary>
	public const int time_flag_old = 21;
	/// <summary>PID: 22 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int cputemperature1_22 = 22;
	/// <summary>PID: 22 | Type: read</summary>
	public const int cputemperature1 = 22;
	/// <summary>PID: 23 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int cputemperature2_23 = 23;
	/// <summary>PID: 23 | Type: read</summary>
	public const int cputemperature2 = 23;
	/// <summary>PID: 24 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int pixfixversion_24 = 24;
	/// <summary>PID: 24 | Type: read</summary>
	public const int pixfixversion = 24;
	/// <summary>PID: 30 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int taskmanagerautoclear_30 = 30;
	/// <summary>PID: 30 | Type: read</summary>
	public const int taskmanagerautoclear = 30;
	/// <summary>PID: 40 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int memorycalculationchange_40 = 40;
	/// <summary>PID: 40 | Type: read</summary>
	public const int memorycalculationchange = 40;
	/// <summary>PID: 60 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int versiontag_60 = 60;
	/// <summary>PID: 60 | Type: read</summary>
	public const int versiontag = 60;
	/// <summary>PID: 68 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int clearprocesscountertableonce_68 = 68;
	/// <summary>PID: 68 | Type: read</summary>
	public const int clearprocesscountertableonce = 68;
	/// <summary>PID: 77 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int wildcardinstance_77 = 77;
	/// <summary>PID: 77 | Type: read</summary>
	public const int wildcardinstance = 77;
	/// <summary>PID: 78 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int processname_78 = 78;
	/// <summary>PID: 78 | Type: read</summary>
	public const int processname = 78;
	/// <summary>PID: 95 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int hrswrunperftable_init_95 = 95;
	/// <summary>PID: 95 | Type: read</summary>
	public const int hrswrunperftable_init = 95;
	/// <summary>PID: 100 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int sysdescr_100 = 100;
	/// <summary>PID: 100 | Type: read</summary>
	public const int sysdescr = 100;
	/// <summary>PID: 102 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int sysuptimeprocessed_102 = 102;
	/// <summary>PID: 102 | Type: read</summary>
	public const int sysuptimeprocessed = 102;
	/// <summary>PID: 103 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int syslocation_103 = 103;
	/// <summary>PID: 103 | Type: read</summary>
	public const int syslocation = 103;
	/// <summary>PID: 104 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int systemname_104 = 104;
	/// <summary>PID: 104 | Type: read</summary>
	public const int systemname = 104;
	/// <summary>PID: 105 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int hrsystemnumusers_105 = 105;
	/// <summary>PID: 105 | Type: read</summary>
	public const int hrsystemnumusers = 105;
	/// <summary>PID: 106 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int hrsystemuptime_106 = 106;
	/// <summary>PID: 106 | Type: read</summary>
	public const int hrsystemuptime = 106;
	/// <summary>PID: 107 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int hrsystemprocesses_107 = 107;
	/// <summary>PID: 107 | Type: read</summary>
	public const int hrsystemprocesses = 107;
	/// <summary>PID: 108 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int localtimesnmp_108 = 108;
	/// <summary>PID: 108 | Type: read</summary>
	public const int localtimesnmp = 108;
	/// <summary>PID: 199 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int flag199_199 = 199;
	/// <summary>PID: 199 | Type: read</summary>
	public const int flag199 = 199;
	/// <summary>PID: 200 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int processrunpath_200 = 200;
	/// <summary>PID: 200 | Type: read</summary>
	public const int processrunpath = 200;
	/// <summary>PID: 201 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int processrunargument_201 = 201;
	/// <summary>PID: 201 | Type: read</summary>
	public const int processrunargument = 201;
	/// <summary>PID: 299 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int flag299_299 = 299;
	/// <summary>PID: 299 | Type: read</summary>
	public const int flag299 = 299;
	/// <summary>PID: 372 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int taskmanagerpolling_372 = 372;
	/// <summary>PID: 372 | Type: read</summary>
	public const int taskmanagerpolling = 372;
	/// <summary>PID: 450 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int pollingstatestoragetable_450 = 450;
	/// <summary>PID: 450 | Type: read</summary>
	public const int pollingstatestoragetable = 450;
	/// <summary>PID: 503 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int storagemountname_503 = 503;
	/// <summary>PID: 503 | Type: read</summary>
	public const int storagemountname = 503;
	/// <summary>PID: 506 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int descriptionmountstoragedependencyvalue_506 = 506;
	/// <summary>PID: 506 | Type: read</summary>
	public const int descriptionmountstoragedependencyvalue = 506;
	/// <summary>PID: 599 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int flag599_599 = 599;
	/// <summary>PID: 599 | Type: read</summary>
	public const int flag599 = 599;
	/// <summary>PID: 624 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int ifinoctetsprevious_624 = 624;
	/// <summary>PID: 624 | Type: read</summary>
	public const int ifinoctetsprevious = 624;
	/// <summary>PID: 625 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int ifoutoctetsprevious_625 = 625;
	/// <summary>PID: 625 | Type: read</summary>
	public const int ifoutoctetsprevious = 625;
	/// <summary>PID: 750 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int mystatusstring_750 = 750;
	/// <summary>PID: 750 | Type: read</summary>
	public const int mystatusstring = 750;
	/// <summary>PID: 751 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int mystatusinteger_751 = 751;
	/// <summary>PID: 751 | Type: read</summary>
	public const int mystatusinteger = 751;
	/// <summary>PID: 752 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int mystatusoid_752 = 752;
	/// <summary>PID: 752 | Type: read</summary>
	public const int mystatusoid = 752;
	/// <summary>PID: 753 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int mystatustimeticks_753 = 753;
	/// <summary>PID: 753 | Type: read</summary>
	public const int mystatustimeticks = 753;
	/// <summary>PID: 754 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int mystatusipaddress_754 = 754;
	/// <summary>PID: 754 | Type: read</summary>
	public const int mystatusipaddress = 754;
	/// <summary>PID: 755 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int mystatuscounter_755 = 755;
	/// <summary>PID: 755 | Type: read</summary>
	public const int mystatuscounter = 755;
	/// <summary>PID: 756 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int mystatusgauge_756 = 756;
	/// <summary>PID: 756 | Type: read</summary>
	public const int mystatusgauge = 756;
	/// <summary>PID: 757 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int mystatussettableinteger_757 = 757;
	/// <summary>PID: 757 | Type: read</summary>
	public const int mystatussettableinteger = 757;
	/// <summary>PID: 903 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int ifinmulticastpkts_903 = 903;
	/// <summary>PID: 903 | Type: read</summary>
	public const int ifinmulticastpkts = 903;
	/// <summary>PID: 904 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int ifinbroadcastpkts_904 = 904;
	/// <summary>PID: 904 | Type: read</summary>
	public const int ifinbroadcastpkts = 904;
	/// <summary>PID: 905 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int ifoutmulticastpkts_905 = 905;
	/// <summary>PID: 905 | Type: read</summary>
	public const int ifoutmulticastpkts = 905;
	/// <summary>PID: 906 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int ifoutbroadcastpkts_906 = 906;
	/// <summary>PID: 906 | Type: read</summary>
	public const int ifoutbroadcastpkts = 906;
	/// <summary>PID: 908 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int ifhcinucastpkts_908 = 908;
	/// <summary>PID: 908 | Type: read</summary>
	public const int ifhcinucastpkts = 908;
	/// <summary>PID: 909 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int ifhcinmulticastpkts_909 = 909;
	/// <summary>PID: 909 | Type: read</summary>
	public const int ifhcinmulticastpkts = 909;
	/// <summary>PID: 910 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int ifhcinbroadcastpkts_910 = 910;
	/// <summary>PID: 910 | Type: read</summary>
	public const int ifhcinbroadcastpkts = 910;
	/// <summary>PID: 912 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int ifhcoutucastpkts_912 = 912;
	/// <summary>PID: 912 | Type: read</summary>
	public const int ifhcoutucastpkts = 912;
	/// <summary>PID: 913 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int ifhcoutmulticastpkts_913 = 913;
	/// <summary>PID: 913 | Type: read</summary>
	public const int ifhcoutmulticastpkts = 913;
	/// <summary>PID: 914 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int ifhcoutbroadcastpkts_914 = 914;
	/// <summary>PID: 914 | Type: read</summary>
	public const int ifhcoutbroadcastpkts = 914;
	/// <summary>PID: 918 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int ifconnectorpresent_918 = 918;
	/// <summary>PID: 918 | Type: read</summary>
	public const int ifconnectorpresent = 918;
	/// <summary>PID: 920 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int ifcounterdiscontinuitytime_920 = 920;
	/// <summary>PID: 920 | Type: read</summary>
	public const int ifcounterdiscontinuitytime = 920;
	/// <summary>PID: 980 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int ifxtablewriteinstance_980 = 980;
	/// <summary>PID: 980 | Type: read</summary>
	public const int ifxtablewriteinstance = 980;
	/// <summary>PID: 1000 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int memtotalswap_1000 = 1000;
	/// <summary>PID: 1000 | Type: read</summary>
	public const int memtotalswap = 1000;
	/// <summary>PID: 1001 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int memavailswap_1001 = 1001;
	/// <summary>PID: 1001 | Type: read</summary>
	public const int memavailswap = 1001;
	/// <summary>PID: 1002 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int memusageswap_1002 = 1002;
	/// <summary>PID: 1002 | Type: read</summary>
	public const int memusageswap = 1002;
	/// <summary>PID: 1003 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int memtotalreal_1003 = 1003;
	/// <summary>PID: 1003 | Type: read</summary>
	public const int memtotalreal = 1003;
	/// <summary>PID: 1004 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int memavailreal_1004 = 1004;
	/// <summary>PID: 1004 | Type: read</summary>
	public const int memavailreal = 1004;
	/// <summary>PID: 1005 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int memusagereal_1005 = 1005;
	/// <summary>PID: 1005 | Type: read</summary>
	public const int memusagereal = 1005;
	/// <summary>PID: 1006 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int memusedreal_1006 = 1006;
	/// <summary>PID: 1006 | Type: read</summary>
	public const int memusedreal = 1006;
	/// <summary>PID: 1007 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int membuffer_1007 = 1007;
	/// <summary>PID: 1007 | Type: read</summary>
	public const int membuffer = 1007;
	/// <summary>PID: 1008 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int memcached_1008 = 1008;
	/// <summary>PID: 1008 | Type: read</summary>
	public const int memcached = 1008;
	/// <summary>PID: 1009 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int availablephysicalmemory_1009 = 1009;
	/// <summary>PID: 1009 | Type: read</summary>
	public const int availablephysicalmemory = 1009;
	/// <summary>PID: 1010 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int qa1010_1010 = 1010;
	/// <summary>PID: 1010 | Type: read</summary>
	public const int qa1010 = 1010;
	/// <summary>PID: 1011 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int memoryusage_1011 = 1011;
	/// <summary>PID: 1011 | Type: read</summary>
	public const int memoryusage = 1011;
	/// <summary>PID: 1012 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int percentagememoryusage_1012 = 1012;
	/// <summary>PID: 1012 | Type: read</summary>
	public const int percentagememoryusage = 1012;
	/// <summary>PID: 1048 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int mountname_1048 = 1048;
	/// <summary>PID: 1048 | Type: read</summary>
	public const int mountname = 1048;
	/// <summary>PID: 1080 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int pollingstatelinuxmonitoreddisks_1080 = 1080;
	/// <summary>PID: 1080 | Type: read</summary>
	public const int pollingstatelinuxmonitoreddisks = 1080;
	/// <summary>PID: 1301 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int cpurawuser_1301 = 1301;
	/// <summary>PID: 1301 | Type: read</summary>
	public const int cpurawuser = 1301;
	/// <summary>PID: 1302 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int cpurawnice_1302 = 1302;
	/// <summary>PID: 1302 | Type: read</summary>
	public const int cpurawnice = 1302;
	/// <summary>PID: 1303 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int cpurawsystem_1303 = 1303;
	/// <summary>PID: 1303 | Type: read</summary>
	public const int cpurawsystem = 1303;
	/// <summary>PID: 1304 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int cpurawidle_1304 = 1304;
	/// <summary>PID: 1304 | Type: read</summary>
	public const int cpurawidle = 1304;
	/// <summary>PID: 1305 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int cpurawwait_1305 = 1305;
	/// <summary>PID: 1305 | Type: read</summary>
	public const int cpurawwait = 1305;
	/// <summary>PID: 1306 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int cpurawkernel_1306 = 1306;
	/// <summary>PID: 1306 | Type: read</summary>
	public const int cpurawkernel = 1306;
	/// <summary>PID: 1307 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int cpurawinterrupt_1307 = 1307;
	/// <summary>PID: 1307 | Type: read</summary>
	public const int cpurawinterrupt = 1307;
	/// <summary>PID: 1310 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int rawcpuuser_1310 = 1310;
	/// <summary>PID: 1310 | Type: read</summary>
	public const int rawcpuuser = 1310;
	/// <summary>PID: 1311 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int rawcpunice_1311 = 1311;
	/// <summary>PID: 1311 | Type: read</summary>
	public const int rawcpunice = 1311;
	/// <summary>PID: 1312 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int rawcpusystem_1312 = 1312;
	/// <summary>PID: 1312 | Type: read</summary>
	public const int rawcpusystem = 1312;
	/// <summary>PID: 1313 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int rawcpuidle_1313 = 1313;
	/// <summary>PID: 1313 | Type: read</summary>
	public const int rawcpuidle = 1313;
	/// <summary>PID: 1314 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int rawcpuwait_1314 = 1314;
	/// <summary>PID: 1314 | Type: read</summary>
	public const int rawcpuwait = 1314;
	/// <summary>PID: 1315 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int rawcpukernel_1315 = 1315;
	/// <summary>PID: 1315 | Type: read</summary>
	public const int rawcpukernel = 1315;
	/// <summary>PID: 1316 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int rawcpuinterrupt_1316 = 1316;
	/// <summary>PID: 1316 | Type: read</summary>
	public const int rawcpuinterrupt = 1316;
	/// <summary>PID: 1320 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int rawcpuuserbuf_1320 = 1320;
	/// <summary>PID: 1320 | Type: read</summary>
	public const int rawcpuuserbuf = 1320;
	/// <summary>PID: 1321 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int rawcpunicebuf_1321 = 1321;
	/// <summary>PID: 1321 | Type: read</summary>
	public const int rawcpunicebuf = 1321;
	/// <summary>PID: 1322 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int rawcpusystembuf_1322 = 1322;
	/// <summary>PID: 1322 | Type: read</summary>
	public const int rawcpusystembuf = 1322;
	/// <summary>PID: 1323 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int rawcpuidlebuf_1323 = 1323;
	/// <summary>PID: 1323 | Type: read</summary>
	public const int rawcpuidlebuf = 1323;
	/// <summary>PID: 1324 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int rawcpuwaitbuf_1324 = 1324;
	/// <summary>PID: 1324 | Type: read</summary>
	public const int rawcpuwaitbuf = 1324;
	/// <summary>PID: 1325 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int rawcpukernelbuf_1325 = 1325;
	/// <summary>PID: 1325 | Type: read</summary>
	public const int rawcpukernelbuf = 1325;
	/// <summary>PID: 1326 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int rawcpuinterruptbuf_1326 = 1326;
	/// <summary>PID: 1326 | Type: read</summary>
	public const int rawcpuinterruptbuf = 1326;
	/// <summary>PID: 1330 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int rawcputrig_1330 = 1330;
	/// <summary>PID: 1330 | Type: read</summary>
	public const int rawcputrig = 1330;
	/// <summary>PID: 1501 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int polllvsparameters_1501 = 1501;
	/// <summary>PID: 1501 | Type: read</summary>
	public const int polllvsparameters = 1501;
	/// <summary>PID: 1510 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int lvsversion_1510 = 1510;
	/// <summary>PID: 1510 | Type: read</summary>
	public const int lvsversion = 1510;
	/// <summary>PID: 1511 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int lvsnumservices_1511 = 1511;
	/// <summary>PID: 1511 | Type: read</summary>
	public const int lvsnumservices = 1511;
	/// <summary>PID: 1512 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int lvshashtablesize_1512 = 1512;
	/// <summary>PID: 1512 | Type: read</summary>
	public const int lvshashtablesize = 1512;
	/// <summary>PID: 1513 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int lvstcptimeout_1513 = 1513;
	/// <summary>PID: 1513 | Type: read</summary>
	public const int lvstcptimeout = 1513;
	/// <summary>PID: 1514 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int lvstcpfintimeout_1514 = 1514;
	/// <summary>PID: 1514 | Type: read</summary>
	public const int lvstcpfintimeout = 1514;
	/// <summary>PID: 1515 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int lvsudptimeout_1515 = 1515;
	/// <summary>PID: 1515 | Type: read</summary>
	public const int lvsudptimeout = 1515;
	/// <summary>PID: 1516 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int lvsdaemonstate_1516 = 1516;
	/// <summary>PID: 1516 | Type: read</summary>
	public const int lvsdaemonstate = 1516;
	/// <summary>PID: 1517 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int lvsmcastint_1517 = 1517;
	/// <summary>PID: 1517 | Type: read</summary>
	public const int lvsmcastint = 1517;
	/// <summary>PID: 2002 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int pathlist_2002 = 2002;
	/// <summary>PID: 2002 | Type: read</summary>
	public const int pathlist = 2002;
	/// <summary>PID: 2003 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int csvfilelist_2003 = 2003;
	/// <summary>PID: 2003 | Type: read</summary>
	public const int csvfilelist = 2003;
	/// <summary>PID: 2011 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int pathofthefiles_2011 = 2011;
	/// <summary>PID: 2011 | Type: read</summary>
	public const int pathofthefiles = 2011;
	/// <summary>PID: 2013 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int csvfilename_2013 = 2013;
	/// <summary>PID: 2013 | Type: read</summary>
	public const int csvfilename = 2013;
	/// <summary>PID: 8200 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int addexternaldataentry_8200 = 8200;
	/// <summary>PID: 8200 | Type: read</summary>
	public const int addexternaldataentry = 8200;
	/// <summary>PID: 8201 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int removeexternaldataentry_8201 = 8201;
	/// <summary>PID: 8201 | Type: read</summary>
	public const int removeexternaldataentry = 8201;
	/// <summary>PID: 8400 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int processtovalidate_8400 = 8400;
	/// <summary>PID: 8400 | Type: read</summary>
	public const int processtovalidate = 8400;
	/// <summary>PID: 8402 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int processvalidationlistbuffer_8402 = 8402;
	/// <summary>PID: 8402 | Type: read</summary>
	public const int processvalidationlistbuffer = 8402;
	/// <summary>PID: 8404 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int unlistedprocess_8404 = 8404;
	/// <summary>PID: 8404 | Type: read</summary>
	public const int unlistedprocess = 8404;
	/// <summary>PID: 10150 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int diskiotablereadfinished_10150 = 10150;
	/// <summary>PID: 10150 | Type: read</summary>
	public const int diskiotablereadfinished = 10150;
	/// <summary>PID: 10151 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int tickcounter_10151 = 10151;
	/// <summary>PID: 10151 | Type: read</summary>
	public const int tickcounter = 10151;
	/// <summary>PID: 11000 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int readinstance_11000 = 11000;
	/// <summary>PID: 11000 | Type: read</summary>
	public const int readinstance = 11000;
	/// <summary>PID: 11111 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int linuxplatformprotocoldriver_11111 = 11111;
	/// <summary>PID: 11111 | Type: read</summary>
	public const int linuxplatformprotocoldriver = 11111;
	/// <summary>PID: 22200 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int tcprtoalgorithm_22200 = 22200;
	/// <summary>PID: 22200 | Type: read</summary>
	public const int tcprtoalgorithm = 22200;
	/// <summary>PID: 22201 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int tcprtomin_22201 = 22201;
	/// <summary>PID: 22201 | Type: read</summary>
	public const int tcprtomin = 22201;
	/// <summary>PID: 22202 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int tcprtomax_22202 = 22202;
	/// <summary>PID: 22202 | Type: read</summary>
	public const int tcprtomax = 22202;
	/// <summary>PID: 22203 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int tcpmaxconn_22203 = 22203;
	/// <summary>PID: 22203 | Type: read</summary>
	public const int tcpmaxconn = 22203;
	/// <summary>PID: 22204 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int tcpactiveopens_22204 = 22204;
	/// <summary>PID: 22204 | Type: read</summary>
	public const int tcpactiveopens = 22204;
	/// <summary>PID: 22205 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int tcppassiveopens_22205 = 22205;
	/// <summary>PID: 22205 | Type: read</summary>
	public const int tcppassiveopens = 22205;
	/// <summary>PID: 22206 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int tcpattemptfails_22206 = 22206;
	/// <summary>PID: 22206 | Type: read</summary>
	public const int tcpattemptfails = 22206;
	/// <summary>PID: 22207 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int tcpestabresets_22207 = 22207;
	/// <summary>PID: 22207 | Type: read</summary>
	public const int tcpestabresets = 22207;
	/// <summary>PID: 22208 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int tcpcurrestab_22208 = 22208;
	/// <summary>PID: 22208 | Type: read</summary>
	public const int tcpcurrestab = 22208;
	/// <summary>PID: 22209 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int tcpinsegs_22209 = 22209;
	/// <summary>PID: 22209 | Type: read</summary>
	public const int tcpinsegs = 22209;
	/// <summary>PID: 22210 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int tcpoutsegs_22210 = 22210;
	/// <summary>PID: 22210 | Type: read</summary>
	public const int tcpoutsegs = 22210;
	/// <summary>PID: 22211 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int tcpretranssegs_22211 = 22211;
	/// <summary>PID: 22211 | Type: read</summary>
	public const int tcpretranssegs = 22211;
	/// <summary>PID: 22212 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int tcpinerrs_22212 = 22212;
	/// <summary>PID: 22212 | Type: read</summary>
	public const int tcpinerrs = 22212;
	/// <summary>PID: 22213 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int tcpoutrsts_22213 = 22213;
	/// <summary>PID: 22213 | Type: read</summary>
	public const int tcpoutrsts = 22213;
	/// <summary>PID: 40001 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int pollingipaddress_40001 = 40001;
	/// <summary>PID: 40001 | Type: read</summary>
	public const int pollingipaddress = 40001;
	/// <summary>PID: 40031 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int pollingperiod_40031 = 40031;
	/// <summary>PID: 40031 | Type: read</summary>
	public const int pollingperiod = 40031;
	/// <summary>PID: 40033 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int pollingexecution_40033 = 40033;
	/// <summary>PID: 40033 | Type: read</summary>
	public const int pollingexecution = 40033;
	/// <summary>PID: 50000 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int pingactive_50000 = 50000;
	/// <summary>PID: 50000 | Type: read</summary>
	public const int pingactive = 50000;
	/// <summary>PID: 50002 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int pingcycle_50002 = 50002;
	/// <summary>PID: 50002 | Type: read</summary>
	public const int pingcycle = 50002;
	/// <summary>PID: 50004 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int pingtimeout_50004 = 50004;
	/// <summary>PID: 50004 | Type: read</summary>
	public const int pingtimeout = 50004;
	/// <summary>PID: 50006 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int pingnumber_50006 = 50006;
	/// <summary>PID: 50006 | Type: read</summary>
	public const int pingnumber = 50006;
	/// <summary>PID: 50010 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int pingpreviousexecution_50010 = 50010;
	/// <summary>PID: 50010 | Type: read</summary>
	public const int pingpreviousexecution = 50010;
	/// <summary>PID: 50012 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int pingresult_50012 = 50012;
	/// <summary>PID: 50012 | Type: read</summary>
	public const int pingresult = 50012;
	/// <summary>PID: 50014 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int pingmeanrtt_50014 = 50014;
	/// <summary>PID: 50014 | Type: read</summary>
	public const int pingmeanrtt = 50014;
	/// <summary>PID: 50016 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int pingminrtt_50016 = 50016;
	/// <summary>PID: 50016 | Type: read</summary>
	public const int pingminrtt = 50016;
	/// <summary>PID: 50017 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int pingmaxrtt_50017 = 50017;
	/// <summary>PID: 50017 | Type: read</summary>
	public const int pingmaxrtt = 50017;
	/// <summary>PID: 50018 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int pingavgsuccess_50018 = 50018;
	/// <summary>PID: 50018 | Type: read</summary>
	public const int pingavgsuccess = 50018;
	/// <summary>PID: 50021 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int pingexecutioncounter_50021 = 50021;
	/// <summary>PID: 50021 | Type: read</summary>
	public const int pingexecutioncounter = 50021;
	/// <summary>PID: 50023 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int pingstartstoptimer_50023 = 50023;
	/// <summary>PID: 50023 | Type: read</summary>
	public const int pingstartstoptimer = 50023;
	/// <summary>PID: 50024 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int pingcyclerttcounter_50024 = 50024;
	/// <summary>PID: 50024 | Type: read</summary>
	public const int pingcyclerttcounter = 50024;
	/// <summary>PID: 50025 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int pingcyclerequestscounter_50025 = 50025;
	/// <summary>PID: 50025 | Type: read</summary>
	public const int pingcyclerequestscounter = 50025;
	/// <summary>PID: 50026 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int pingcyclesuccesscounter_50026 = 50026;
	/// <summary>PID: 50026 | Type: read</summary>
	public const int pingcyclesuccesscounter = 50026;
	/// <summary>PID: 50027 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int pingcycleminrtt_50027 = 50027;
	/// <summary>PID: 50027 | Type: read</summary>
	public const int pingcycleminrtt = 50027;
	/// <summary>PID: 50028 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int pingcyclemaxrtt_50028 = 50028;
	/// <summary>PID: 50028 | Type: read</summary>
	public const int pingcyclemaxrtt = 50028;
	/// <summary>PID: 50039 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int pingfirstdailyupdatetime_50039 = 50039;
	/// <summary>PID: 50039 | Type: read</summary>
	public const int pingfirstdailyupdatetime = 50039;
	/// <summary>PID: 50040 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int ping_dailyavailability_50040 = 50040;
	/// <summary>PID: 50040 | Type: read</summary>
	public const int ping_dailyavailability = 50040;
	/// <summary>PID: 50041 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int ping_weeklyavailability_50041 = 50041;
	/// <summary>PID: 50041 | Type: read</summary>
	public const int ping_weeklyavailability = 50041;
	/// <summary>PID: 50042 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int ping_monthlyavailability_50042 = 50042;
	/// <summary>PID: 50042 | Type: read</summary>
	public const int ping_monthlyavailability = 50042;
	/// <summary>PID: 50043 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int ping_packetlossrequests_50043 = 50043;
	/// <summary>PID: 50043 | Type: read</summary>
	public const int ping_packetlossrequests = 50043;
	/// <summary>PID: 50044 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int ping_packetlosscycles_50044 = 50044;
	/// <summary>PID: 50044 | Type: read</summary>
	public const int ping_packetlosscycles = 50044;
	/// <summary>PID: 50045 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int ping_lastrequestsbuffer_50045 = 50045;
	/// <summary>PID: 50045 | Type: read</summary>
	public const int ping_lastrequestsbuffer = 50045;
	/// <summary>PID: 50046 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int ping_lastcyclesbuffer_50046 = 50046;
	/// <summary>PID: 50046 | Type: read</summary>
	public const int ping_lastcyclesbuffer = 50046;
	/// <summary>PID: 50047 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int pingrequestshistory_50047 = 50047;
	/// <summary>PID: 50047 | Type: read</summary>
	public const int pingrequestshistory = 50047;
	/// <summary>PID: 50050 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int refdailydate_50050 = 50050;
	/// <summary>PID: 50050 | Type: read</summary>
	public const int refdailydate = 50050;
	/// <summary>PID: 50051 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int dailytotalcounter_50051 = 50051;
	/// <summary>PID: 50051 | Type: read</summary>
	public const int dailytotalcounter = 50051;
	/// <summary>PID: 50052 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int dailysuccesscounter_50052 = 50052;
	/// <summary>PID: 50052 | Type: read</summary>
	public const int dailysuccesscounter = 50052;
	/// <summary>PID: 50053 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int refweeklydate_50053 = 50053;
	/// <summary>PID: 50053 | Type: read</summary>
	public const int refweeklydate = 50053;
	/// <summary>PID: 50054 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int weeklytotalcounter_50054 = 50054;
	/// <summary>PID: 50054 | Type: read</summary>
	public const int weeklytotalcounter = 50054;
	/// <summary>PID: 50055 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int weeklysuccesscounter_50055 = 50055;
	/// <summary>PID: 50055 | Type: read</summary>
	public const int weeklysuccesscounter = 50055;
	/// <summary>PID: 50056 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int refmonthlydate_50056 = 50056;
	/// <summary>PID: 50056 | Type: read</summary>
	public const int refmonthlydate = 50056;
	/// <summary>PID: 50057 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int monthlytotalcounter_50057 = 50057;
	/// <summary>PID: 50057 | Type: read</summary>
	public const int monthlytotalcounter = 50057;
	/// <summary>PID: 50058 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int monthlysuccesscounter_50058 = 50058;
	/// <summary>PID: 50058 | Type: read</summary>
	public const int monthlysuccesscounter = 50058;
	/// <summary>PID: 50100 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int pollhpparameters_50100 = 50100;
	/// <summary>PID: 50100 | Type: read</summary>
	public const int pollhpparameters = 50100;
	/// <summary>PID: 50101 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int cpqhoname_50101 = 50101;
	/// <summary>PID: 50101 | Type: read</summary>
	public const int cpqhoname = 50101;
	/// <summary>PID: 50102 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int cpqhoversion_50102 = 50102;
	/// <summary>PID: 50102 | Type: read</summary>
	public const int cpqhoversion = 50102;
	/// <summary>PID: 50103 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int cpqhodesc_50103 = 50103;
	/// <summary>PID: 50103 | Type: read</summary>
	public const int cpqhodesc = 50103;
	/// <summary>PID: 50104 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int cpqsiproductname_50104 = 50104;
	/// <summary>PID: 50104 | Type: read</summary>
	public const int cpqsiproductname = 50104;
	/// <summary>PID: 50105 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int cpqsisysserialnum_50105 = 50105;
	/// <summary>PID: 50105 | Type: read</summary>
	public const int cpqsisysserialnum = 50105;
	/// <summary>PID: 50106 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int cpqsesysromver_50106 = 50106;
	/// <summary>PID: 50106 | Type: read</summary>
	public const int cpqsesysromver = 50106;
	/// <summary>PID: 50110 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int cpqhethermaltempstatus_50110 = 50110;
	/// <summary>PID: 50110 | Type: read</summary>
	public const int cpqhethermaltempstatus = 50110;
	/// <summary>PID: 50111 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int cpqhethermalsystemfanstatus_50111 = 50111;
	/// <summary>PID: 50111 | Type: read</summary>
	public const int cpqhethermalsystemfanstatus = 50111;
	/// <summary>PID: 50112 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int cpqhethermalcpufanstatus_50112 = 50112;
	/// <summary>PID: 50112 | Type: read</summary>
	public const int cpqhethermalcpufanstatus = 50112;
	/// <summary>PID: 50113 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int hppwrsupplycondition_50113 = 50113;
	/// <summary>PID: 50113 | Type: read</summary>
	public const int hppwrsupplycondition = 50113;
	/// <summary>PID: 50114 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int cpqhemibcondition_50114 = 50114;
	/// <summary>PID: 50114 | Type: read</summary>
	public const int cpqhemibcondition = 50114;
	/// <summary>PID: 50150 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int hppollingip_50150 = 50150;
	/// <summary>PID: 50150 | Type: read</summary>
	public const int hppollingip = 50150;
	/// <summary>PID: 50160 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int hppollingipstatus_50160 = 50160;
	/// <summary>PID: 50160 | Type: read</summary>
	public const int hppollingipstatus = 50160;
	/// <summary>PID: 50951 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int cpqsm2cntlrromdatesnmp_50951 = 50951;
	/// <summary>PID: 50951 | Type: read</summary>
	public const int cpqsm2cntlrromdatesnmp = 50951;
	/// <summary>PID: 50952 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int cpqsm2cntlrromrevision_50952 = 50952;
	/// <summary>PID: 50952 | Type: read</summary>
	public const int cpqsm2cntlrromrevision = 50952;
	/// <summary>PID: 50953 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int cpqsm2cntlrromdate_50953 = 50953;
	/// <summary>PID: 50953 | Type: read</summary>
	public const int cpqsm2cntlrromdate = 50953;
	/// <summary>PID: 51100 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int polldellparameters_51100 = 51100;
	/// <summary>PID: 51100 | Type: read</summary>
	public const int polldellparameters = 51100;
	/// <summary>PID: 51101 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int operatingsystemoperatingsystemname_51101 = 51101;
	/// <summary>PID: 51101 | Type: read</summary>
	public const int operatingsystemoperatingsystemname = 51101;
	/// <summary>PID: 51102 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int operatingsystemoperatingsystemversionname_51102 = 51102;
	/// <summary>PID: 51102 | Type: read</summary>
	public const int operatingsystemoperatingsystemversionname = 51102;
	/// <summary>PID: 51103 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int chassismodelname_51103 = 51103;
	/// <summary>PID: 51103 | Type: read</summary>
	public const int chassismodelname = 51103;
	/// <summary>PID: 51104 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int chassisservicetagname_51104 = 51104;
	/// <summary>PID: 51104 | Type: read</summary>
	public const int chassisservicetagname = 51104;
	/// <summary>PID: 51105 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int systembiosversionname_51105 = 51105;
	/// <summary>PID: 51105 | Type: read</summary>
	public const int systembiosversionname = 51105;
	/// <summary>PID: 51106 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int systemmanagementsoftwareversionnumbername_51106 = 51106;
	/// <summary>PID: 51106 | Type: read</summary>
	public const int systemmanagementsoftwareversionnumbername = 51106;
	/// <summary>PID: 52110 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int systemstatepowersupplystatuscombined_52110 = 52110;
	/// <summary>PID: 52110 | Type: read</summary>
	public const int systemstatepowersupplystatuscombined = 52110;
	/// <summary>PID: 52111 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int systemstatetemperaturestatuscombined_52111 = 52111;
	/// <summary>PID: 52111 | Type: read</summary>
	public const int systemstatetemperaturestatuscombined = 52111;
	/// <summary>PID: 52112 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int systemstatecoolingdevicestatuscombined_52112 = 52112;
	/// <summary>PID: 52112 | Type: read</summary>
	public const int systemstatecoolingdevicestatuscombined = 52112;
	/// <summary>PID: 52113 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int systemstateglobalsystemstatus_52113 = 52113;
	/// <summary>PID: 52113 | Type: read</summary>
	public const int systemstateglobalsystemstatus = 52113;
	/// <summary>PID: 52114 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public const int systemstatechassisstatus_52114 = 52114;
	/// <summary>PID: 52114 | Type: read</summary>
	public const int systemstatechassisstatus = 52114;
	public class Write
	{
		/// <summary>PID: 6 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int clearmountavailability_6 = 6;
		/// <summary>PID: 6 | Type: write</summary>
		public const int clearmountavailability = 6;
		/// <summary>PID: 8 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int clearprocesscounter_8 = 8;
		/// <summary>PID: 8 | Type: write</summary>
		public const int clearprocesscounter = 8;
		/// <summary>PID: 9 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int clearmountstoragetable_9 = 9;
		/// <summary>PID: 9 | Type: write</summary>
		public const int clearmountstoragetable = 9;
		/// <summary>PID: 29 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int clean_tm_trigger_29 = 29;
		/// <summary>PID: 29 | Type: write</summary>
		public const int clean_tm_trigger = 29;
		/// <summary>PID: 31 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int taskmanagerautoclear_31 = 31;
		/// <summary>PID: 31 | Type: write</summary>
		public const int taskmanagerautoclear = 31;
		/// <summary>PID: 41 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int memorycalculationchange_41 = 41;
		/// <summary>PID: 41 | Type: write</summary>
		public const int memorycalculationchange = 41;
		/// <summary>PID: 49 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int check_processor_nbr_trigger_49 = 49;
		/// <summary>PID: 49 | Type: write</summary>
		public const int check_processor_nbr_trigger = 49;
		/// <summary>PID: 58 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int interfacemonitorconfig_58 = 58;
		/// <summary>PID: 58 | Type: write</summary>
		public const int interfacemonitorconfig = 58;
		/// <summary>PID: 59 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int changeallinterfacemonitoringstates_59 = 59;
		/// <summary>PID: 59 | Type: write</summary>
		public const int changeallinterfacemonitoringstates = 59;
		/// <summary>PID: 79 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int processcounter_contextmenu_79 = 79;
		/// <summary>PID: 79 | Type: write</summary>
		public const int processcounter_contextmenu = 79;
		/// <summary>PID: 122 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int normalizetaskmanagerprocesscpu_122 = 122;
		/// <summary>PID: 122 | Type: write</summary>
		public const int normalizetaskmanagerprocesscpu = 122;
		/// <summary>PID: 123 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int normalizetaskmanagerprocessmemusage_123 = 123;
		/// <summary>PID: 123 | Type: write</summary>
		public const int normalizetaskmanagerprocessmemusage = 123;
		/// <summary>PID: 217 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int updatejobstatus_217 = 217;
		/// <summary>PID: 217 | Type: write</summary>
		public const int updatejobstatus = 217;
		/// <summary>PID: 235 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int inputswitcheractiveinput_235 = 235;
		/// <summary>PID: 235 | Type: write</summary>
		public const int inputswitcheractiveinput = 235;
		/// <summary>PID: 269 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int processcounterdisplaykey_269 = 269;
		/// <summary>PID: 269 | Type: write</summary>
		public const int processcounterdisplaykey = 269;
		/// <summary>PID: 273 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int processcounterrunpath_273 = 273;
		/// <summary>PID: 273 | Type: write</summary>
		public const int processcounterrunpath = 273;
		/// <summary>PID: 373 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int taskmanagerpolling_373 = 373;
		/// <summary>PID: 373 | Type: write</summary>
		public const int taskmanagerpolling = 373;
		/// <summary>PID: 451 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int pollingstatestoragetable_451 = 451;
		/// <summary>PID: 451 | Type: write</summary>
		public const int pollingstatestoragetable = 451;
		/// <summary>PID: 499 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int mountstoragepage_499 = 499;
		/// <summary>PID: 499 | Type: write</summary>
		public const int mountstoragepage = 499;
		/// <summary>PID: 504 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int storageavailability_contextmenu_504 = 504;
		/// <summary>PID: 504 | Type: write</summary>
		public const int storageavailability_contextmenu = 504;
		/// <summary>PID: 555 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int descriptionmountstorage_555 = 555;
		/// <summary>PID: 555 | Type: write</summary>
		public const int descriptionmountstorage = 555;
		/// <summary>PID: 655 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int interfacesinterfacebandwidth_655 = 655;
		/// <summary>PID: 655 | Type: write</summary>
		public const int interfacesinterfacebandwidth = 655;
		/// <summary>PID: 767 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int mystatussettableinteger_767 = 767;
		/// <summary>PID: 767 | Type: write</summary>
		public const int mystatussettableinteger = 767;
		/// <summary>PID: 828 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int monitorinterfacetableconfig_828 = 828;
		/// <summary>PID: 828 | Type: write</summary>
		public const int monitorinterfacetableconfig = 828;
		/// <summary>PID: 999 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int morememorybutton_999 = 999;
		/// <summary>PID: 999 | Type: write</summary>
		public const int morememorybutton = 999;
		/// <summary>PID: 1019 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int moreprocessbutton_1019 = 1019;
		/// <summary>PID: 1019 | Type: write</summary>
		public const int moreprocessbutton = 1019;
		/// <summary>PID: 1049 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int mountavailability_contextmenu_1049 = 1049;
		/// <summary>PID: 1049 | Type: write</summary>
		public const int mountavailability_contextmenu = 1049;
		/// <summary>PID: 1081 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int pollingstatelinuxmonitoreddisks_1081 = 1081;
		/// <summary>PID: 1081 | Type: write</summary>
		public const int pollingstatelinuxmonitoreddisks = 1081;
		/// <summary>PID: 1098 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int generalbutton2_1098 = 1098;
		/// <summary>PID: 1098 | Type: write</summary>
		public const int generalbutton2 = 1098;
		/// <summary>PID: 1099 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int generalbutton_1099 = 1099;
		/// <summary>PID: 1099 | Type: write</summary>
		public const int generalbutton = 1099;
		/// <summary>PID: 1200 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int clearnormalizetm_1200 = 1200;
		/// <summary>PID: 1200 | Type: write</summary>
		public const int clearnormalizetm = 1200;
		/// <summary>PID: 1201 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int normalizetm_1201 = 1201;
		/// <summary>PID: 1201 | Type: write</summary>
		public const int normalizetm = 1201;
		/// <summary>PID: 1202 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int morediskspagebuttons_1202 = 1202;
		/// <summary>PID: 1202 | Type: write</summary>
		public const int morediskspagebuttons = 1202;
		/// <summary>PID: 1500 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int pgblinuxvirtualserver_1500 = 1500;
		/// <summary>PID: 1500 | Type: write</summary>
		public const int pgblinuxvirtualserver = 1500;
		/// <summary>PID: 1502 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int polllvsparameters_1502 = 1502;
		/// <summary>PID: 1502 | Type: write</summary>
		public const int polllvsparameters = 1502;
		/// <summary>PID: 2012 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int pathofthefiles_2012 = 2012;
		/// <summary>PID: 2012 | Type: write</summary>
		public const int pathofthefiles = 2012;
		/// <summary>PID: 2014 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int csvfilename_2014 = 2014;
		/// <summary>PID: 2014 | Type: write</summary>
		public const int csvfilename = 2014;
		/// <summary>PID: 2015 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int csvbutton_2015 = 2015;
		/// <summary>PID: 2015 | Type: write</summary>
		public const int csvbutton = 2015;
		/// <summary>PID: 8104 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int externaldataoverviewfunctionality_8104 = 8104;
		/// <summary>PID: 8104 | Type: write</summary>
		public const int externaldataoverviewfunctionality = 8104;
		/// <summary>PID: 8300 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int addexternaldataentry_8300 = 8300;
		/// <summary>PID: 8300 | Type: write</summary>
		public const int addexternaldataentry = 8300;
		/// <summary>PID: 8301 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int removeexternaldataentry_8301 = 8301;
		/// <summary>PID: 8301 | Type: write</summary>
		public const int removeexternaldataentry = 8301;
		/// <summary>PID: 8500 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int processtovalidate_8500 = 8500;
		/// <summary>PID: 8500 | Type: write</summary>
		public const int processtovalidate = 8500;
		/// <summary>PID: 8501 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int validationbutton_8501 = 8501;
		/// <summary>PID: 8501 | Type: write</summary>
		public const int validationbutton = 8501;
		/// <summary>PID: 8504 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int unlistedprocess_8504 = 8504;
		/// <summary>PID: 8504 | Type: write</summary>
		public const int unlistedprocess = 8504;
		/// <summary>PID: 8613 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int processvalidationprocessmonitoring_8613 = 8613;
		/// <summary>PID: 8613 | Type: write</summary>
		public const int processvalidationprocessmonitoring = 8613;
		/// <summary>PID: 10016 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int exterrfix_10016 = 10016;
		/// <summary>PID: 10016 | Type: write</summary>
		public const int exterrfix = 10016;
		/// <summary>PID: 10026 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int exterrfixoid_10026 = 10026;
		/// <summary>PID: 10026 | Type: write</summary>
		public const int exterrfixoid = 10026;
		/// <summary>PID: 22299 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int pagebuttontcp_22299 = 22299;
		/// <summary>PID: 22299 | Type: write</summary>
		public const int pagebuttontcp = 22299;
		/// <summary>PID: 22502 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int tcpconnectionstate_22502 = 22502;
		/// <summary>PID: 22502 | Type: write</summary>
		public const int tcpconnectionstate = 22502;
		/// <summary>PID: 40003 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int triggerupdateaddress_40003 = 40003;
		/// <summary>PID: 40003 | Type: write</summary>
		public const int triggerupdateaddress = 40003;
		/// <summary>PID: 40004 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int triggerrowdisabled_40004 = 40004;
		/// <summary>PID: 40004 | Type: write</summary>
		public const int triggerrowdisabled = 40004;
		/// <summary>PID: 40005 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int triggerrowundefined_40005 = 40005;
		/// <summary>PID: 40005 | Type: write</summary>
		public const int triggerrowundefined = 40005;
		/// <summary>PID: 40021 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int portlisttimeoutport_40021 = 40021;
		/// <summary>PID: 40021 | Type: write</summary>
		public const int portlisttimeoutport = 40021;
		/// <summary>PID: 40022 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int portliststatus_40022 = 40022;
		/// <summary>PID: 40022 | Type: write</summary>
		public const int portliststatus = 40022;
		/// <summary>PID: 40028 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int portlistretries_40028 = 40028;
		/// <summary>PID: 40028 | Type: write</summary>
		public const int portlistretries = 40028;
		/// <summary>PID: 40032 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int pollingperiod_40032 = 40032;
		/// <summary>PID: 40032 | Type: write</summary>
		public const int pollingperiod = 40032;
		/// <summary>PID: 40034 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int pollingexecution_40034 = 40034;
		/// <summary>PID: 40034 | Type: write</summary>
		public const int pollingexecution = 40034;
		/// <summary>PID: 40043 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int addport_40043 = 40043;
		/// <summary>PID: 40043 | Type: write</summary>
		public const int addport = 40043;
		/// <summary>PID: 40045 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int removeport_40045 = 40045;
		/// <summary>PID: 40045 | Type: write</summary>
		public const int removeport = 40045;
		/// <summary>PID: 50001 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int pingactive_50001 = 50001;
		/// <summary>PID: 50001 | Type: write</summary>
		public const int pingactive = 50001;
		/// <summary>PID: 50003 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int pingcycle_50003 = 50003;
		/// <summary>PID: 50003 | Type: write</summary>
		public const int pingcycle = 50003;
		/// <summary>PID: 50005 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int pingtimeout_50005 = 50005;
		/// <summary>PID: 50005 | Type: write</summary>
		public const int pingtimeout = 50005;
		/// <summary>PID: 50007 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int pingnumber_50007 = 50007;
		/// <summary>PID: 50007 | Type: write</summary>
		public const int pingnumber = 50007;
		/// <summary>PID: 50048 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int pingrequestshistory_50048 = 50048;
		/// <summary>PID: 50048 | Type: write</summary>
		public const int pingrequestshistory = 50048;
		/// <summary>PID: 50200 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int pollhpparameters_50200 = 50200;
		/// <summary>PID: 50200 | Type: write</summary>
		public const int pollhpparameters = 50200;
		/// <summary>PID: 50250 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int hppollingip_50250 = 50250;
		/// <summary>PID: 50250 | Type: write</summary>
		public const int hppollingip = 50250;
		/// <summary>PID: 50260 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int hppollingipstatus_50260 = 50260;
		/// <summary>PID: 50260 | Type: write</summary>
		public const int hppollingipstatus = 50260;
		/// <summary>PID: 50949 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int pagebuttonhp_50949 = 50949;
		/// <summary>PID: 50949 | Type: write</summary>
		public const int pagebuttonhp = 50949;
		/// <summary>PID: 50950 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int pagebuttonhp2_50950 = 50950;
		/// <summary>PID: 50950 | Type: write</summary>
		public const int pagebuttonhp2 = 50950;
		/// <summary>PID: 51200 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int polldellparameters_51200 = 51200;
		/// <summary>PID: 51200 | Type: write</summary>
		public const int polldellparameters = 51200;
		/// <summary>PID: 51900 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int dellpagebutton_51900 = 51900;
		/// <summary>PID: 51900 | Type: write</summary>
		public const int dellpagebutton = 51900;
		/// <summary>PID: 51901 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int dellpagebutton2_51901 = 51901;
		/// <summary>PID: 51901 | Type: write</summary>
		public const int dellpagebutton2 = 51901;
		/// <summary>PID: 53421 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int memorydevicestatesettings_53421 = 53421;
		/// <summary>PID: 53421 | Type: write</summary>
		public const int memorydevicestatesettings = 53421;
		/// <summary>PID: 53441 | Type: write</summary>
		[EditorBrowsable(EditorBrowsableState.Never)]
		public const int memorydevicestatesettingssnmpset_53441 = 53441;
		/// <summary>PID: 53441 | Type: write</summary>
		public const int memorydevicestatesettingssnmpset = 53441;
	}
	public class Hrdevicetype
	{
		/// <summary>PID: 50</summary>
		public const int tablePid = 50;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 51</summary>
		public const int indexColumnPid = 51;
		public class Pid
		{
			/// <summary>PID: 51 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int hrdevicetype_inst_51 = 51;
			/// <summary>PID: 51 | Type: read</summary>
			public const int hrdevicetype_inst = 51;
			/// <summary>PID: 52 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int hrdevicetype_col_52 = 52;
			/// <summary>PID: 52 | Type: read</summary>
			public const int hrdevicetype_col = 52;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int hrdevicetype_inst_51 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int hrdevicetype_inst = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int hrdevicetype_col_52 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int hrdevicetype_col = 1;
		}
	}
	public class Processcounter
	{
		/// <summary>PID: 70</summary>
		public const int tablePid = 70;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 71</summary>
		public const int indexColumnPid = 71;
		public class Pid
		{
			/// <summary>PID: 71 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int processcounterindex_71 = 71;
			/// <summary>PID: 71 | Type: read</summary>
			public const int processcounterindex = 71;
			/// <summary>PID: 72 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int processcounterinstancecount_72 = 72;
			/// <summary>PID: 72 | Type: read</summary>
			public const int processcounterinstancecount = 72;
			/// <summary>PID: 73 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int processcounterrunpath_73 = 73;
			/// <summary>PID: 73 | Type: read</summary>
			public const int processcounterrunpath = 73;
			/// <summary>PID: 69 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int processcounterdisplaykey_69 = 69;
			/// <summary>PID: 69 | Type: read</summary>
			public const int processcounterdisplaykey = 69;
			/// <summary>PID: 64 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int processcounterprocesscpu_64 = 64;
			/// <summary>PID: 64 | Type: read</summary>
			public const int processcounterprocesscpu = 64;
			/// <summary>PID: 66 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int processcounterprocessmemusage_66 = 66;
			/// <summary>PID: 66 | Type: read</summary>
			public const int processcounterprocessmemusage = 66;
			/// <summary>PID: 67 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int processcounterprocessidentifier_67 = 67;
			/// <summary>PID: 67 | Type: read</summary>
			public const int processcounterprocessidentifier = 67;
			/// <summary>PID: 63 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int processcounterrunarguments_63 = 63;
			/// <summary>PID: 63 | Type: read</summary>
			public const int processcounterrunarguments = 63;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int processcounterindex_71 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int processcounterindex = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int processcounterinstancecount_72 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int processcounterinstancecount = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int processcounterrunpath_73 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int processcounterrunpath = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int processcounterdisplaykey_69 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int processcounterdisplaykey = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int processcounterprocesscpu_64 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int processcounterprocesscpu = 4;
			/// <summary>IDX: 5 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int processcounterprocessmemusage_66 = 5;
			/// <summary>IDX: 5 | Type: read</summary>
			public const int processcounterprocessmemusage = 5;
			/// <summary>IDX: 6 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int processcounterprocessidentifier_67 = 6;
			/// <summary>IDX: 6 | Type: read</summary>
			public const int processcounterprocessidentifier = 6;
			/// <summary>IDX: 7 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int processcounterrunarguments_63 = 7;
			/// <summary>IDX: 7 | Type: read</summary>
			public const int processcounterrunarguments = 7;
		}
	}
	public class Taskmanager
	{
		/// <summary>PID: 80</summary>
		public const int tablePid = 80;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 83</summary>
		public const int indexColumnPid = 83;
		public class Pid
		{
			/// <summary>PID: 83 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int taskmanagerprocessnameindex_83 = 83;
			/// <summary>PID: 83 | Type: read</summary>
			public const int taskmanagerprocessnameindex = 83;
			/// <summary>PID: 81 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int taskmanagerprocesspid_81 = 81;
			/// <summary>PID: 81 | Type: read</summary>
			public const int taskmanagerprocesspid = 81;
			/// <summary>PID: 82 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int taskmanagerprocessname_82 = 82;
			/// <summary>PID: 82 | Type: read</summary>
			public const int taskmanagerprocessname = 82;
			/// <summary>PID: 84 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int taskmanagerprocesscpu_84 = 84;
			/// <summary>PID: 84 | Type: read</summary>
			public const int taskmanagerprocesscpu = 84;
			/// <summary>PID: 85 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int taskmanagerprocesscputime_85 = 85;
			/// <summary>PID: 85 | Type: read</summary>
			public const int taskmanagerprocesscputime = 85;
			/// <summary>PID: 86 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int taskmanagerprocessmemusage_86 = 86;
			/// <summary>PID: 86 | Type: read</summary>
			public const int taskmanagerprocessmemusage = 86;
			/// <summary>PID: 87 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int taskmanagerrowstatus_87 = 87;
			/// <summary>PID: 87 | Type: read</summary>
			public const int taskmanagerrowstatus = 87;
			/// <summary>PID: 88 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int taskmanagerprevioustime_88 = 88;
			/// <summary>PID: 88 | Type: read</summary>
			public const int taskmanagerprevioustime = 88;
			/// <summary>PID: 89 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int taskmanagerpreviousperf_89 = 89;
			/// <summary>PID: 89 | Type: read</summary>
			public const int taskmanagerpreviousperf = 89;
			/// <summary>PID: 96 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int taskmanagerprocessrunstatus_96 = 96;
			/// <summary>PID: 96 | Type: read</summary>
			public const int taskmanagerprocessrunstatus = 96;
			/// <summary>PID: 97 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int taskmanagerprocessrunpath_97 = 97;
			/// <summary>PID: 97 | Type: read</summary>
			public const int taskmanagerprocessrunpath = 97;
			/// <summary>PID: 99 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int taskmanagerrunparameters_99 = 99;
			/// <summary>PID: 99 | Type: read</summary>
			public const int taskmanagerrunparameters = 99;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int taskmanagerprocessnameindex_83 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int taskmanagerprocessnameindex = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int taskmanagerprocesspid_81 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int taskmanagerprocesspid = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int taskmanagerprocessname_82 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int taskmanagerprocessname = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int taskmanagerprocesscpu_84 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int taskmanagerprocesscpu = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int taskmanagerprocesscputime_85 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int taskmanagerprocesscputime = 4;
			/// <summary>IDX: 5 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int taskmanagerprocessmemusage_86 = 5;
			/// <summary>IDX: 5 | Type: read</summary>
			public const int taskmanagerprocessmemusage = 5;
			/// <summary>IDX: 6 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int taskmanagerrowstatus_87 = 6;
			/// <summary>IDX: 6 | Type: read</summary>
			public const int taskmanagerrowstatus = 6;
			/// <summary>IDX: 7 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int taskmanagerprevioustime_88 = 7;
			/// <summary>IDX: 7 | Type: read</summary>
			public const int taskmanagerprevioustime = 7;
			/// <summary>IDX: 8 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int taskmanagerpreviousperf_89 = 8;
			/// <summary>IDX: 8 | Type: read</summary>
			public const int taskmanagerpreviousperf = 8;
			/// <summary>IDX: 9 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int taskmanagerprocessrunstatus_96 = 9;
			/// <summary>IDX: 9 | Type: read</summary>
			public const int taskmanagerprocessrunstatus = 9;
			/// <summary>IDX: 10 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int taskmanagerprocessrunpath_97 = 10;
			/// <summary>IDX: 10 | Type: read</summary>
			public const int taskmanagerprocessrunpath = 10;
			/// <summary>IDX: 11 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int taskmanagerrunparameters_99 = 11;
			/// <summary>IDX: 11 | Type: read</summary>
			public const int taskmanagerrunparameters = 11;
		}
	}
	public class Hrswrunperftable
	{
		/// <summary>PID: 90</summary>
		public const int tablePid = 90;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 91</summary>
		public const int indexColumnPid = 91;
		public class Pid
		{
			/// <summary>PID: 91 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int hrswrunperftable_instance_91 = 91;
			/// <summary>PID: 91 | Type: read</summary>
			public const int hrswrunperftable_instance = 91;
			/// <summary>PID: 92 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int hrswrunperfcpu_92 = 92;
			/// <summary>PID: 92 | Type: read</summary>
			public const int hrswrunperfcpu = 92;
			/// <summary>PID: 93 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int hrswrunperftable_currenttime_93 = 93;
			/// <summary>PID: 93 | Type: read</summary>
			public const int hrswrunperftable_currenttime = 93;
			/// <summary>PID: 94 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int hrswrunperfpreviouscpu_94 = 94;
			/// <summary>PID: 94 | Type: read</summary>
			public const int hrswrunperfpreviouscpu = 94;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int hrswrunperftable_instance_91 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int hrswrunperftable_instance = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int hrswrunperfcpu_92 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int hrswrunperfcpu = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int hrswrunperftable_currenttime_93 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int hrswrunperftable_currenttime = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int hrswrunperfpreviouscpu_94 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int hrswrunperfpreviouscpu = 3;
		}
	}
	public class Normalizetaskmanager
	{
		/// <summary>PID: 110</summary>
		public const int tablePid = 110;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 111</summary>
		public const int indexColumnPid = 111;
		public class Pid
		{
			/// <summary>PID: 111 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int normalizetaskmanagerprocessname_111 = 111;
			/// <summary>PID: 111 | Type: read</summary>
			public const int normalizetaskmanagerprocessname = 111;
			/// <summary>PID: 112 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int normalizetaskmanagerprocesscpu_112 = 112;
			/// <summary>PID: 112 | Type: read</summary>
			public const int normalizetaskmanagerprocesscpu = 112;
			/// <summary>PID: 113 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int normalizetaskmanagerprocessmemusage_113 = 113;
			/// <summary>PID: 113 | Type: read</summary>
			public const int normalizetaskmanagerprocessmemusage = 113;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int normalizetaskmanagerprocessname_111 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int normalizetaskmanagerprocessname = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int normalizetaskmanagerprocesscpu_112 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int normalizetaskmanagerprocesscpu = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int normalizetaskmanagerprocessmemusage_113 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int normalizetaskmanagerprocessmemusage = 2;
		}
	}
	public class Softwareinfo
	{
		/// <summary>PID: 130</summary>
		public const int tablePid = 130;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 131</summary>
		public const int indexColumnPid = 131;
		public class Pid
		{
			/// <summary>PID: 131 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int softwareinfohrswinstalledindex_131 = 131;
			/// <summary>PID: 131 | Type: read</summary>
			public const int softwareinfohrswinstalledindex = 131;
			/// <summary>PID: 132 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int softwareinfohrswinstalledname_132 = 132;
			/// <summary>PID: 132 | Type: read</summary>
			public const int softwareinfohrswinstalledname = 132;
			/// <summary>PID: 133 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int softwareinfohrswinstalleddate_133 = 133;
			/// <summary>PID: 133 | Type: read</summary>
			public const int softwareinfohrswinstalleddate = 133;
			/// <summary>PID: 134 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int softwareinfoswinstallationdate_134 = 134;
			/// <summary>PID: 134 | Type: read</summary>
			public const int softwareinfoswinstallationdate = 134;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int softwareinfohrswinstalledindex_131 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int softwareinfohrswinstalledindex = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int softwareinfohrswinstalledname_132 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int softwareinfohrswinstalledname = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int softwareinfohrswinstalleddate_133 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int softwareinfohrswinstalleddate = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int softwareinfoswinstallationdate_134 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int softwareinfoswinstallationdate = 3;
		}
	}
	public class Hrfstable
	{
		/// <summary>PID: 140</summary>
		public const int tablePid = 140;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 141</summary>
		public const int indexColumnPid = 141;
		public class Pid
		{
			/// <summary>PID: 141 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int hrfsindex_141 = 141;
			/// <summary>PID: 141 | Type: read</summary>
			public const int hrfsindex = 141;
			/// <summary>PID: 142 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int hrfstype_142 = 142;
			/// <summary>PID: 142 | Type: read</summary>
			public const int hrfstype = 142;
			/// <summary>PID: 143 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int hrfsstorageindex_143 = 143;
			/// <summary>PID: 143 | Type: read</summary>
			public const int hrfsstorageindex = 143;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int hrfsindex_141 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int hrfsindex = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int hrfstype_142 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int hrfstype = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int hrfsstorageindex_143 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int hrfsstorageindex = 2;
		}
	}
	public class Ipaddrtable
	{
		/// <summary>PID: 150</summary>
		public const int tablePid = 150;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 151</summary>
		public const int indexColumnPid = 151;
		public class Pid
		{
			/// <summary>PID: 151 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipaddrentaddr_151 = 151;
			/// <summary>PID: 151 | Type: read</summary>
			public const int ipaddrentaddr = 151;
			/// <summary>PID: 152 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipaddrentifindex_152 = 152;
			/// <summary>PID: 152 | Type: read</summary>
			public const int ipaddrentifindex = 152;
			/// <summary>PID: 153 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipaddrentnetmask_153 = 153;
			/// <summary>PID: 153 | Type: read</summary>
			public const int ipaddrentnetmask = 153;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipaddrentaddr_151 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int ipaddrentaddr = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipaddrentifindex_152 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int ipaddrentifindex = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipaddrentnetmask_153 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int ipaddrentnetmask = 2;
		}
	}
	public class Iproutetable
	{
		/// <summary>PID: 160</summary>
		public const int tablePid = 160;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 161</summary>
		public const int indexColumnPid = 161;
		public class Pid
		{
			/// <summary>PID: 161 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int iproutedest_161 = 161;
			/// <summary>PID: 161 | Type: read</summary>
			public const int iproutedest = 161;
			/// <summary>PID: 162 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int iprouteifindex_162 = 162;
			/// <summary>PID: 162 | Type: read</summary>
			public const int iprouteifindex = 162;
			/// <summary>PID: 163 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int iproutenexthop_163 = 163;
			/// <summary>PID: 163 | Type: read</summary>
			public const int iproutenexthop = 163;
			/// <summary>PID: 164 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int iproutemask_164 = 164;
			/// <summary>PID: 164 | Type: read</summary>
			public const int iproutemask = 164;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int iproutedest_161 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int iproutedest = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int iprouteifindex_162 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int iprouteifindex = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int iproutenexthop_163 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int iproutenexthop = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int iproutemask_164 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int iproutemask = 3;
		}
	}
	public class Jobdatatable
	{
		/// <summary>PID: 210</summary>
		public const int tablePid = 210;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 211</summary>
		public const int indexColumnPid = 211;
		public class Pid
		{
			/// <summary>PID: 211 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int jobName_211 = 211;
			/// <summary>PID: 211 | Type: read</summary>
			public const int jobName = 211;
			/// <summary>PID: 212 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int jobType_212 = 212;
			/// <summary>PID: 212 | Type: read</summary>
			public const int jobType = 212;
			/// <summary>PID: 213 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int jobstatus_213 = 213;
			/// <summary>PID: 213 | Type: read</summary>
			public const int jobstatus = 213;
			/// <summary>PID: 214 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int updatedTime_214 = 214;
			/// <summary>PID: 214 | Type: read</summary>
			public const int updatedTime = 214;
			/// <summary>PID: 215 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int nodeName_215 = 215;
			/// <summary>PID: 215 | Type: read</summary>
			public const int nodeName = 215;
			/// <summary>PID: 216 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int updatejobstatus_216 = 216;
			/// <summary>PID: 216 | Type: read</summary>
			public const int updatejobstatus = 216;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int jobName_211 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int jobName = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int jobType_212 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int jobType = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int jobstatus_213 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int jobstatus = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int updatedTime_214 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int updatedTime = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int nodeName_215 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int nodeName = 4;
			/// <summary>IDX: 5 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int updatejobstatus_216 = 5;
			/// <summary>IDX: 5 | Type: read</summary>
			public const int updatejobstatus = 5;
		}
	}
	public class Inputswitcher
	{
		/// <summary>PID: 230</summary>
		public const int tablePid = 230;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 231</summary>
		public const int indexColumnPid = 231;
		public class Pid
		{
			/// <summary>PID: 231 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int inputswitcherindex_231 = 231;
			/// <summary>PID: 231 | Type: read</summary>
			public const int inputswitcherindex = 231;
			/// <summary>PID: 232 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int inputswitcherjobname_232 = 232;
			/// <summary>PID: 232 | Type: read</summary>
			public const int inputswitcherjobname = 232;
			/// <summary>PID: 233 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int inputswitchergroupno_233 = 233;
			/// <summary>PID: 233 | Type: read</summary>
			public const int inputswitchergroupno = 233;
			/// <summary>PID: 234 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int inputswitcheractiveinput_234 = 234;
			/// <summary>PID: 234 | Type: read</summary>
			public const int inputswitcheractiveinput = 234;
			/// <summary>PID: 236 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int inputswitchercolumnname_236 = 236;
			/// <summary>PID: 236 | Type: read</summary>
			public const int inputswitchercolumnname = 236;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int inputswitcherindex_231 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int inputswitcherindex = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int inputswitcherjobname_232 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int inputswitcherjobname = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int inputswitchergroupno_233 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int inputswitchergroupno = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int inputswitcheractiveinput_234 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int inputswitcheractiveinput = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int inputswitchercolumnname_236 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int inputswitchercolumnname = 4;
		}
	}
	public class Rftuning
	{
		/// <summary>PID: 250</summary>
		public const int tablePid = 250;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 251</summary>
		public const int indexColumnPid = 251;
		public class Pid
		{
			/// <summary>PID: 251 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int rftunningindex_251 = 251;
			/// <summary>PID: 251 | Type: read</summary>
			public const int rftunningindex = 251;
			/// <summary>PID: 252 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int rftunningfrequency_252 = 252;
			/// <summary>PID: 252 | Type: read</summary>
			public const int rftunningfrequency = 252;
			/// <summary>PID: 253 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int rftunningsymbolrate_253 = 253;
			/// <summary>PID: 253 | Type: read</summary>
			public const int rftunningsymbolrate = 253;
			/// <summary>PID: 254 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int rftunningfec_254 = 254;
			/// <summary>PID: 254 | Type: read</summary>
			public const int rftunningfec = 254;
			/// <summary>PID: 262 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int rftunningsystem_262 = 262;
			/// <summary>PID: 262 | Type: read</summary>
			public const int rftunningsystem = 262;
			/// <summary>PID: 255 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int rftunningadopterport_255 = 255;
			/// <summary>PID: 255 | Type: read</summary>
			public const int rftunningadopterport = 255;
			/// <summary>PID: 256 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int rftunninglnbvoltage_256 = 256;
			/// <summary>PID: 256 | Type: read</summary>
			public const int rftunninglnbvoltage = 256;
			/// <summary>PID: 257 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int rftunninglnbtone_257 = 257;
			/// <summary>PID: 257 | Type: read</summary>
			public const int rftunninglnbtone = 257;
			/// <summary>PID: 258 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int rftunningipandport_258 = 258;
			/// <summary>PID: 258 | Type: read</summary>
			public const int rftunningipandport = 258;
			/// <summary>PID: 259 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int rftunningsignalstrength_259 = 259;
			/// <summary>PID: 259 | Type: read</summary>
			public const int rftunningsignalstrength = 259;
			/// <summary>PID: 260 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int rftunningstatus_260 = 260;
			/// <summary>PID: 260 | Type: read</summary>
			public const int rftunningstatus = 260;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int rftunningindex_251 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int rftunningindex = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int rftunningfrequency_252 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int rftunningfrequency = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int rftunningsymbolrate_253 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int rftunningsymbolrate = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int rftunningfec_254 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int rftunningfec = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int rftunningsystem_262 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int rftunningsystem = 4;
			/// <summary>IDX: 5 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int rftunningadopterport_255 = 5;
			/// <summary>IDX: 5 | Type: read</summary>
			public const int rftunningadopterport = 5;
			/// <summary>IDX: 6 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int rftunninglnbvoltage_256 = 6;
			/// <summary>IDX: 6 | Type: read</summary>
			public const int rftunninglnbvoltage = 6;
			/// <summary>IDX: 7 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int rftunninglnbtone_257 = 7;
			/// <summary>IDX: 7 | Type: read</summary>
			public const int rftunninglnbtone = 7;
			/// <summary>IDX: 8 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int rftunningipandport_258 = 8;
			/// <summary>IDX: 8 | Type: read</summary>
			public const int rftunningipandport = 8;
			/// <summary>IDX: 9 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int rftunningsignalstrength_259 = 9;
			/// <summary>IDX: 9 | Type: read</summary>
			public const int rftunningsignalstrength = 9;
			/// <summary>IDX: 10 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int rftunningstatus_260 = 10;
			/// <summary>IDX: 10 | Type: read</summary>
			public const int rftunningstatus = 10;
		}
	}
	public class ChannalList
	{
		/// <summary>PID: 280</summary>
		public const int tablePid = 280;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 281</summary>
		public const int indexColumnPid = 281;
		public class Pid
		{
			/// <summary>PID: 281 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int channalListIndex_281 = 281;
			/// <summary>PID: 281 | Type: read</summary>
			public const int channalListIndex = 281;
			/// <summary>PID: 288 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int channalListFrequency_288 = 288;
			/// <summary>PID: 288 | Type: read</summary>
			public const int channalListFrequency = 288;
			/// <summary>PID: 282 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int channalListServiceName_282 = 282;
			/// <summary>PID: 282 | Type: read</summary>
			public const int channalListServiceName = 282;
			/// <summary>PID: 283 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int channalListServiceId_283 = 283;
			/// <summary>PID: 283 | Type: read</summary>
			public const int channalListServiceId = 283;
			/// <summary>PID: 284 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int channalListVideoPid_284 = 284;
			/// <summary>PID: 284 | Type: read</summary>
			public const int channalListVideoPid = 284;
			/// <summary>PID: 285 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int channalListVideoCodec_285 = 285;
			/// <summary>PID: 285 | Type: read</summary>
			public const int channalListVideoCodec = 285;
			/// <summary>PID: 286 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int channalListAudioPid_286 = 286;
			/// <summary>PID: 286 | Type: read</summary>
			public const int channalListAudioPid = 286;
			/// <summary>PID: 287 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int channalListAudioCodec_287 = 287;
			/// <summary>PID: 287 | Type: read</summary>
			public const int channalListAudioCodec = 287;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int channalListIndex_281 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int channalListIndex = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int channalListFrequency_288 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int channalListFrequency = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int channalListServiceName_282 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int channalListServiceName = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int channalListServiceId_283 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int channalListServiceId = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int channalListVideoPid_284 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int channalListVideoPid = 4;
			/// <summary>IDX: 5 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int channalListVideoCodec_285 = 5;
			/// <summary>IDX: 5 | Type: read</summary>
			public const int channalListVideoCodec = 5;
			/// <summary>IDX: 6 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int channalListAudioPid_286 = 6;
			/// <summary>IDX: 6 | Type: read</summary>
			public const int channalListAudioPid = 6;
			/// <summary>IDX: 7 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int channalListAudioCodec_287 = 7;
			/// <summary>IDX: 7 | Type: read</summary>
			public const int channalListAudioCodec = 7;
		}
	}
	public class Jobstatistics
	{
		/// <summary>PID: 290</summary>
		public const int tablePid = 290;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 291</summary>
		public const int indexColumnPid = 291;
		public class Pid
		{
			/// <summary>PID: 291 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int jobstatisticsjobname_291 = 291;
			/// <summary>PID: 291 | Type: read</summary>
			public const int jobstatisticsjobname = 291;
			/// <summary>PID: 292 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int jobstatisticsjobstatus_292 = 292;
			/// <summary>PID: 292 | Type: read</summary>
			public const int jobstatisticsjobstatus = 292;
			/// <summary>PID: 293 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int jobstatisticslatency_293 = 293;
			/// <summary>PID: 293 | Type: read</summary>
			public const int jobstatisticslatency = 293;
			/// <summary>PID: 294 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int jobstatisticsbufferedData_294 = 294;
			/// <summary>PID: 294 | Type: read</summary>
			public const int jobstatisticsbufferedData = 294;
			/// <summary>PID: 295 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int jobstatisticscpuload_295 = 295;
			/// <summary>PID: 295 | Type: read</summary>
			public const int jobstatisticscpuload = 295;
			/// <summary>PID: 296 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int jobstatisticscpuavarageload_296 = 296;
			/// <summary>PID: 296 | Type: read</summary>
			public const int jobstatisticscpuavarageload = 296;
			/// <summary>PID: 297 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int jobstatisticsmemoryload_297 = 297;
			/// <summary>PID: 297 | Type: read</summary>
			public const int jobstatisticsmemoryload = 297;
			/// <summary>PID: 298 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int jobstatisticsavaragememoryload_298 = 298;
			/// <summary>PID: 298 | Type: read</summary>
			public const int jobstatisticsavaragememoryload = 298;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int jobstatisticsjobname_291 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int jobstatisticsjobname = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int jobstatisticsjobstatus_292 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int jobstatisticsjobstatus = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int jobstatisticslatency_293 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int jobstatisticslatency = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int jobstatisticsbufferedData_294 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int jobstatisticsbufferedData = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int jobstatisticscpuload_295 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int jobstatisticscpuload = 4;
			/// <summary>IDX: 5 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int jobstatisticscpuavarageload_296 = 5;
			/// <summary>IDX: 5 | Type: read</summary>
			public const int jobstatisticscpuavarageload = 5;
			/// <summary>IDX: 6 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int jobstatisticsmemoryload_297 = 6;
			/// <summary>IDX: 6 | Type: read</summary>
			public const int jobstatisticsmemoryload = 6;
			/// <summary>IDX: 7 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int jobstatisticsavaragememoryload_298 = 7;
			/// <summary>IDX: 7 | Type: read</summary>
			public const int jobstatisticsavaragememoryload = 7;
		}
	}
	public class Storagestoragesize
	{
		/// <summary>PID: 350</summary>
		public const int tablePid = 350;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 351</summary>
		public const int indexColumnPid = 351;
		public class Pid
		{
			/// <summary>PID: 351 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int storagesizeinstance_351 = 351;
			/// <summary>PID: 351 | Type: read</summary>
			public const int storagesizeinstance = 351;
			/// <summary>PID: 352 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int storagesizesize_352 = 352;
			/// <summary>PID: 352 | Type: read</summary>
			public const int storagesizesize = 352;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int storagesizeinstance_351 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int storagesizeinstance = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int storagesizesize_352 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int storagesizesize = 1;
		}
	}
	public class Storagestoragesize2
	{
		/// <summary>PID: 355</summary>
		public const int tablePid = 355;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 356</summary>
		public const int indexColumnPid = 356;
		public class Pid
		{
			/// <summary>PID: 356 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int storageusedinstance_356 = 356;
			/// <summary>PID: 356 | Type: read</summary>
			public const int storageusedinstance = 356;
			/// <summary>PID: 357 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int storageusedsize2_357 = 357;
			/// <summary>PID: 357 | Type: read</summary>
			public const int storageusedsize2 = 357;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int storageusedinstance_356 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int storageusedinstance = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int storageusedsize2_357 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int storageusedsize2 = 1;
		}
	}
	public class Storageinstanceindex
	{
		/// <summary>PID: 360</summary>
		public const int tablePid = 360;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 363</summary>
		public const int indexColumnPid = 363;
		public class Pid
		{
			/// <summary>PID: 363 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int storageinstanceindex_instance_363 = 363;
			/// <summary>PID: 363 | Type: read</summary>
			public const int storageinstanceindex_instance = 363;
			/// <summary>PID: 364 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int storageinstanceindex_firstcol_364 = 364;
			/// <summary>PID: 364 | Type: read</summary>
			public const int storageinstanceindex_firstcol = 364;
			/// <summary>PID: 365 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int storageinstanceindex_name_365 = 365;
			/// <summary>PID: 365 | Type: read</summary>
			public const int storageinstanceindex_name = 365;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int storageinstanceindex_instance_363 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int storageinstanceindex_instance = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int storageinstanceindex_firstcol_364 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int storageinstanceindex_firstcol = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int storageinstanceindex_name_365 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int storageinstanceindex_name = 2;
		}
	}
	public class Storagetable
	{
		/// <summary>PID: 400</summary>
		public const int tablePid = 400;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 405</summary>
		public const int indexColumnPid = 405;
		public class Pid
		{
			/// <summary>PID: 405 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int storageindex_405 = 405;
			/// <summary>PID: 405 | Type: read</summary>
			public const int storageindex = 405;
			/// <summary>PID: 406 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int storagedescription_406 = 406;
			/// <summary>PID: 406 | Type: read</summary>
			public const int storagedescription = 406;
			/// <summary>PID: 411 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int storagedescriptionidx_411 = 411;
			/// <summary>PID: 411 | Type: read</summary>
			public const int storagedescriptionidx = 411;
			/// <summary>PID: 410 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int storagetype_410 = 410;
			/// <summary>PID: 410 | Type: read</summary>
			public const int storagetype = 410;
			/// <summary>PID: 407 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int storageremainingstorage_407 = 407;
			/// <summary>PID: 407 | Type: read</summary>
			public const int storageremainingstorage = 407;
			/// <summary>PID: 408 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int storagesize_408 = 408;
			/// <summary>PID: 408 | Type: read</summary>
			public const int storagesize = 408;
			/// <summary>PID: 409 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int storageuse_409 = 409;
			/// <summary>PID: 409 | Type: read</summary>
			public const int storageuse = 409;
			/// <summary>PID: 412 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int storageallocationunit_412 = 412;
			/// <summary>PID: 412 | Type: read</summary>
			public const int storageallocationunit = 412;
			/// <summary>PID: 413 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int storagetotalsize_413 = 413;
			/// <summary>PID: 413 | Type: read</summary>
			public const int storagetotalsize = 413;
			/// <summary>PID: 414 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int storageusedsize_414 = 414;
			/// <summary>PID: 414 | Type: read</summary>
			public const int storageusedsize = 414;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int storageindex_405 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int storageindex = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int storagedescription_406 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int storagedescription = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int storagedescriptionidx_411 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int storagedescriptionidx = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int storagetype_410 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int storagetype = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int storageremainingstorage_407 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int storageremainingstorage = 4;
			/// <summary>IDX: 5 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int storagesize_408 = 5;
			/// <summary>IDX: 5 | Type: read</summary>
			public const int storagesize = 5;
			/// <summary>IDX: 6 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int storageuse_409 = 6;
			/// <summary>IDX: 6 | Type: read</summary>
			public const int storageuse = 6;
			/// <summary>IDX: 7 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int storageallocationunit_412 = 7;
			/// <summary>IDX: 7 | Type: read</summary>
			public const int storageallocationunit = 7;
			/// <summary>IDX: 8 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int storagetotalsize_413 = 8;
			/// <summary>IDX: 8 | Type: read</summary>
			public const int storagetotalsize = 8;
			/// <summary>IDX: 9 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int storageusedsize_414 = 9;
			/// <summary>IDX: 9 | Type: read</summary>
			public const int storageusedsize = 9;
		}
	}
	public class Storageavailability
	{
		/// <summary>PID: 500</summary>
		public const int tablePid = 500;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 501</summary>
		public const int indexColumnPid = 501;
		public class Pid
		{
			/// <summary>PID: 501 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mountnamemountstorage_501 = 501;
			/// <summary>PID: 501 | Type: read</summary>
			public const int mountnamemountstorage = 501;
			/// <summary>PID: 502 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int availabilitymountstorage_502 = 502;
			/// <summary>PID: 502 | Type: read</summary>
			public const int availabilitymountstorage = 502;
			/// <summary>PID: 505 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int descriptionmountstorage_505 = 505;
			/// <summary>PID: 505 | Type: read</summary>
			public const int descriptionmountstorage = 505;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mountnamemountstorage_501 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int mountnamemountstorage = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int availabilitymountstorage_502 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int availabilitymountstorage = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int descriptionmountstorage_505 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int descriptionmountstorage = 2;
		}
	}
	public class Interfacestable
	{
		/// <summary>PID: 600</summary>
		public const int tablePid = 600;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 605</summary>
		public const int indexColumnPid = 605;
		public class Pid
		{
			/// <summary>PID: 605 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesifindex_605 = 605;
			/// <summary>PID: 605 | Type: read</summary>
			public const int interfacesifindex = 605;
			/// <summary>PID: 606 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesifdescr_606 = 606;
			/// <summary>PID: 606 | Type: read</summary>
			public const int interfacesifdescr = 606;
			/// <summary>PID: 607 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesiftype_607 = 607;
			/// <summary>PID: 607 | Type: read</summary>
			public const int interfacesiftype = 607;
			/// <summary>PID: 608 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesphysaddress_608 = 608;
			/// <summary>PID: 608 | Type: read</summary>
			public const int interfacesphysaddress = 608;
			/// <summary>PID: 609 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesadminstatus_609 = 609;
			/// <summary>PID: 609 | Type: read</summary>
			public const int interfacesadminstatus = 609;
			/// <summary>PID: 610 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesoperstatus_610 = 610;
			/// <summary>PID: 610 | Type: read</summary>
			public const int interfacesoperstatus = 610;
			/// <summary>PID: 615 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesinterfacebandwidth_615 = 615;
			/// <summary>PID: 615 | Type: read</summary>
			public const int interfacesinterfacebandwidth = 615;
			/// <summary>PID: 620 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesifinoctets_620 = 620;
			/// <summary>PID: 620 | Type: read</summary>
			public const int interfacesifinoctets = 620;
			/// <summary>PID: 621 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesifoutoctets_621 = 621;
			/// <summary>PID: 621 | Type: read</summary>
			public const int interfacesifoutoctets = 621;
			/// <summary>PID: 626 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesifinucastpkts_626 = 626;
			/// <summary>PID: 626 | Type: read</summary>
			public const int interfacesifinucastpkts = 626;
			/// <summary>PID: 627 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesifoutucastpkts_627 = 627;
			/// <summary>PID: 627 | Type: read</summary>
			public const int interfacesifoutucastpkts = 627;
			/// <summary>PID: 604 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesinterface_idx__604 = 604;
			/// <summary>PID: 604 | Type: read</summary>
			public const int interfacesinterface_idx_ = 604;
			/// <summary>PID: 614 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesinterfacestatus_614 = 614;
			/// <summary>PID: 614 | Type: read</summary>
			public const int interfacesinterfacestatus = 614;
			/// <summary>PID: 611 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesinrate_611 = 611;
			/// <summary>PID: 611 | Type: read</summary>
			public const int interfacesinrate = 611;
			/// <summary>PID: 612 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesoutrate_612 = 612;
			/// <summary>PID: 612 | Type: read</summary>
			public const int interfacesoutrate = 612;
			/// <summary>PID: 613 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacestotalrate_613 = 613;
			/// <summary>PID: 613 | Type: read</summary>
			public const int interfacestotalrate = 613;
			/// <summary>PID: 616 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesrxutilization_616 = 616;
			/// <summary>PID: 616 | Type: read</summary>
			public const int interfacesrxutilization = 616;
			/// <summary>PID: 617 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacestxutilization_617 = 617;
			/// <summary>PID: 617 | Type: read</summary>
			public const int interfacestxutilization = 617;
			/// <summary>PID: 622 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesifinoctetstime_622 = 622;
			/// <summary>PID: 622 | Type: read</summary>
			public const int interfacesifinoctetstime = 622;
			/// <summary>PID: 623 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesifoutoctetstime_623 = 623;
			/// <summary>PID: 623 | Type: read</summary>
			public const int interfacesifoutoctetstime = 623;
			/// <summary>PID: 642 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesipaddress_642 = 642;
			/// <summary>PID: 642 | Type: read</summary>
			public const int interfacesipaddress = 642;
			/// <summary>PID: 643 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesipsubnet_643 = 643;
			/// <summary>PID: 643 | Type: read</summary>
			public const int interfacesipsubnet = 643;
			/// <summary>PID: 644 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesdefaultipgateway_644 = 644;
			/// <summary>PID: 644 | Type: read</summary>
			public const int interfacesdefaultipgateway = 644;
			/// <summary>PID: 645 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacestotalutilization_645 = 645;
			/// <summary>PID: 645 | Type: read</summary>
			public const int interfacestotalutilization = 645;
			/// <summary>PID: 646 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesifcountertype_646 = 646;
			/// <summary>PID: 646 | Type: read</summary>
			public const int interfacesifcountertype = 646;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesifindex_605 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int interfacesifindex = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesifdescr_606 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int interfacesifdescr = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesiftype_607 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int interfacesiftype = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesphysaddress_608 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int interfacesphysaddress = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesadminstatus_609 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int interfacesadminstatus = 4;
			/// <summary>IDX: 5 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesoperstatus_610 = 5;
			/// <summary>IDX: 5 | Type: read</summary>
			public const int interfacesoperstatus = 5;
			/// <summary>IDX: 6 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesinterfacebandwidth_615 = 6;
			/// <summary>IDX: 6 | Type: read</summary>
			public const int interfacesinterfacebandwidth = 6;
			/// <summary>IDX: 7 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesifinoctets_620 = 7;
			/// <summary>IDX: 7 | Type: read</summary>
			public const int interfacesifinoctets = 7;
			/// <summary>IDX: 8 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesifoutoctets_621 = 8;
			/// <summary>IDX: 8 | Type: read</summary>
			public const int interfacesifoutoctets = 8;
			/// <summary>IDX: 9 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesifinucastpkts_626 = 9;
			/// <summary>IDX: 9 | Type: read</summary>
			public const int interfacesifinucastpkts = 9;
			/// <summary>IDX: 10 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesifoutucastpkts_627 = 10;
			/// <summary>IDX: 10 | Type: read</summary>
			public const int interfacesifoutucastpkts = 10;
			/// <summary>IDX: 11 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesinterface_idx__604 = 11;
			/// <summary>IDX: 11 | Type: read</summary>
			public const int interfacesinterface_idx_ = 11;
			/// <summary>IDX: 12 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesinterfacestatus_614 = 12;
			/// <summary>IDX: 12 | Type: read</summary>
			public const int interfacesinterfacestatus = 12;
			/// <summary>IDX: 13 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesinrate_611 = 13;
			/// <summary>IDX: 13 | Type: read</summary>
			public const int interfacesinrate = 13;
			/// <summary>IDX: 14 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesoutrate_612 = 14;
			/// <summary>IDX: 14 | Type: read</summary>
			public const int interfacesoutrate = 14;
			/// <summary>IDX: 15 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacestotalrate_613 = 15;
			/// <summary>IDX: 15 | Type: read</summary>
			public const int interfacestotalrate = 15;
			/// <summary>IDX: 16 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesrxutilization_616 = 16;
			/// <summary>IDX: 16 | Type: read</summary>
			public const int interfacesrxutilization = 16;
			/// <summary>IDX: 17 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacestxutilization_617 = 17;
			/// <summary>IDX: 17 | Type: read</summary>
			public const int interfacestxutilization = 17;
			/// <summary>IDX: 18 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesifinoctetstime_622 = 18;
			/// <summary>IDX: 18 | Type: read</summary>
			public const int interfacesifinoctetstime = 18;
			/// <summary>IDX: 19 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesifoutoctetstime_623 = 19;
			/// <summary>IDX: 19 | Type: read</summary>
			public const int interfacesifoutoctetstime = 19;
			/// <summary>IDX: 20 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesipaddress_642 = 20;
			/// <summary>IDX: 20 | Type: read</summary>
			public const int interfacesipaddress = 20;
			/// <summary>IDX: 21 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesipsubnet_643 = 21;
			/// <summary>IDX: 21 | Type: read</summary>
			public const int interfacesipsubnet = 21;
			/// <summary>IDX: 22 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesdefaultipgateway_644 = 22;
			/// <summary>IDX: 22 | Type: read</summary>
			public const int interfacesdefaultipgateway = 22;
			/// <summary>IDX: 23 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacestotalutilization_645 = 23;
			/// <summary>IDX: 23 | Type: read</summary>
			public const int interfacestotalutilization = 23;
			/// <summary>IDX: 24 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int interfacesifcountertype_646 = 24;
			/// <summary>IDX: 24 | Type: read</summary>
			public const int interfacesifcountertype = 24;
		}
	}
	public class Interfacetableconfig
	{
		/// <summary>PID: 800</summary>
		public const int tablePid = 800;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 801</summary>
		public const int indexColumnPid = 801;
		public class Pid
		{
			/// <summary>PID: 801 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int indexinterfacetableconfig_801 = 801;
			/// <summary>PID: 801 | Type: read</summary>
			public const int indexinterfacetableconfig = 801;
			/// <summary>PID: 802 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int descriptioninterfacetableconfig_802 = 802;
			/// <summary>PID: 802 | Type: read</summary>
			public const int descriptioninterfacetableconfig = 802;
			/// <summary>PID: 803 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ififtype_803 = 803;
			/// <summary>PID: 803 | Type: read</summary>
			public const int ififtype = 803;
			/// <summary>PID: 805 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ifinterfacebandwidth_805 = 805;
			/// <summary>PID: 805 | Type: read</summary>
			public const int ifinterfacebandwidth = 805;
			/// <summary>PID: 806 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ifphysaddress_806 = 806;
			/// <summary>PID: 806 | Type: read</summary>
			public const int ifphysaddress = 806;
			/// <summary>PID: 807 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ifadminstatus_807 = 807;
			/// <summary>PID: 807 | Type: read</summary>
			public const int ifadminstatus = 807;
			/// <summary>PID: 808 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int operationalstatusinterfacetableconfig_808 = 808;
			/// <summary>PID: 808 | Type: read</summary>
			public const int operationalstatusinterfacetableconfig = 808;
			/// <summary>PID: 810 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ififinoctets_810 = 810;
			/// <summary>PID: 810 | Type: read</summary>
			public const int ififinoctets = 810;
			/// <summary>PID: 811 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ififinucastpkts_811 = 811;
			/// <summary>PID: 811 | Type: read</summary>
			public const int ififinucastpkts = 811;
			/// <summary>PID: 816 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ififoutoctets_816 = 816;
			/// <summary>PID: 816 | Type: read</summary>
			public const int ififoutoctets = 816;
			/// <summary>PID: 817 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ififoutucastpkts_817 = 817;
			/// <summary>PID: 817 | Type: read</summary>
			public const int ififoutucastpkts = 817;
			/// <summary>PID: 818 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int monitorinterfacetableconfig_818 = 818;
			/// <summary>PID: 818 | Type: read</summary>
			public const int monitorinterfacetableconfig = 818;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int indexinterfacetableconfig_801 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int indexinterfacetableconfig = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int descriptioninterfacetableconfig_802 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int descriptioninterfacetableconfig = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ififtype_803 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int ififtype = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ifinterfacebandwidth_805 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int ifinterfacebandwidth = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ifphysaddress_806 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int ifphysaddress = 4;
			/// <summary>IDX: 5 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ifadminstatus_807 = 5;
			/// <summary>IDX: 5 | Type: read</summary>
			public const int ifadminstatus = 5;
			/// <summary>IDX: 6 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int operationalstatusinterfacetableconfig_808 = 6;
			/// <summary>IDX: 6 | Type: read</summary>
			public const int operationalstatusinterfacetableconfig = 6;
			/// <summary>IDX: 7 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ififinoctets_810 = 7;
			/// <summary>IDX: 7 | Type: read</summary>
			public const int ififinoctets = 7;
			/// <summary>IDX: 8 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ififinucastpkts_811 = 8;
			/// <summary>IDX: 8 | Type: read</summary>
			public const int ififinucastpkts = 8;
			/// <summary>IDX: 9 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ififoutoctets_816 = 9;
			/// <summary>IDX: 9 | Type: read</summary>
			public const int ififoutoctets = 9;
			/// <summary>IDX: 10 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ififoutucastpkts_817 = 10;
			/// <summary>IDX: 10 | Type: read</summary>
			public const int ififoutucastpkts = 10;
			/// <summary>IDX: 11 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int monitorinterfacetableconfig_818 = 11;
			/// <summary>IDX: 11 | Type: read</summary>
			public const int monitorinterfacetableconfig = 11;
		}
	}
	public class Ifxtable
	{
		/// <summary>PID: 900</summary>
		public const int tablePid = 900;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 901</summary>
		public const int indexColumnPid = 901;
		public class Pid
		{
			/// <summary>PID: 901 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ifinstance_901 = 901;
			/// <summary>PID: 901 | Type: read</summary>
			public const int ifinstance = 901;
			/// <summary>PID: 902 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ifname_902 = 902;
			/// <summary>PID: 902 | Type: read</summary>
			public const int ifname = 902;
			/// <summary>PID: 907 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ifhcinoctets_907 = 907;
			/// <summary>PID: 907 | Type: read</summary>
			public const int ifhcinoctets = 907;
			/// <summary>PID: 911 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ifhcoutoctets_911 = 911;
			/// <summary>PID: 911 | Type: read</summary>
			public const int ifhcoutoctets = 911;
			/// <summary>PID: 916 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ifhighspeed_916 = 916;
			/// <summary>PID: 916 | Type: read</summary>
			public const int ifhighspeed = 916;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ifinstance_901 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int ifinstance = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ifname_902 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int ifname = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ifhcinoctets_907 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int ifhcinoctets = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ifhcoutoctets_911 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int ifhcoutoctets = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ifhighspeed_916 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int ifhighspeed = 4;
		}
	}
	public class Linuxmonitoredprocesseslist
	{
		/// <summary>PID: 1020</summary>
		public const int tablePid = 1020;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 1024</summary>
		public const int indexColumnPid = 1024;
		public class Pid
		{
			/// <summary>PID: 1024 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int linuxmonitoredprocesseslistprocess_index_1024 = 1024;
			/// <summary>PID: 1024 | Type: read</summary>
			public const int linuxmonitoredprocesseslistprocess_index = 1024;
			/// <summary>PID: 1025 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int linuxmonitoredprocesseslistprocess_id_1025 = 1025;
			/// <summary>PID: 1025 | Type: read</summary>
			public const int linuxmonitoredprocesseslistprocess_id = 1025;
			/// <summary>PID: 1026 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int linuxmonitoredprocesseslistprocess_name_1026 = 1026;
			/// <summary>PID: 1026 | Type: read</summary>
			public const int linuxmonitoredprocesseslistprocess_name = 1026;
			/// <summary>PID: 1027 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int linuxmonitoredprocesseslistprocess_minimum_1027 = 1027;
			/// <summary>PID: 1027 | Type: read</summary>
			public const int linuxmonitoredprocesseslistprocess_minimum = 1027;
			/// <summary>PID: 1028 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int linuxmonitoredprocesseslistprocess_maximum_1028 = 1028;
			/// <summary>PID: 1028 | Type: read</summary>
			public const int linuxmonitoredprocesseslistprocess_maximum = 1028;
			/// <summary>PID: 1029 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int linuxmonitoredprocesseslistprocess_current_1029 = 1029;
			/// <summary>PID: 1029 | Type: read</summary>
			public const int linuxmonitoredprocesseslistprocess_current = 1029;
			/// <summary>PID: 1030 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int linuxmonitoredprocesseslistprocess_status_1030 = 1030;
			/// <summary>PID: 1030 | Type: read</summary>
			public const int linuxmonitoredprocesseslistprocess_status = 1030;
			/// <summary>PID: 1031 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int linuxmonitoredprocesseslistprocess_errormessage_1031 = 1031;
			/// <summary>PID: 1031 | Type: read</summary>
			public const int linuxmonitoredprocesseslistprocess_errormessage = 1031;
			/// <summary>PID: 1032 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int linuxmonitoredprocesseslistprocess_script_1032 = 1032;
			/// <summary>PID: 1032 | Type: read</summary>
			public const int linuxmonitoredprocesseslistprocess_script = 1032;
			/// <summary>PID: 1033 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int linuxmonitoredprocesseslistprocess_command_1033 = 1033;
			/// <summary>PID: 1033 | Type: read</summary>
			public const int linuxmonitoredprocesseslistprocess_command = 1033;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int linuxmonitoredprocesseslistprocess_index_1024 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int linuxmonitoredprocesseslistprocess_index = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int linuxmonitoredprocesseslistprocess_id_1025 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int linuxmonitoredprocesseslistprocess_id = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int linuxmonitoredprocesseslistprocess_name_1026 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int linuxmonitoredprocesseslistprocess_name = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int linuxmonitoredprocesseslistprocess_minimum_1027 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int linuxmonitoredprocesseslistprocess_minimum = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int linuxmonitoredprocesseslistprocess_maximum_1028 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int linuxmonitoredprocesseslistprocess_maximum = 4;
			/// <summary>IDX: 5 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int linuxmonitoredprocesseslistprocess_current_1029 = 5;
			/// <summary>IDX: 5 | Type: read</summary>
			public const int linuxmonitoredprocesseslistprocess_current = 5;
			/// <summary>IDX: 6 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int linuxmonitoredprocesseslistprocess_status_1030 = 6;
			/// <summary>IDX: 6 | Type: read</summary>
			public const int linuxmonitoredprocesseslistprocess_status = 6;
			/// <summary>IDX: 7 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int linuxmonitoredprocesseslistprocess_errormessage_1031 = 7;
			/// <summary>IDX: 7 | Type: read</summary>
			public const int linuxmonitoredprocesseslistprocess_errormessage = 7;
			/// <summary>IDX: 8 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int linuxmonitoredprocesseslistprocess_script_1032 = 8;
			/// <summary>IDX: 8 | Type: read</summary>
			public const int linuxmonitoredprocesseslistprocess_script = 8;
			/// <summary>IDX: 9 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int linuxmonitoredprocesseslistprocess_command_1033 = 9;
			/// <summary>IDX: 9 | Type: read</summary>
			public const int linuxmonitoredprocesseslistprocess_command = 9;
		}
	}
	public class Mountavailability
	{
		/// <summary>PID: 1040</summary>
		public const int tablePid = 1040;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 1041</summary>
		public const int indexColumnPid = 1041;
		public class Pid
		{
			/// <summary>PID: 1041 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mountavailabilitymountname_1041 = 1041;
			/// <summary>PID: 1041 | Type: read</summary>
			public const int mountavailabilitymountname = 1041;
			/// <summary>PID: 1042 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mountavailabilityavailability_1042 = 1042;
			/// <summary>PID: 1042 | Type: read</summary>
			public const int mountavailabilityavailability = 1042;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mountavailabilitymountname_1041 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int mountavailabilitymountname = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int mountavailabilityavailability_1042 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int mountavailabilityavailability = 1;
		}
	}
	public class Linuxmonitoreddisks
	{
		/// <summary>PID: 1050</summary>
		public const int tablePid = 1050;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 1056</summary>
		public const int indexColumnPid = 1056;
		public class Pid
		{
			/// <summary>PID: 1056 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int linuxmonitoreddisksindex_1056 = 1056;
			/// <summary>PID: 1056 | Type: read</summary>
			public const int linuxmonitoreddisksindex = 1056;
			/// <summary>PID: 1054 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int linuxmonitoreddisksidentifier_1054 = 1054;
			/// <summary>PID: 1054 | Type: read</summary>
			public const int linuxmonitoreddisksidentifier = 1054;
			/// <summary>PID: 1057 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int linuxmonitoreddisksmountpath_1057 = 1057;
			/// <summary>PID: 1057 | Type: read</summary>
			public const int linuxmonitoreddisksmountpath = 1057;
			/// <summary>PID: 1058 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int linuxmonitoreddisksdevicepath_1058 = 1058;
			/// <summary>PID: 1058 | Type: read</summary>
			public const int linuxmonitoreddisksdevicepath = 1058;
			/// <summary>PID: 1059 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int linuxmonitoreddisksminimum_1059 = 1059;
			/// <summary>PID: 1059 | Type: read</summary>
			public const int linuxmonitoreddisksminimum = 1059;
			/// <summary>PID: 1060 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int linuxmonitoreddiskspercentagediskminimum_1060 = 1060;
			/// <summary>PID: 1060 | Type: read</summary>
			public const int linuxmonitoreddiskspercentagediskminimum = 1060;
			/// <summary>PID: 1061 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int linuxmonitoreddiskstotalsize_1061 = 1061;
			/// <summary>PID: 1061 | Type: read</summary>
			public const int linuxmonitoreddiskstotalsize = 1061;
			/// <summary>PID: 1062 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int linuxmonitoreddisksavailablespace_1062 = 1062;
			/// <summary>PID: 1062 | Type: read</summary>
			public const int linuxmonitoreddisksavailablespace = 1062;
			/// <summary>PID: 1064 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int linuxmonitoreddisksusedspace_1064 = 1064;
			/// <summary>PID: 1064 | Type: read</summary>
			public const int linuxmonitoreddisksusedspace = 1064;
			/// <summary>PID: 1065 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int linuxmonitoreddisksstatus_1065 = 1065;
			/// <summary>PID: 1065 | Type: read</summary>
			public const int linuxmonitoreddisksstatus = 1065;
			/// <summary>PID: 1066 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int linuxmonitoreddiskswarning_1066 = 1066;
			/// <summary>PID: 1066 | Type: read</summary>
			public const int linuxmonitoreddiskswarning = 1066;
			/// <summary>PID: 1067 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int linuxmonitoreddisksusedspaceabsolute_1067 = 1067;
			/// <summary>PID: 1067 | Type: read</summary>
			public const int linuxmonitoreddisksusedspaceabsolute = 1067;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int linuxmonitoreddisksindex_1056 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int linuxmonitoreddisksindex = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int linuxmonitoreddisksidentifier_1054 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int linuxmonitoreddisksidentifier = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int linuxmonitoreddisksmountpath_1057 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int linuxmonitoreddisksmountpath = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int linuxmonitoreddisksdevicepath_1058 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int linuxmonitoreddisksdevicepath = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int linuxmonitoreddisksminimum_1059 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int linuxmonitoreddisksminimum = 4;
			/// <summary>IDX: 5 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int linuxmonitoreddiskspercentagediskminimum_1060 = 5;
			/// <summary>IDX: 5 | Type: read</summary>
			public const int linuxmonitoreddiskspercentagediskminimum = 5;
			/// <summary>IDX: 6 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int linuxmonitoreddiskstotalsize_1061 = 6;
			/// <summary>IDX: 6 | Type: read</summary>
			public const int linuxmonitoreddiskstotalsize = 6;
			/// <summary>IDX: 7 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int linuxmonitoreddisksavailablespace_1062 = 7;
			/// <summary>IDX: 7 | Type: read</summary>
			public const int linuxmonitoreddisksavailablespace = 7;
			/// <summary>IDX: 8 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int linuxmonitoreddisksusedspace_1064 = 8;
			/// <summary>IDX: 8 | Type: read</summary>
			public const int linuxmonitoreddisksusedspace = 8;
			/// <summary>IDX: 9 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int linuxmonitoreddisksstatus_1065 = 9;
			/// <summary>IDX: 9 | Type: read</summary>
			public const int linuxmonitoreddisksstatus = 9;
			/// <summary>IDX: 10 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int linuxmonitoreddiskswarning_1066 = 10;
			/// <summary>IDX: 10 | Type: read</summary>
			public const int linuxmonitoreddiskswarning = 10;
			/// <summary>IDX: 11 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int linuxmonitoreddisksusedspaceabsolute_1067 = 11;
			/// <summary>IDX: 11 | Type: read</summary>
			public const int linuxmonitoreddisksusedspaceabsolute = 11;
		}
	}
	public class Loadaverageinformation
	{
		/// <summary>PID: 1100</summary>
		public const int tablePid = 1100;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 1105</summary>
		public const int indexColumnPid = 1105;
		public class Pid
		{
			/// <summary>PID: 1105 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int loadaverageinformationindex_1105 = 1105;
			/// <summary>PID: 1105 | Type: read</summary>
			public const int loadaverageinformationindex = 1105;
			/// <summary>PID: 1106 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int loadaverageinformationname_1106 = 1106;
			/// <summary>PID: 1106 | Type: read</summary>
			public const int loadaverageinformationname = 1106;
			/// <summary>PID: 1107 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int loadaverageinformationvalue_1107 = 1107;
			/// <summary>PID: 1107 | Type: read</summary>
			public const int loadaverageinformationvalue = 1107;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int loadaverageinformationindex_1105 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int loadaverageinformationindex = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int loadaverageinformationname_1106 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int loadaverageinformationname = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int loadaverageinformationvalue_1107 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int loadaverageinformationvalue = 2;
		}
	}
	public class Processortable
	{
		/// <summary>PID: 1220</summary>
		public const int tablePid = 1220;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 1221</summary>
		public const int indexColumnPid = 1221;
		public class Pid
		{
			/// <summary>PID: 1221 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int processorinstance_1221 = 1221;
			/// <summary>PID: 1221 | Type: read</summary>
			public const int processorinstance = 1221;
			/// <summary>PID: 1222 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int processorfrwid_1222 = 1222;
			/// <summary>PID: 1222 | Type: read</summary>
			public const int processorfrwid = 1222;
			/// <summary>PID: 1223 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int processorload_1223 = 1223;
			/// <summary>PID: 1223 | Type: read</summary>
			public const int processorload = 1223;
			/// <summary>PID: 1224 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int processordevicedescr_1224 = 1224;
			/// <summary>PID: 1224 | Type: read</summary>
			public const int processordevicedescr = 1224;
			/// <summary>PID: 1225 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int processorindex_1225 = 1225;
			/// <summary>PID: 1225 | Type: read</summary>
			public const int processorindex = 1225;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int processorinstance_1221 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int processorinstance = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int processorfrwid_1222 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int processorfrwid = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int processorload_1223 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int processorload = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int processordevicedescr_1224 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int processordevicedescr = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int processorindex_1225 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int processorindex = 4;
		}
	}
	public class Lvsservicetable
	{
		/// <summary>PID: 1600</summary>
		public const int tablePid = 1600;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 1601</summary>
		public const int indexColumnPid = 1601;
		public class Pid
		{
			/// <summary>PID: 1601 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsservicenumber_1601 = 1601;
			/// <summary>PID: 1601 | Type: read</summary>
			public const int lvsservicenumber = 1601;
			/// <summary>PID: 1602 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsserviceschedtype_1602 = 1602;
			/// <summary>PID: 1602 | Type: read</summary>
			public const int lvsserviceschedtype = 1602;
			/// <summary>PID: 1603 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsserviceproto_1603 = 1603;
			/// <summary>PID: 1603 | Type: read</summary>
			public const int lvsserviceproto = 1603;
			/// <summary>PID: 1604 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsserviceaddr_1604 = 1604;
			/// <summary>PID: 1604 | Type: read</summary>
			public const int lvsserviceaddr = 1604;
			/// <summary>PID: 1605 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsserviceport_1605 = 1605;
			/// <summary>PID: 1605 | Type: read</summary>
			public const int lvsserviceport = 1605;
			/// <summary>PID: 1606 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsservicefwmark_1606 = 1606;
			/// <summary>PID: 1606 | Type: read</summary>
			public const int lvsservicefwmark = 1606;
			/// <summary>PID: 1607 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsservicepersisttimeout_1607 = 1607;
			/// <summary>PID: 1607 | Type: read</summary>
			public const int lvsservicepersisttimeout = 1607;
			/// <summary>PID: 1608 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsservicepersistnetmask_1608 = 1608;
			/// <summary>PID: 1608 | Type: read</summary>
			public const int lvsservicepersistnetmask = 1608;
			/// <summary>PID: 1609 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsservicenumdests_1609 = 1609;
			/// <summary>PID: 1609 | Type: read</summary>
			public const int lvsservicenumdests = 1609;
			/// <summary>PID: 1610 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsservicestatsconns_1610 = 1610;
			/// <summary>PID: 1610 | Type: read</summary>
			public const int lvsservicestatsconns = 1610;
			/// <summary>PID: 1611 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsservicestatsinpkts_1611 = 1611;
			/// <summary>PID: 1611 | Type: read</summary>
			public const int lvsservicestatsinpkts = 1611;
			/// <summary>PID: 1612 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsservicestatsoutpkts_1612 = 1612;
			/// <summary>PID: 1612 | Type: read</summary>
			public const int lvsservicestatsoutpkts = 1612;
			/// <summary>PID: 1613 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsservicestatsinbytes_1613 = 1613;
			/// <summary>PID: 1613 | Type: read</summary>
			public const int lvsservicestatsinbytes = 1613;
			/// <summary>PID: 1614 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsservicestatsoutbytes_1614 = 1614;
			/// <summary>PID: 1614 | Type: read</summary>
			public const int lvsservicestatsoutbytes = 1614;
			/// <summary>PID: 1615 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsserviceratecps_1615 = 1615;
			/// <summary>PID: 1615 | Type: read</summary>
			public const int lvsserviceratecps = 1615;
			/// <summary>PID: 1616 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsservicerateinpps_1616 = 1616;
			/// <summary>PID: 1616 | Type: read</summary>
			public const int lvsservicerateinpps = 1616;
			/// <summary>PID: 1617 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsservicerateoutpps_1617 = 1617;
			/// <summary>PID: 1617 | Type: read</summary>
			public const int lvsservicerateoutpps = 1617;
			/// <summary>PID: 1618 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsservicerateinbps_1618 = 1618;
			/// <summary>PID: 1618 | Type: read</summary>
			public const int lvsservicerateinbps = 1618;
			/// <summary>PID: 1619 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsservicerateoutbps_1619 = 1619;
			/// <summary>PID: 1619 | Type: read</summary>
			public const int lvsservicerateoutbps = 1619;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsservicenumber_1601 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int lvsservicenumber = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsserviceschedtype_1602 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int lvsserviceschedtype = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsserviceproto_1603 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int lvsserviceproto = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsserviceaddr_1604 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int lvsserviceaddr = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsserviceport_1605 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int lvsserviceport = 4;
			/// <summary>IDX: 5 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsservicefwmark_1606 = 5;
			/// <summary>IDX: 5 | Type: read</summary>
			public const int lvsservicefwmark = 5;
			/// <summary>IDX: 6 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsservicepersisttimeout_1607 = 6;
			/// <summary>IDX: 6 | Type: read</summary>
			public const int lvsservicepersisttimeout = 6;
			/// <summary>IDX: 7 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsservicepersistnetmask_1608 = 7;
			/// <summary>IDX: 7 | Type: read</summary>
			public const int lvsservicepersistnetmask = 7;
			/// <summary>IDX: 8 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsservicenumdests_1609 = 8;
			/// <summary>IDX: 8 | Type: read</summary>
			public const int lvsservicenumdests = 8;
			/// <summary>IDX: 9 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsservicestatsconns_1610 = 9;
			/// <summary>IDX: 9 | Type: read</summary>
			public const int lvsservicestatsconns = 9;
			/// <summary>IDX: 10 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsservicestatsinpkts_1611 = 10;
			/// <summary>IDX: 10 | Type: read</summary>
			public const int lvsservicestatsinpkts = 10;
			/// <summary>IDX: 11 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsservicestatsoutpkts_1612 = 11;
			/// <summary>IDX: 11 | Type: read</summary>
			public const int lvsservicestatsoutpkts = 11;
			/// <summary>IDX: 12 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsservicestatsinbytes_1613 = 12;
			/// <summary>IDX: 12 | Type: read</summary>
			public const int lvsservicestatsinbytes = 12;
			/// <summary>IDX: 13 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsservicestatsoutbytes_1614 = 13;
			/// <summary>IDX: 13 | Type: read</summary>
			public const int lvsservicestatsoutbytes = 13;
			/// <summary>IDX: 14 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsserviceratecps_1615 = 14;
			/// <summary>IDX: 14 | Type: read</summary>
			public const int lvsserviceratecps = 14;
			/// <summary>IDX: 15 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsservicerateinpps_1616 = 15;
			/// <summary>IDX: 15 | Type: read</summary>
			public const int lvsservicerateinpps = 15;
			/// <summary>IDX: 16 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsservicerateoutpps_1617 = 16;
			/// <summary>IDX: 16 | Type: read</summary>
			public const int lvsservicerateoutpps = 16;
			/// <summary>IDX: 17 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsservicerateinbps_1618 = 17;
			/// <summary>IDX: 17 | Type: read</summary>
			public const int lvsservicerateinbps = 17;
			/// <summary>IDX: 18 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsservicerateoutbps_1619 = 18;
			/// <summary>IDX: 18 | Type: read</summary>
			public const int lvsservicerateoutbps = 18;
		}
	}
	public class Lvsrealtable
	{
		/// <summary>PID: 1700</summary>
		public const int tablePid = 1700;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 1701</summary>
		public const int indexColumnPid = 1701;
		public class Pid
		{
			/// <summary>PID: 1701 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsrealservicenumber_1701 = 1701;
			/// <summary>PID: 1701 | Type: read</summary>
			public const int lvsrealservicenumber = 1701;
			/// <summary>PID: 1702 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsrealservernumber_1702 = 1702;
			/// <summary>PID: 1702 | Type: read</summary>
			public const int lvsrealservernumber = 1702;
			/// <summary>PID: 1703 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsrealserveraddr_1703 = 1703;
			/// <summary>PID: 1703 | Type: read</summary>
			public const int lvsrealserveraddr = 1703;
			/// <summary>PID: 1704 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsrealserverport_1704 = 1704;
			/// <summary>PID: 1704 | Type: read</summary>
			public const int lvsrealserverport = 1704;
			/// <summary>PID: 1705 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsrealserverflags_1705 = 1705;
			/// <summary>PID: 1705 | Type: read</summary>
			public const int lvsrealserverflags = 1705;
			/// <summary>PID: 1706 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsrealserverweight_1706 = 1706;
			/// <summary>PID: 1706 | Type: read</summary>
			public const int lvsrealserverweight = 1706;
			/// <summary>PID: 1707 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsrealstatsconns_1707 = 1707;
			/// <summary>PID: 1707 | Type: read</summary>
			public const int lvsrealstatsconns = 1707;
			/// <summary>PID: 1708 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsrealstatsinpkts_1708 = 1708;
			/// <summary>PID: 1708 | Type: read</summary>
			public const int lvsrealstatsinpkts = 1708;
			/// <summary>PID: 1709 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsrealstatsoutpkts_1709 = 1709;
			/// <summary>PID: 1709 | Type: read</summary>
			public const int lvsrealstatsoutpkts = 1709;
			/// <summary>PID: 1710 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsrealstatsinbytes_1710 = 1710;
			/// <summary>PID: 1710 | Type: read</summary>
			public const int lvsrealstatsinbytes = 1710;
			/// <summary>PID: 1711 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsrealstatsoutbytes_1711 = 1711;
			/// <summary>PID: 1711 | Type: read</summary>
			public const int lvsrealstatsoutbytes = 1711;
			/// <summary>PID: 1712 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsrealratecps_1712 = 1712;
			/// <summary>PID: 1712 | Type: read</summary>
			public const int lvsrealratecps = 1712;
			/// <summary>PID: 1713 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsrealrateinpps_1713 = 1713;
			/// <summary>PID: 1713 | Type: read</summary>
			public const int lvsrealrateinpps = 1713;
			/// <summary>PID: 1714 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsrealrateoutpps_1714 = 1714;
			/// <summary>PID: 1714 | Type: read</summary>
			public const int lvsrealrateoutpps = 1714;
			/// <summary>PID: 1715 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsrealrateinbps_1715 = 1715;
			/// <summary>PID: 1715 | Type: read</summary>
			public const int lvsrealrateinbps = 1715;
			/// <summary>PID: 1716 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsrealrateoutbps_1716 = 1716;
			/// <summary>PID: 1716 | Type: read</summary>
			public const int lvsrealrateoutbps = 1716;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsrealservicenumber_1701 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int lvsrealservicenumber = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsrealservernumber_1702 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int lvsrealservernumber = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsrealserveraddr_1703 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int lvsrealserveraddr = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsrealserverport_1704 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int lvsrealserverport = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsrealserverflags_1705 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int lvsrealserverflags = 4;
			/// <summary>IDX: 5 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsrealserverweight_1706 = 5;
			/// <summary>IDX: 5 | Type: read</summary>
			public const int lvsrealserverweight = 5;
			/// <summary>IDX: 6 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsrealstatsconns_1707 = 6;
			/// <summary>IDX: 6 | Type: read</summary>
			public const int lvsrealstatsconns = 6;
			/// <summary>IDX: 7 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsrealstatsinpkts_1708 = 7;
			/// <summary>IDX: 7 | Type: read</summary>
			public const int lvsrealstatsinpkts = 7;
			/// <summary>IDX: 8 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsrealstatsoutpkts_1709 = 8;
			/// <summary>IDX: 8 | Type: read</summary>
			public const int lvsrealstatsoutpkts = 8;
			/// <summary>IDX: 9 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsrealstatsinbytes_1710 = 9;
			/// <summary>IDX: 9 | Type: read</summary>
			public const int lvsrealstatsinbytes = 9;
			/// <summary>IDX: 10 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsrealstatsoutbytes_1711 = 10;
			/// <summary>IDX: 10 | Type: read</summary>
			public const int lvsrealstatsoutbytes = 10;
			/// <summary>IDX: 11 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsrealratecps_1712 = 11;
			/// <summary>IDX: 11 | Type: read</summary>
			public const int lvsrealratecps = 11;
			/// <summary>IDX: 12 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsrealrateinpps_1713 = 12;
			/// <summary>IDX: 12 | Type: read</summary>
			public const int lvsrealrateinpps = 12;
			/// <summary>IDX: 13 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsrealrateoutpps_1714 = 13;
			/// <summary>IDX: 13 | Type: read</summary>
			public const int lvsrealrateoutpps = 13;
			/// <summary>IDX: 14 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsrealrateinbps_1715 = 14;
			/// <summary>IDX: 14 | Type: read</summary>
			public const int lvsrealrateinbps = 14;
			/// <summary>IDX: 15 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int lvsrealrateoutbps_1716 = 15;
			/// <summary>IDX: 15 | Type: read</summary>
			public const int lvsrealrateoutbps = 15;
		}
	}
	public class Externaldataoverview
	{
		/// <summary>PID: 8000</summary>
		public const int tablePid = 8000;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 8001</summary>
		public const int indexColumnPid = 8001;
		public class Pid
		{
			/// <summary>PID: 8001 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int externaldataoverviewid_idx__8001 = 8001;
			/// <summary>PID: 8001 | Type: read</summary>
			public const int externaldataoverviewid_idx_ = 8001;
			/// <summary>PID: 8002 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int externaldataoverviewvalue_8002 = 8002;
			/// <summary>PID: 8002 | Type: read</summary>
			public const int externaldataoverviewvalue = 8002;
			/// <summary>PID: 8003 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int externaldataoverviewstring_8003 = 8003;
			/// <summary>PID: 8003 | Type: read</summary>
			public const int externaldataoverviewstring = 8003;
			/// <summary>PID: 8004 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int externaldataoverviewfunctionality_8004 = 8004;
			/// <summary>PID: 8004 | Type: read</summary>
			public const int externaldataoverviewfunctionality = 8004;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int externaldataoverviewid_idx__8001 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int externaldataoverviewid_idx_ = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int externaldataoverviewvalue_8002 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int externaldataoverviewvalue = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int externaldataoverviewstring_8003 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int externaldataoverviewstring = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int externaldataoverviewfunctionality_8004 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int externaldataoverviewfunctionality = 3;
		}
	}
	public class Processvalidationtable
	{
		/// <summary>PID: 8600</summary>
		public const int tablePid = 8600;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 8601</summary>
		public const int indexColumnPid = 8601;
		public class Pid
		{
			/// <summary>PID: 8601 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int processvalidationprocesstovalidate_8601 = 8601;
			/// <summary>PID: 8601 | Type: read</summary>
			public const int processvalidationprocesstovalidate = 8601;
			/// <summary>PID: 8602 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int processvalidationstatus_8602 = 8602;
			/// <summary>PID: 8602 | Type: read</summary>
			public const int processvalidationstatus = 8602;
			/// <summary>PID: 8603 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int processvalidationprocessmonitoring_8603 = 8603;
			/// <summary>PID: 8603 | Type: read</summary>
			public const int processvalidationprocessmonitoring = 8603;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int processvalidationprocesstovalidate_8601 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int processvalidationprocesstovalidate = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int processvalidationstatus_8602 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int processvalidationstatus = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int processvalidationprocessmonitoring_8603 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int processvalidationprocessmonitoring = 2;
		}
	}
	public class Exttable
	{
		/// <summary>PID: 10000</summary>
		public const int tablePid = 10000;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 10001</summary>
		public const int indexColumnPid = 10001;
		public class Pid
		{
			/// <summary>PID: 10001 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int exttableindex_10001 = 10001;
			/// <summary>PID: 10001 | Type: read</summary>
			public const int exttableindex = 10001;
			/// <summary>PID: 10002 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int extnames_10002 = 10002;
			/// <summary>PID: 10002 | Type: read</summary>
			public const int extnames = 10002;
			/// <summary>PID: 10003 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int extcommand_10003 = 10003;
			/// <summary>PID: 10003 | Type: read</summary>
			public const int extcommand = 10003;
			/// <summary>PID: 10004 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int extresult_10004 = 10004;
			/// <summary>PID: 10004 | Type: read</summary>
			public const int extresult = 10004;
			/// <summary>PID: 10005 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int extoutput_10005 = 10005;
			/// <summary>PID: 10005 | Type: read</summary>
			public const int extoutput = 10005;
			/// <summary>PID: 10006 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int exterrfix_10006 = 10006;
			/// <summary>PID: 10006 | Type: read</summary>
			public const int exterrfix = 10006;
			/// <summary>PID: 10007 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int exterrfixcmd_10007 = 10007;
			/// <summary>PID: 10007 | Type: read</summary>
			public const int exterrfixcmd = 10007;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int exttableindex_10001 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int exttableindex = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int extnames_10002 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int extnames = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int extcommand_10003 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int extcommand = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int extresult_10004 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int extresult = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int extoutput_10005 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int extoutput = 4;
			/// <summary>IDX: 5 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int exterrfix_10006 = 5;
			/// <summary>IDX: 5 | Type: read</summary>
			public const int exterrfix = 5;
			/// <summary>IDX: 6 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int exterrfixcmd_10007 = 6;
			/// <summary>IDX: 6 | Type: read</summary>
			public const int exterrfixcmd = 6;
		}
	}
	public class Diskiotable
	{
		/// <summary>PID: 10100</summary>
		public const int tablePid = 10100;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 10101</summary>
		public const int indexColumnPid = 10101;
		public class Pid
		{
			/// <summary>PID: 10101 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int diskioindex_10101 = 10101;
			/// <summary>PID: 10101 | Type: read</summary>
			public const int diskioindex = 10101;
			/// <summary>PID: 10102 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int diskiodevice_10102 = 10102;
			/// <summary>PID: 10102 | Type: read</summary>
			public const int diskiodevice = 10102;
			/// <summary>PID: 10103 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int diskionread_10103 = 10103;
			/// <summary>PID: 10103 | Type: read</summary>
			public const int diskionread = 10103;
			/// <summary>PID: 10104 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int diskionreadrate_10104 = 10104;
			/// <summary>PID: 10104 | Type: read</summary>
			public const int diskionreadrate = 10104;
			/// <summary>PID: 10105 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int diskionreadbefore_10105 = 10105;
			/// <summary>PID: 10105 | Type: read</summary>
			public const int diskionreadbefore = 10105;
			/// <summary>PID: 10106 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int diskionwritten_10106 = 10106;
			/// <summary>PID: 10106 | Type: read</summary>
			public const int diskionwritten = 10106;
			/// <summary>PID: 10107 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int diskionwrittenrate_10107 = 10107;
			/// <summary>PID: 10107 | Type: read</summary>
			public const int diskionwrittenrate = 10107;
			/// <summary>PID: 10108 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int diskionwrittenbefore_10108 = 10108;
			/// <summary>PID: 10108 | Type: read</summary>
			public const int diskionwrittenbefore = 10108;
			/// <summary>PID: 10109 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int diskioreads_10109 = 10109;
			/// <summary>PID: 10109 | Type: read</summary>
			public const int diskioreads = 10109;
			/// <summary>PID: 10110 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int diskiowrites_10110 = 10110;
			/// <summary>PID: 10110 | Type: read</summary>
			public const int diskiowrites = 10110;
			/// <summary>PID: 10111 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int diskioreadsrate_10111 = 10111;
			/// <summary>PID: 10111 | Type: read</summary>
			public const int diskioreadsrate = 10111;
			/// <summary>PID: 10112 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int diskioreadsbefore_10112 = 10112;
			/// <summary>PID: 10112 | Type: read</summary>
			public const int diskioreadsbefore = 10112;
			/// <summary>PID: 10113 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int diskiowritesrate_10113 = 10113;
			/// <summary>PID: 10113 | Type: read</summary>
			public const int diskiowritesrate = 10113;
			/// <summary>PID: 10114 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int diskiowritesbefore_10114 = 10114;
			/// <summary>PID: 10114 | Type: read</summary>
			public const int diskiowritesbefore = 10114;
			/// <summary>PID: 10115 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int diskioaveragesecondread_10115 = 10115;
			/// <summary>PID: 10115 | Type: read</summary>
			public const int diskioaveragesecondread = 10115;
			/// <summary>PID: 10116 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int diskioaveragesecondwrite_10116 = 10116;
			/// <summary>PID: 10116 | Type: read</summary>
			public const int diskioaveragesecondwrite = 10116;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int diskioindex_10101 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int diskioindex = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int diskiodevice_10102 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int diskiodevice = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int diskionread_10103 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int diskionread = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int diskionreadrate_10104 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int diskionreadrate = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int diskionreadbefore_10105 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int diskionreadbefore = 4;
			/// <summary>IDX: 5 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int diskionwritten_10106 = 5;
			/// <summary>IDX: 5 | Type: read</summary>
			public const int diskionwritten = 5;
			/// <summary>IDX: 6 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int diskionwrittenrate_10107 = 6;
			/// <summary>IDX: 6 | Type: read</summary>
			public const int diskionwrittenrate = 6;
			/// <summary>IDX: 7 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int diskionwrittenbefore_10108 = 7;
			/// <summary>IDX: 7 | Type: read</summary>
			public const int diskionwrittenbefore = 7;
			/// <summary>IDX: 8 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int diskioreads_10109 = 8;
			/// <summary>IDX: 8 | Type: read</summary>
			public const int diskioreads = 8;
			/// <summary>IDX: 9 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int diskiowrites_10110 = 9;
			/// <summary>IDX: 9 | Type: read</summary>
			public const int diskiowrites = 9;
			/// <summary>IDX: 10 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int diskioreadsrate_10111 = 10;
			/// <summary>IDX: 10 | Type: read</summary>
			public const int diskioreadsrate = 10;
			/// <summary>IDX: 11 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int diskioreadsbefore_10112 = 11;
			/// <summary>IDX: 11 | Type: read</summary>
			public const int diskioreadsbefore = 11;
			/// <summary>IDX: 12 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int diskiowritesrate_10113 = 12;
			/// <summary>IDX: 12 | Type: read</summary>
			public const int diskiowritesrate = 12;
			/// <summary>IDX: 13 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int diskiowritesbefore_10114 = 13;
			/// <summary>IDX: 13 | Type: read</summary>
			public const int diskiowritesbefore = 13;
			/// <summary>IDX: 14 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int diskioaveragesecondread_10115 = 14;
			/// <summary>IDX: 14 | Type: read</summary>
			public const int diskioaveragesecondread = 14;
			/// <summary>IDX: 15 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int diskioaveragesecondwrite_10116 = 15;
			/// <summary>IDX: 15 | Type: read</summary>
			public const int diskioaveragesecondwrite = 15;
		}
	}
	public class Ipsystemstatstable
	{
		/// <summary>PID: 22000</summary>
		public const int tablePid = 22000;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 22001</summary>
		public const int indexColumnPid = 22001;
		public class Pid
		{
			/// <summary>PID: 22001 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsipversion_22001 = 22001;
			/// <summary>PID: 22001 | Type: read</summary>
			public const int ipsystemstatsipversion = 22001;
			/// <summary>PID: 22002 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsinreceives_22002 = 22002;
			/// <summary>PID: 22002 | Type: read</summary>
			public const int ipsystemstatsinreceives = 22002;
			/// <summary>PID: 22003 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatshcinreceives_22003 = 22003;
			/// <summary>PID: 22003 | Type: read</summary>
			public const int ipsystemstatshcinreceives = 22003;
			/// <summary>PID: 22004 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsinoctets_22004 = 22004;
			/// <summary>PID: 22004 | Type: read</summary>
			public const int ipsystemstatsinoctets = 22004;
			/// <summary>PID: 22005 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatshcinoctets_22005 = 22005;
			/// <summary>PID: 22005 | Type: read</summary>
			public const int ipsystemstatshcinoctets = 22005;
			/// <summary>PID: 22006 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsinhdrerrors_22006 = 22006;
			/// <summary>PID: 22006 | Type: read</summary>
			public const int ipsystemstatsinhdrerrors = 22006;
			/// <summary>PID: 22007 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsinnoroutes_22007 = 22007;
			/// <summary>PID: 22007 | Type: read</summary>
			public const int ipsystemstatsinnoroutes = 22007;
			/// <summary>PID: 22008 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsinaddrerrors_22008 = 22008;
			/// <summary>PID: 22008 | Type: read</summary>
			public const int ipsystemstatsinaddrerrors = 22008;
			/// <summary>PID: 22009 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsinunknownprotos_22009 = 22009;
			/// <summary>PID: 22009 | Type: read</summary>
			public const int ipsystemstatsinunknownprotos = 22009;
			/// <summary>PID: 22010 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsintruncatedpkts_22010 = 22010;
			/// <summary>PID: 22010 | Type: read</summary>
			public const int ipsystemstatsintruncatedpkts = 22010;
			/// <summary>PID: 22011 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsinforwdatagrams_22011 = 22011;
			/// <summary>PID: 22011 | Type: read</summary>
			public const int ipsystemstatsinforwdatagrams = 22011;
			/// <summary>PID: 22012 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatshcinforwdatagrams_22012 = 22012;
			/// <summary>PID: 22012 | Type: read</summary>
			public const int ipsystemstatshcinforwdatagrams = 22012;
			/// <summary>PID: 22013 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsreasmreqds_22013 = 22013;
			/// <summary>PID: 22013 | Type: read</summary>
			public const int ipsystemstatsreasmreqds = 22013;
			/// <summary>PID: 22014 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsreasmoks_22014 = 22014;
			/// <summary>PID: 22014 | Type: read</summary>
			public const int ipsystemstatsreasmoks = 22014;
			/// <summary>PID: 22015 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsreasmfails_22015 = 22015;
			/// <summary>PID: 22015 | Type: read</summary>
			public const int ipsystemstatsreasmfails = 22015;
			/// <summary>PID: 22016 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsindiscards_22016 = 22016;
			/// <summary>PID: 22016 | Type: read</summary>
			public const int ipsystemstatsindiscards = 22016;
			/// <summary>PID: 22017 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsindelivers_22017 = 22017;
			/// <summary>PID: 22017 | Type: read</summary>
			public const int ipsystemstatsindelivers = 22017;
			/// <summary>PID: 22018 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatshcindelivers_22018 = 22018;
			/// <summary>PID: 22018 | Type: read</summary>
			public const int ipsystemstatshcindelivers = 22018;
			/// <summary>PID: 22019 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsoutrequests_22019 = 22019;
			/// <summary>PID: 22019 | Type: read</summary>
			public const int ipsystemstatsoutrequests = 22019;
			/// <summary>PID: 22020 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatshcoutrequests_22020 = 22020;
			/// <summary>PID: 22020 | Type: read</summary>
			public const int ipsystemstatshcoutrequests = 22020;
			/// <summary>PID: 22021 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsoutnoroutes_22021 = 22021;
			/// <summary>PID: 22021 | Type: read</summary>
			public const int ipsystemstatsoutnoroutes = 22021;
			/// <summary>PID: 22022 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsoutforwdatagrams_22022 = 22022;
			/// <summary>PID: 22022 | Type: read</summary>
			public const int ipsystemstatsoutforwdatagrams = 22022;
			/// <summary>PID: 22023 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatshcoutforwdatagrams_22023 = 22023;
			/// <summary>PID: 22023 | Type: read</summary>
			public const int ipsystemstatshcoutforwdatagrams = 22023;
			/// <summary>PID: 22024 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsoutdiscards_22024 = 22024;
			/// <summary>PID: 22024 | Type: read</summary>
			public const int ipsystemstatsoutdiscards = 22024;
			/// <summary>PID: 22025 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsoutfragreqds_22025 = 22025;
			/// <summary>PID: 22025 | Type: read</summary>
			public const int ipsystemstatsoutfragreqds = 22025;
			/// <summary>PID: 22026 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsoutfragoks_22026 = 22026;
			/// <summary>PID: 22026 | Type: read</summary>
			public const int ipsystemstatsoutfragoks = 22026;
			/// <summary>PID: 22027 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsoutfragfails_22027 = 22027;
			/// <summary>PID: 22027 | Type: read</summary>
			public const int ipsystemstatsoutfragfails = 22027;
			/// <summary>PID: 22028 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsoutfragcreates_22028 = 22028;
			/// <summary>PID: 22028 | Type: read</summary>
			public const int ipsystemstatsoutfragcreates = 22028;
			/// <summary>PID: 22029 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsouttransmits_22029 = 22029;
			/// <summary>PID: 22029 | Type: read</summary>
			public const int ipsystemstatsouttransmits = 22029;
			/// <summary>PID: 22030 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatshcouttransmits_22030 = 22030;
			/// <summary>PID: 22030 | Type: read</summary>
			public const int ipsystemstatshcouttransmits = 22030;
			/// <summary>PID: 22031 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsoutoctets_22031 = 22031;
			/// <summary>PID: 22031 | Type: read</summary>
			public const int ipsystemstatsoutoctets = 22031;
			/// <summary>PID: 22032 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatshcoutoctets_22032 = 22032;
			/// <summary>PID: 22032 | Type: read</summary>
			public const int ipsystemstatshcoutoctets = 22032;
			/// <summary>PID: 22033 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsinmcastpkts_22033 = 22033;
			/// <summary>PID: 22033 | Type: read</summary>
			public const int ipsystemstatsinmcastpkts = 22033;
			/// <summary>PID: 22034 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatshcinmcastpkts_22034 = 22034;
			/// <summary>PID: 22034 | Type: read</summary>
			public const int ipsystemstatshcinmcastpkts = 22034;
			/// <summary>PID: 22035 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsinmcastoctets_22035 = 22035;
			/// <summary>PID: 22035 | Type: read</summary>
			public const int ipsystemstatsinmcastoctets = 22035;
			/// <summary>PID: 22036 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatshcinmcastoctets_22036 = 22036;
			/// <summary>PID: 22036 | Type: read</summary>
			public const int ipsystemstatshcinmcastoctets = 22036;
			/// <summary>PID: 22037 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsoutmcastpkts_22037 = 22037;
			/// <summary>PID: 22037 | Type: read</summary>
			public const int ipsystemstatsoutmcastpkts = 22037;
			/// <summary>PID: 22038 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatshcoutmcastpkts_22038 = 22038;
			/// <summary>PID: 22038 | Type: read</summary>
			public const int ipsystemstatshcoutmcastpkts = 22038;
			/// <summary>PID: 22039 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsoutmcastoctets_22039 = 22039;
			/// <summary>PID: 22039 | Type: read</summary>
			public const int ipsystemstatsoutmcastoctets = 22039;
			/// <summary>PID: 22040 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatshcoutmcastoctets_22040 = 22040;
			/// <summary>PID: 22040 | Type: read</summary>
			public const int ipsystemstatshcoutmcastoctets = 22040;
			/// <summary>PID: 22041 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsinbcastpkts_22041 = 22041;
			/// <summary>PID: 22041 | Type: read</summary>
			public const int ipsystemstatsinbcastpkts = 22041;
			/// <summary>PID: 22042 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatshcinbcastpkts_22042 = 22042;
			/// <summary>PID: 22042 | Type: read</summary>
			public const int ipsystemstatshcinbcastpkts = 22042;
			/// <summary>PID: 22043 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsoutbcastpkts_22043 = 22043;
			/// <summary>PID: 22043 | Type: read</summary>
			public const int ipsystemstatsoutbcastpkts = 22043;
			/// <summary>PID: 22044 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatshcoutbcastpkts_22044 = 22044;
			/// <summary>PID: 22044 | Type: read</summary>
			public const int ipsystemstatshcoutbcastpkts = 22044;
			/// <summary>PID: 22045 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsdiscontinuitytime_22045 = 22045;
			/// <summary>PID: 22045 | Type: read</summary>
			public const int ipsystemstatsdiscontinuitytime = 22045;
			/// <summary>PID: 22046 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsrefreshrate_22046 = 22046;
			/// <summary>PID: 22046 | Type: read</summary>
			public const int ipsystemstatsrefreshrate = 22046;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsipversion_22001 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int ipsystemstatsipversion = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsinreceives_22002 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int ipsystemstatsinreceives = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatshcinreceives_22003 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int ipsystemstatshcinreceives = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsinoctets_22004 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int ipsystemstatsinoctets = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatshcinoctets_22005 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int ipsystemstatshcinoctets = 4;
			/// <summary>IDX: 5 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsinhdrerrors_22006 = 5;
			/// <summary>IDX: 5 | Type: read</summary>
			public const int ipsystemstatsinhdrerrors = 5;
			/// <summary>IDX: 6 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsinnoroutes_22007 = 6;
			/// <summary>IDX: 6 | Type: read</summary>
			public const int ipsystemstatsinnoroutes = 6;
			/// <summary>IDX: 7 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsinaddrerrors_22008 = 7;
			/// <summary>IDX: 7 | Type: read</summary>
			public const int ipsystemstatsinaddrerrors = 7;
			/// <summary>IDX: 8 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsinunknownprotos_22009 = 8;
			/// <summary>IDX: 8 | Type: read</summary>
			public const int ipsystemstatsinunknownprotos = 8;
			/// <summary>IDX: 9 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsintruncatedpkts_22010 = 9;
			/// <summary>IDX: 9 | Type: read</summary>
			public const int ipsystemstatsintruncatedpkts = 9;
			/// <summary>IDX: 10 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsinforwdatagrams_22011 = 10;
			/// <summary>IDX: 10 | Type: read</summary>
			public const int ipsystemstatsinforwdatagrams = 10;
			/// <summary>IDX: 11 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatshcinforwdatagrams_22012 = 11;
			/// <summary>IDX: 11 | Type: read</summary>
			public const int ipsystemstatshcinforwdatagrams = 11;
			/// <summary>IDX: 12 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsreasmreqds_22013 = 12;
			/// <summary>IDX: 12 | Type: read</summary>
			public const int ipsystemstatsreasmreqds = 12;
			/// <summary>IDX: 13 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsreasmoks_22014 = 13;
			/// <summary>IDX: 13 | Type: read</summary>
			public const int ipsystemstatsreasmoks = 13;
			/// <summary>IDX: 14 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsreasmfails_22015 = 14;
			/// <summary>IDX: 14 | Type: read</summary>
			public const int ipsystemstatsreasmfails = 14;
			/// <summary>IDX: 15 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsindiscards_22016 = 15;
			/// <summary>IDX: 15 | Type: read</summary>
			public const int ipsystemstatsindiscards = 15;
			/// <summary>IDX: 16 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsindelivers_22017 = 16;
			/// <summary>IDX: 16 | Type: read</summary>
			public const int ipsystemstatsindelivers = 16;
			/// <summary>IDX: 17 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatshcindelivers_22018 = 17;
			/// <summary>IDX: 17 | Type: read</summary>
			public const int ipsystemstatshcindelivers = 17;
			/// <summary>IDX: 18 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsoutrequests_22019 = 18;
			/// <summary>IDX: 18 | Type: read</summary>
			public const int ipsystemstatsoutrequests = 18;
			/// <summary>IDX: 19 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatshcoutrequests_22020 = 19;
			/// <summary>IDX: 19 | Type: read</summary>
			public const int ipsystemstatshcoutrequests = 19;
			/// <summary>IDX: 20 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsoutnoroutes_22021 = 20;
			/// <summary>IDX: 20 | Type: read</summary>
			public const int ipsystemstatsoutnoroutes = 20;
			/// <summary>IDX: 21 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsoutforwdatagrams_22022 = 21;
			/// <summary>IDX: 21 | Type: read</summary>
			public const int ipsystemstatsoutforwdatagrams = 21;
			/// <summary>IDX: 22 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatshcoutforwdatagrams_22023 = 22;
			/// <summary>IDX: 22 | Type: read</summary>
			public const int ipsystemstatshcoutforwdatagrams = 22;
			/// <summary>IDX: 23 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsoutdiscards_22024 = 23;
			/// <summary>IDX: 23 | Type: read</summary>
			public const int ipsystemstatsoutdiscards = 23;
			/// <summary>IDX: 24 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsoutfragreqds_22025 = 24;
			/// <summary>IDX: 24 | Type: read</summary>
			public const int ipsystemstatsoutfragreqds = 24;
			/// <summary>IDX: 25 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsoutfragoks_22026 = 25;
			/// <summary>IDX: 25 | Type: read</summary>
			public const int ipsystemstatsoutfragoks = 25;
			/// <summary>IDX: 26 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsoutfragfails_22027 = 26;
			/// <summary>IDX: 26 | Type: read</summary>
			public const int ipsystemstatsoutfragfails = 26;
			/// <summary>IDX: 27 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsoutfragcreates_22028 = 27;
			/// <summary>IDX: 27 | Type: read</summary>
			public const int ipsystemstatsoutfragcreates = 27;
			/// <summary>IDX: 28 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsouttransmits_22029 = 28;
			/// <summary>IDX: 28 | Type: read</summary>
			public const int ipsystemstatsouttransmits = 28;
			/// <summary>IDX: 29 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatshcouttransmits_22030 = 29;
			/// <summary>IDX: 29 | Type: read</summary>
			public const int ipsystemstatshcouttransmits = 29;
			/// <summary>IDX: 30 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsoutoctets_22031 = 30;
			/// <summary>IDX: 30 | Type: read</summary>
			public const int ipsystemstatsoutoctets = 30;
			/// <summary>IDX: 31 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatshcoutoctets_22032 = 31;
			/// <summary>IDX: 31 | Type: read</summary>
			public const int ipsystemstatshcoutoctets = 31;
			/// <summary>IDX: 32 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsinmcastpkts_22033 = 32;
			/// <summary>IDX: 32 | Type: read</summary>
			public const int ipsystemstatsinmcastpkts = 32;
			/// <summary>IDX: 33 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatshcinmcastpkts_22034 = 33;
			/// <summary>IDX: 33 | Type: read</summary>
			public const int ipsystemstatshcinmcastpkts = 33;
			/// <summary>IDX: 34 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsinmcastoctets_22035 = 34;
			/// <summary>IDX: 34 | Type: read</summary>
			public const int ipsystemstatsinmcastoctets = 34;
			/// <summary>IDX: 35 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatshcinmcastoctets_22036 = 35;
			/// <summary>IDX: 35 | Type: read</summary>
			public const int ipsystemstatshcinmcastoctets = 35;
			/// <summary>IDX: 36 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsoutmcastpkts_22037 = 36;
			/// <summary>IDX: 36 | Type: read</summary>
			public const int ipsystemstatsoutmcastpkts = 36;
			/// <summary>IDX: 37 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatshcoutmcastpkts_22038 = 37;
			/// <summary>IDX: 37 | Type: read</summary>
			public const int ipsystemstatshcoutmcastpkts = 37;
			/// <summary>IDX: 38 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsoutmcastoctets_22039 = 38;
			/// <summary>IDX: 38 | Type: read</summary>
			public const int ipsystemstatsoutmcastoctets = 38;
			/// <summary>IDX: 39 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatshcoutmcastoctets_22040 = 39;
			/// <summary>IDX: 39 | Type: read</summary>
			public const int ipsystemstatshcoutmcastoctets = 39;
			/// <summary>IDX: 40 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsinbcastpkts_22041 = 40;
			/// <summary>IDX: 40 | Type: read</summary>
			public const int ipsystemstatsinbcastpkts = 40;
			/// <summary>IDX: 41 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatshcinbcastpkts_22042 = 41;
			/// <summary>IDX: 41 | Type: read</summary>
			public const int ipsystemstatshcinbcastpkts = 41;
			/// <summary>IDX: 42 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsoutbcastpkts_22043 = 42;
			/// <summary>IDX: 42 | Type: read</summary>
			public const int ipsystemstatsoutbcastpkts = 42;
			/// <summary>IDX: 43 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatshcoutbcastpkts_22044 = 43;
			/// <summary>IDX: 43 | Type: read</summary>
			public const int ipsystemstatshcoutbcastpkts = 43;
			/// <summary>IDX: 44 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsdiscontinuitytime_22045 = 44;
			/// <summary>IDX: 44 | Type: read</summary>
			public const int ipsystemstatsdiscontinuitytime = 44;
			/// <summary>IDX: 45 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int ipsystemstatsrefreshrate_22046 = 45;
			/// <summary>IDX: 45 | Type: read</summary>
			public const int ipsystemstatsrefreshrate = 45;
		}
	}
	public class Tcpconnectiontable
	{
		/// <summary>PID: 22400</summary>
		public const int tablePid = 22400;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 22401</summary>
		public const int indexColumnPid = 22401;
		public class Pid
		{
			/// <summary>PID: 22401 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int tcpconnectiontableinstance_22401 = 22401;
			/// <summary>PID: 22401 | Type: read</summary>
			public const int tcpconnectiontableinstance = 22401;
			/// <summary>PID: 22402 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int tcpconnectionstate_22402 = 22402;
			/// <summary>PID: 22402 | Type: read</summary>
			public const int tcpconnectionstate = 22402;
			/// <summary>PID: 22403 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int tcpconnectionprocess_22403 = 22403;
			/// <summary>PID: 22403 | Type: read</summary>
			public const int tcpconnectionprocess = 22403;
			/// <summary>PID: 22404 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int tcpconnectionlocalipaddresstype_22404 = 22404;
			/// <summary>PID: 22404 | Type: read</summary>
			public const int tcpconnectionlocalipaddresstype = 22404;
			/// <summary>PID: 22405 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int tcpconnectionlocalipaddress_22405 = 22405;
			/// <summary>PID: 22405 | Type: read</summary>
			public const int tcpconnectionlocalipaddress = 22405;
			/// <summary>PID: 22406 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int tcpconnectionlocalipaddressport_22406 = 22406;
			/// <summary>PID: 22406 | Type: read</summary>
			public const int tcpconnectionlocalipaddressport = 22406;
			/// <summary>PID: 22407 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int tcpconnectionremoteipaddresstype_22407 = 22407;
			/// <summary>PID: 22407 | Type: read</summary>
			public const int tcpconnectionremoteipaddresstype = 22407;
			/// <summary>PID: 22408 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int tcpconnectionremoteipaddress_22408 = 22408;
			/// <summary>PID: 22408 | Type: read</summary>
			public const int tcpconnectionremoteipaddress = 22408;
			/// <summary>PID: 22409 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int tcpconnectionremoteipaddressport_22409 = 22409;
			/// <summary>PID: 22409 | Type: read</summary>
			public const int tcpconnectionremoteipaddressport = 22409;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int tcpconnectiontableinstance_22401 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int tcpconnectiontableinstance = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int tcpconnectionstate_22402 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int tcpconnectionstate = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int tcpconnectionprocess_22403 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int tcpconnectionprocess = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int tcpconnectionlocalipaddresstype_22404 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int tcpconnectionlocalipaddresstype = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int tcpconnectionlocalipaddress_22405 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int tcpconnectionlocalipaddress = 4;
			/// <summary>IDX: 5 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int tcpconnectionlocalipaddressport_22406 = 5;
			/// <summary>IDX: 5 | Type: read</summary>
			public const int tcpconnectionlocalipaddressport = 5;
			/// <summary>IDX: 6 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int tcpconnectionremoteipaddresstype_22407 = 6;
			/// <summary>IDX: 6 | Type: read</summary>
			public const int tcpconnectionremoteipaddresstype = 6;
			/// <summary>IDX: 7 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int tcpconnectionremoteipaddress_22408 = 7;
			/// <summary>IDX: 7 | Type: read</summary>
			public const int tcpconnectionremoteipaddress = 7;
			/// <summary>IDX: 8 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int tcpconnectionremoteipaddressport_22409 = 8;
			/// <summary>IDX: 8 | Type: read</summary>
			public const int tcpconnectionremoteipaddressport = 8;
		}
	}
	public class Portlist
	{
		/// <summary>PID: 40009</summary>
		public const int tablePid = 40009;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 40010</summary>
		public const int indexColumnPid = 40010;
		public class Pid
		{
			/// <summary>PID: 40010 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int portlistportnumber_40010 = 40010;
			/// <summary>PID: 40010 | Type: read</summary>
			public const int portlistportnumber = 40010;
			/// <summary>PID: 40011 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int portlisttimeoutport_40011 = 40011;
			/// <summary>PID: 40011 | Type: read</summary>
			public const int portlisttimeoutport = 40011;
			/// <summary>PID: 40012 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int portliststatus_40012 = 40012;
			/// <summary>PID: 40012 | Type: read</summary>
			public const int portliststatus = 40012;
			/// <summary>PID: 40013 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int portlistportresult_40013 = 40013;
			/// <summary>PID: 40013 | Type: read</summary>
			public const int portlistportresult = 40013;
			/// <summary>PID: 40014 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int portlistdelay_40014 = 40014;
			/// <summary>PID: 40014 | Type: read</summary>
			public const int portlistdelay = 40014;
			/// <summary>PID: 40015 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int portlistpreviousexecution_40015 = 40015;
			/// <summary>PID: 40015 | Type: read</summary>
			public const int portlistpreviousexecution = 40015;
			/// <summary>PID: 40016 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int portlistcomment_40016 = 40016;
			/// <summary>PID: 40016 | Type: read</summary>
			public const int portlistcomment = 40016;
			/// <summary>PID: 40017 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int portlistpreviousexecutionbackup_40017 = 40017;
			/// <summary>PID: 40017 | Type: read</summary>
			public const int portlistpreviousexecutionbackup = 40017;
			/// <summary>PID: 40018 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int portlistretries_40018 = 40018;
			/// <summary>PID: 40018 | Type: read</summary>
			public const int portlistretries = 40018;
			/// <summary>PID: 40019 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int portlisttimeuntilnextpoll_40019 = 40019;
			/// <summary>PID: 40019 | Type: read</summary>
			public const int portlisttimeuntilnextpoll = 40019;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int portlistportnumber_40010 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int portlistportnumber = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int portlisttimeoutport_40011 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int portlisttimeoutport = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int portliststatus_40012 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int portliststatus = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int portlistportresult_40013 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int portlistportresult = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int portlistdelay_40014 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int portlistdelay = 4;
			/// <summary>IDX: 5 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int portlistpreviousexecution_40015 = 5;
			/// <summary>IDX: 5 | Type: read</summary>
			public const int portlistpreviousexecution = 5;
			/// <summary>IDX: 6 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int portlistcomment_40016 = 6;
			/// <summary>IDX: 6 | Type: read</summary>
			public const int portlistcomment = 6;
			/// <summary>IDX: 7 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int portlistpreviousexecutionbackup_40017 = 7;
			/// <summary>IDX: 7 | Type: read</summary>
			public const int portlistpreviousexecutionbackup = 7;
			/// <summary>IDX: 8 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int portlistretries_40018 = 8;
			/// <summary>IDX: 8 | Type: read</summary>
			public const int portlistretries = 8;
			/// <summary>IDX: 9 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int portlisttimeuntilnextpoll_40019 = 9;
			/// <summary>IDX: 9 | Type: read</summary>
			public const int portlisttimeuntilnextpoll = 9;
		}
	}
	public class Remotedcfinterfacetable
	{
		/// <summary>PID: 49997</summary>
		public const int tablePid = 49997;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 49998</summary>
		public const int indexColumnPid = 49998;
		public class Pid
		{
			/// <summary>PID: 49998 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int remotedcfinterfaceid_49998 = 49998;
			/// <summary>PID: 49998 | Type: read</summary>
			public const int remotedcfinterfaceid = 49998;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int remotedcfinterfaceid_49998 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int remotedcfinterfaceid = 0;
		}
	}
	public class Cpqhetemperaturetable
	{
		/// <summary>PID: 50300</summary>
		public const int tablePid = 50300;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 50311</summary>
		public const int indexColumnPid = 50311;
		public class Pid
		{
			/// <summary>PID: 50311 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int hptemptable_instance_50311 = 50311;
			/// <summary>PID: 50311 | Type: read</summary>
			public const int hptemptable_instance = 50311;
			/// <summary>PID: 50312 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqhetemperaturechassis_50312 = 50312;
			/// <summary>PID: 50312 | Type: read</summary>
			public const int cpqhetemperaturechassis = 50312;
			/// <summary>PID: 50313 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqhetemperatureindex_50313 = 50313;
			/// <summary>PID: 50313 | Type: read</summary>
			public const int cpqhetemperatureindex = 50313;
			/// <summary>PID: 50314 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqhetemperaturelocale_50314 = 50314;
			/// <summary>PID: 50314 | Type: read</summary>
			public const int cpqhetemperaturelocale = 50314;
			/// <summary>PID: 50315 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqhetemperaturecelsius_50315 = 50315;
			/// <summary>PID: 50315 | Type: read</summary>
			public const int cpqhetemperaturecelsius = 50315;
			/// <summary>PID: 50316 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqhetemperaturethreshold_50316 = 50316;
			/// <summary>PID: 50316 | Type: read</summary>
			public const int cpqhetemperaturethreshold = 50316;
			/// <summary>PID: 50317 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqhetemperaturecondition_50317 = 50317;
			/// <summary>PID: 50317 | Type: read</summary>
			public const int cpqhetemperaturecondition = 50317;
			/// <summary>PID: 50318 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqhetemperaturethresholdtype_50318 = 50318;
			/// <summary>PID: 50318 | Type: read</summary>
			public const int cpqhetemperaturethresholdtype = 50318;
			/// <summary>PID: 50319 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqhetemperaturehwlocation_50319 = 50319;
			/// <summary>PID: 50319 | Type: read</summary>
			public const int cpqhetemperaturehwlocation = 50319;
			/// <summary>PID: 50320 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int hptempidx_50320 = 50320;
			/// <summary>PID: 50320 | Type: read</summary>
			public const int hptempidx = 50320;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int hptemptable_instance_50311 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int hptemptable_instance = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqhetemperaturechassis_50312 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int cpqhetemperaturechassis = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqhetemperatureindex_50313 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int cpqhetemperatureindex = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqhetemperaturelocale_50314 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int cpqhetemperaturelocale = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqhetemperaturecelsius_50315 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int cpqhetemperaturecelsius = 4;
			/// <summary>IDX: 5 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqhetemperaturethreshold_50316 = 5;
			/// <summary>IDX: 5 | Type: read</summary>
			public const int cpqhetemperaturethreshold = 5;
			/// <summary>IDX: 6 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqhetemperaturecondition_50317 = 6;
			/// <summary>IDX: 6 | Type: read</summary>
			public const int cpqhetemperaturecondition = 6;
			/// <summary>IDX: 7 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqhetemperaturethresholdtype_50318 = 7;
			/// <summary>IDX: 7 | Type: read</summary>
			public const int cpqhetemperaturethresholdtype = 7;
			/// <summary>IDX: 8 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqhetemperaturehwlocation_50319 = 8;
			/// <summary>IDX: 8 | Type: read</summary>
			public const int cpqhetemperaturehwlocation = 8;
			/// <summary>IDX: 9 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int hptempidx_50320 = 9;
			/// <summary>IDX: 9 | Type: read</summary>
			public const int hptempidx = 9;
		}
	}
	public class Hppowersupplytable
	{
		/// <summary>PID: 50400</summary>
		public const int tablePid = 50400;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 50401</summary>
		public const int indexColumnPid = 50401;
		public class Pid
		{
			/// <summary>PID: 50401 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int hppowersupplyinstance_50401 = 50401;
			/// <summary>PID: 50401 | Type: read</summary>
			public const int hppowersupplyinstance = 50401;
			/// <summary>PID: 50402 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int hppowersupplychassis_50402 = 50402;
			/// <summary>PID: 50402 | Type: read</summary>
			public const int hppowersupplychassis = 50402;
			/// <summary>PID: 50404 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int hppowersupplypresent_50404 = 50404;
			/// <summary>PID: 50404 | Type: read</summary>
			public const int hppowersupplypresent = 50404;
			/// <summary>PID: 50405 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int hppowersupplycondition_50405 = 50405;
			/// <summary>PID: 50405 | Type: read</summary>
			public const int hppowersupplycondition = 50405;
			/// <summary>PID: 50406 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int hppowersupplystatus_50406 = 50406;
			/// <summary>PID: 50406 | Type: read</summary>
			public const int hppowersupplystatus = 50406;
			/// <summary>PID: 50407 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int hppowersupplymainvoltage_50407 = 50407;
			/// <summary>PID: 50407 | Type: read</summary>
			public const int hppowersupplymainvoltage = 50407;
			/// <summary>PID: 50408 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int hppowersupplycapacityused_50408 = 50408;
			/// <summary>PID: 50408 | Type: read</summary>
			public const int hppowersupplycapacityused = 50408;
			/// <summary>PID: 50409 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int hppowersupplycapacitymaximum_50409 = 50409;
			/// <summary>PID: 50409 | Type: read</summary>
			public const int hppowersupplycapacitymaximum = 50409;
			/// <summary>PID: 50410 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int hppowersupplyredundant_50410 = 50410;
			/// <summary>PID: 50410 | Type: read</summary>
			public const int hppowersupplyredundant = 50410;
			/// <summary>PID: 50414 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int hppowersupplyhotplug_50414 = 50414;
			/// <summary>PID: 50414 | Type: read</summary>
			public const int hppowersupplyhotplug = 50414;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int hppowersupplyinstance_50401 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int hppowersupplyinstance = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int hppowersupplychassis_50402 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int hppowersupplychassis = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int hppowersupplypresent_50404 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int hppowersupplypresent = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int hppowersupplycondition_50405 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int hppowersupplycondition = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int hppowersupplystatus_50406 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int hppowersupplystatus = 4;
			/// <summary>IDX: 5 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int hppowersupplymainvoltage_50407 = 5;
			/// <summary>IDX: 5 | Type: read</summary>
			public const int hppowersupplymainvoltage = 5;
			/// <summary>IDX: 6 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int hppowersupplycapacityused_50408 = 6;
			/// <summary>IDX: 6 | Type: read</summary>
			public const int hppowersupplycapacityused = 6;
			/// <summary>IDX: 7 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int hppowersupplycapacitymaximum_50409 = 7;
			/// <summary>IDX: 7 | Type: read</summary>
			public const int hppowersupplycapacitymaximum = 7;
			/// <summary>IDX: 8 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int hppowersupplyredundant_50410 = 8;
			/// <summary>IDX: 8 | Type: read</summary>
			public const int hppowersupplyredundant = 8;
			/// <summary>IDX: 9 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int hppowersupplyhotplug_50414 = 9;
			/// <summary>IDX: 9 | Type: read</summary>
			public const int hppowersupplyhotplug = 9;
		}
	}
	public class Hpfantable
	{
		/// <summary>PID: 50500</summary>
		public const int tablePid = 50500;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 50501</summary>
		public const int indexColumnPid = 50501;
		public class Pid
		{
			/// <summary>PID: 50501 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int hpfantable_instance_50501 = 50501;
			/// <summary>PID: 50501 | Type: read</summary>
			public const int hpfantable_instance = 50501;
			/// <summary>PID: 50502 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int hpfanchassis_50502 = 50502;
			/// <summary>PID: 50502 | Type: read</summary>
			public const int hpfanchassis = 50502;
			/// <summary>PID: 50503 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqheflttolfanindex_50503 = 50503;
			/// <summary>PID: 50503 | Type: read</summary>
			public const int cpqheflttolfanindex = 50503;
			/// <summary>PID: 50504 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqheflttolfanlocale_50504 = 50504;
			/// <summary>PID: 50504 | Type: read</summary>
			public const int cpqheflttolfanlocale = 50504;
			/// <summary>PID: 50505 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqheflttolfanpresent_50505 = 50505;
			/// <summary>PID: 50505 | Type: read</summary>
			public const int cpqheflttolfanpresent = 50505;
			/// <summary>PID: 50506 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqheflttolfantype_50506 = 50506;
			/// <summary>PID: 50506 | Type: read</summary>
			public const int cpqheflttolfantype = 50506;
			/// <summary>PID: 50507 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqheflttolfanspeed_50507 = 50507;
			/// <summary>PID: 50507 | Type: read</summary>
			public const int cpqheflttolfanspeed = 50507;
			/// <summary>PID: 50508 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqheflttolfanredundant_50508 = 50508;
			/// <summary>PID: 50508 | Type: read</summary>
			public const int cpqheflttolfanredundant = 50508;
			/// <summary>PID: 50510 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqheflttolfancondition_50510 = 50510;
			/// <summary>PID: 50510 | Type: read</summary>
			public const int cpqheflttolfancondition = 50510;
			/// <summary>PID: 50511 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqheflttolfanhotplug_50511 = 50511;
			/// <summary>PID: 50511 | Type: read</summary>
			public const int cpqheflttolfanhotplug = 50511;
			/// <summary>PID: 50513 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqheflttolfancurrentspeed_50513 = 50513;
			/// <summary>PID: 50513 | Type: read</summary>
			public const int cpqheflttolfancurrentspeed = 50513;
			/// <summary>PID: 50520 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int hpfanidx_50520 = 50520;
			/// <summary>PID: 50520 | Type: read</summary>
			public const int hpfanidx = 50520;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int hpfantable_instance_50501 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int hpfantable_instance = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int hpfanchassis_50502 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int hpfanchassis = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqheflttolfanindex_50503 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int cpqheflttolfanindex = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqheflttolfanlocale_50504 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int cpqheflttolfanlocale = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqheflttolfanpresent_50505 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int cpqheflttolfanpresent = 4;
			/// <summary>IDX: 5 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqheflttolfantype_50506 = 5;
			/// <summary>IDX: 5 | Type: read</summary>
			public const int cpqheflttolfantype = 5;
			/// <summary>IDX: 6 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqheflttolfanspeed_50507 = 6;
			/// <summary>IDX: 6 | Type: read</summary>
			public const int cpqheflttolfanspeed = 6;
			/// <summary>IDX: 7 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqheflttolfanredundant_50508 = 7;
			/// <summary>IDX: 7 | Type: read</summary>
			public const int cpqheflttolfanredundant = 7;
			/// <summary>IDX: 8 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqheflttolfancondition_50510 = 8;
			/// <summary>IDX: 8 | Type: read</summary>
			public const int cpqheflttolfancondition = 8;
			/// <summary>IDX: 9 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqheflttolfanhotplug_50511 = 9;
			/// <summary>IDX: 9 | Type: read</summary>
			public const int cpqheflttolfanhotplug = 9;
			/// <summary>IDX: 10 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqheflttolfancurrentspeed_50513 = 10;
			/// <summary>IDX: 10 | Type: read</summary>
			public const int cpqheflttolfancurrentspeed = 10;
			/// <summary>IDX: 11 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int hpfanidx_50520 = 11;
			/// <summary>IDX: 11 | Type: read</summary>
			public const int hpfanidx = 11;
		}
	}
	public class Cpqdacntlrtable
	{
		/// <summary>PID: 50600</summary>
		public const int tablePid = 50600;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 50601</summary>
		public const int indexColumnPid = 50601;
		public class Pid
		{
			/// <summary>PID: 50601 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqdacntlrindex_50601 = 50601;
			/// <summary>PID: 50601 | Type: read</summary>
			public const int cpqdacntlrindex = 50601;
			/// <summary>PID: 50602 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqdacntlrmodel_50602 = 50602;
			/// <summary>PID: 50602 | Type: read</summary>
			public const int cpqdacntlrmodel = 50602;
			/// <summary>PID: 50606 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqdacntlrcondition_50606 = 50606;
			/// <summary>PID: 50606 | Type: read</summary>
			public const int cpqdacntlrcondition = 50606;
			/// <summary>PID: 50610 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqdacntlrboardstatus_50610 = 50610;
			/// <summary>PID: 50610 | Type: read</summary>
			public const int cpqdacntlrboardstatus = 50610;
			/// <summary>PID: 50612 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqdacntlrboardcondition_50612 = 50612;
			/// <summary>PID: 50612 | Type: read</summary>
			public const int cpqdacntlrboardcondition = 50612;
			/// <summary>PID: 50616 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqdacntlrredundancytype_50616 = 50616;
			/// <summary>PID: 50616 | Type: read</summary>
			public const int cpqdacntlrredundancytype = 50616;
			/// <summary>PID: 50617 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqdacntlrredundancyerror_50617 = 50617;
			/// <summary>PID: 50617 | Type: read</summary>
			public const int cpqdacntlrredundancyerror = 50617;
			/// <summary>PID: 50618 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqdacntlraccessmodulestatus_50618 = 50618;
			/// <summary>PID: 50618 | Type: read</summary>
			public const int cpqdacntlraccessmodulestatus = 50618;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqdacntlrindex_50601 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int cpqdacntlrindex = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqdacntlrmodel_50602 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int cpqdacntlrmodel = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqdacntlrcondition_50606 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int cpqdacntlrcondition = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqdacntlrboardstatus_50610 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int cpqdacntlrboardstatus = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqdacntlrboardcondition_50612 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int cpqdacntlrboardcondition = 4;
			/// <summary>IDX: 5 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqdacntlrredundancytype_50616 = 5;
			/// <summary>IDX: 5 | Type: read</summary>
			public const int cpqdacntlrredundancytype = 5;
			/// <summary>IDX: 6 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqdacntlrredundancyerror_50617 = 6;
			/// <summary>IDX: 6 | Type: read</summary>
			public const int cpqdacntlrredundancyerror = 6;
			/// <summary>IDX: 7 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqdacntlraccessmodulestatus_50618 = 7;
			/// <summary>IDX: 7 | Type: read</summary>
			public const int cpqdacntlraccessmodulestatus = 7;
		}
	}
	public class Cpqdaacceltable
	{
		/// <summary>PID: 50700</summary>
		public const int tablePid = 50700;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 50701</summary>
		public const int indexColumnPid = 50701;
		public class Pid
		{
			/// <summary>PID: 50701 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqdaaccelcntlrindex_50701 = 50701;
			/// <summary>PID: 50701 | Type: read</summary>
			public const int cpqdaaccelcntlrindex = 50701;
			/// <summary>PID: 50702 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqdaaccelstatus_50702 = 50702;
			/// <summary>PID: 50702 | Type: read</summary>
			public const int cpqdaaccelstatus = 50702;
			/// <summary>PID: 50704 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqdaaccelbaddata_50704 = 50704;
			/// <summary>PID: 50704 | Type: read</summary>
			public const int cpqdaaccelbaddata = 50704;
			/// <summary>PID: 50705 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqdaaccelerrcode_50705 = 50705;
			/// <summary>PID: 50705 | Type: read</summary>
			public const int cpqdaaccelerrcode = 50705;
			/// <summary>PID: 50706 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqdaaccelbattery_50706 = 50706;
			/// <summary>PID: 50706 | Type: read</summary>
			public const int cpqdaaccelbattery = 50706;
			/// <summary>PID: 50709 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqdaaccelcondition_50709 = 50709;
			/// <summary>PID: 50709 | Type: read</summary>
			public const int cpqdaaccelcondition = 50709;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqdaaccelcntlrindex_50701 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int cpqdaaccelcntlrindex = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqdaaccelstatus_50702 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int cpqdaaccelstatus = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqdaaccelbaddata_50704 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int cpqdaaccelbaddata = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqdaaccelerrcode_50705 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int cpqdaaccelerrcode = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqdaaccelbattery_50706 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int cpqdaaccelbattery = 4;
			/// <summary>IDX: 5 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqdaaccelcondition_50709 = 5;
			/// <summary>IDX: 5 | Type: read</summary>
			public const int cpqdaaccelcondition = 5;
		}
	}
	public class Cpqheresmem2moduletable
	{
		/// <summary>PID: 50750</summary>
		public const int tablePid = 50750;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 50751</summary>
		public const int indexColumnPid = 50751;
		public class Pid
		{
			/// <summary>PID: 50751 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqheresmem2module_50751 = 50751;
			/// <summary>PID: 50751 | Type: read</summary>
			public const int cpqheresmem2module = 50751;
			/// <summary>PID: 50752 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqheresmem2boardnum_50752 = 50752;
			/// <summary>PID: 50752 | Type: read</summary>
			public const int cpqheresmem2boardnum = 50752;
			/// <summary>PID: 50753 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqheresmem2cpunum_50753 = 50753;
			/// <summary>PID: 50753 | Type: read</summary>
			public const int cpqheresmem2cpunum = 50753;
			/// <summary>PID: 50754 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqheresmem2modulenum_50754 = 50754;
			/// <summary>PID: 50754 | Type: read</summary>
			public const int cpqheresmem2modulenum = 50754;
			/// <summary>PID: 50755 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqheresmem2modulesize_50755 = 50755;
			/// <summary>PID: 50755 | Type: read</summary>
			public const int cpqheresmem2modulesize = 50755;
			/// <summary>PID: 50756 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqheresmem2moduletype_50756 = 50756;
			/// <summary>PID: 50756 | Type: read</summary>
			public const int cpqheresmem2moduletype = 50756;
			/// <summary>PID: 50757 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqheresmem2modulefrequency_50757 = 50757;
			/// <summary>PID: 50757 | Type: read</summary>
			public const int cpqheresmem2modulefrequency = 50757;
			/// <summary>PID: 50758 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqheresmem2modulestatus_50758 = 50758;
			/// <summary>PID: 50758 | Type: read</summary>
			public const int cpqheresmem2modulestatus = 50758;
			/// <summary>PID: 50759 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqheresmem2modulecondition_50759 = 50759;
			/// <summary>PID: 50759 | Type: read</summary>
			public const int cpqheresmem2modulecondition = 50759;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqheresmem2module_50751 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int cpqheresmem2module = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqheresmem2boardnum_50752 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int cpqheresmem2boardnum = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqheresmem2cpunum_50753 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int cpqheresmem2cpunum = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqheresmem2modulenum_50754 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int cpqheresmem2modulenum = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqheresmem2modulesize_50755 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int cpqheresmem2modulesize = 4;
			/// <summary>IDX: 5 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqheresmem2moduletype_50756 = 5;
			/// <summary>IDX: 5 | Type: read</summary>
			public const int cpqheresmem2moduletype = 5;
			/// <summary>IDX: 6 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqheresmem2modulefrequency_50757 = 6;
			/// <summary>IDX: 6 | Type: read</summary>
			public const int cpqheresmem2modulefrequency = 6;
			/// <summary>IDX: 7 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqheresmem2modulestatus_50758 = 7;
			/// <summary>IDX: 7 | Type: read</summary>
			public const int cpqheresmem2modulestatus = 7;
			/// <summary>IDX: 8 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqheresmem2modulecondition_50759 = 8;
			/// <summary>IDX: 8 | Type: read</summary>
			public const int cpqheresmem2modulecondition = 8;
		}
	}
	public class Cpqdaphydrvtable
	{
		/// <summary>PID: 50800</summary>
		public const int tablePid = 50800;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 50801</summary>
		public const int indexColumnPid = 50801;
		public class Pid
		{
			/// <summary>PID: 50801 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int hpphysicaldrivetable_instance_50801 = 50801;
			/// <summary>PID: 50801 | Type: read</summary>
			public const int hpphysicaldrivetable_instance = 50801;
			/// <summary>PID: 50803 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqdaphydrvmodel_50803 = 50803;
			/// <summary>PID: 50803 | Type: read</summary>
			public const int cpqdaphydrvmodel = 50803;
			/// <summary>PID: 50806 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqdaphydrvstatus_50806 = 50806;
			/// <summary>PID: 50806 | Type: read</summary>
			public const int cpqdaphydrvstatus = 50806;
			/// <summary>PID: 50837 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqdaphydrvcondition_50837 = 50837;
			/// <summary>PID: 50837 | Type: read</summary>
			public const int cpqdaphydrvcondition = 50837;
			/// <summary>PID: 50845 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqdaphydrvsize_50845 = 50845;
			/// <summary>PID: 50845 | Type: read</summary>
			public const int cpqdaphydrvsize = 50845;
			/// <summary>PID: 50855 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqdaphydrvfailurecode_50855 = 50855;
			/// <summary>PID: 50855 | Type: read</summary>
			public const int cpqdaphydrvfailurecode = 50855;
			/// <summary>PID: 50857 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqdaphydrvsmartstatus_50857 = 50857;
			/// <summary>PID: 50857 | Type: read</summary>
			public const int cpqdaphydrvsmartstatus = 50857;
			/// <summary>PID: 50858 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqdaphydrvconfigurationstatus_50858 = 50858;
			/// <summary>PID: 50858 | Type: read</summary>
			public const int cpqdaphydrvconfigurationstatus = 50858;
			/// <summary>PID: 50859 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqdaphydrvrotationalspeed_50859 = 50859;
			/// <summary>PID: 50859 | Type: read</summary>
			public const int cpqdaphydrvrotationalspeed = 50859;
			/// <summary>PID: 50860 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqdaphydrvtype_50860 = 50860;
			/// <summary>PID: 50860 | Type: read</summary>
			public const int cpqdaphydrvtype = 50860;
			/// <summary>PID: 50864 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqdaphydrvlocationstring_50864 = 50864;
			/// <summary>PID: 50864 | Type: read</summary>
			public const int cpqdaphydrvlocationstring = 50864;
			/// <summary>PID: 50865 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqdaphydrvnegotiatedlinkrate_50865 = 50865;
			/// <summary>PID: 50865 | Type: read</summary>
			public const int cpqdaphydrvnegotiatedlinkrate = 50865;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int hpphysicaldrivetable_instance_50801 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int hpphysicaldrivetable_instance = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqdaphydrvmodel_50803 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int cpqdaphydrvmodel = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqdaphydrvstatus_50806 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int cpqdaphydrvstatus = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqdaphydrvcondition_50837 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int cpqdaphydrvcondition = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqdaphydrvsize_50845 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int cpqdaphydrvsize = 4;
			/// <summary>IDX: 5 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqdaphydrvfailurecode_50855 = 5;
			/// <summary>IDX: 5 | Type: read</summary>
			public const int cpqdaphydrvfailurecode = 5;
			/// <summary>IDX: 6 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqdaphydrvsmartstatus_50857 = 6;
			/// <summary>IDX: 6 | Type: read</summary>
			public const int cpqdaphydrvsmartstatus = 6;
			/// <summary>IDX: 7 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqdaphydrvconfigurationstatus_50858 = 7;
			/// <summary>IDX: 7 | Type: read</summary>
			public const int cpqdaphydrvconfigurationstatus = 7;
			/// <summary>IDX: 8 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqdaphydrvrotationalspeed_50859 = 8;
			/// <summary>IDX: 8 | Type: read</summary>
			public const int cpqdaphydrvrotationalspeed = 8;
			/// <summary>IDX: 9 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqdaphydrvtype_50860 = 9;
			/// <summary>IDX: 9 | Type: read</summary>
			public const int cpqdaphydrvtype = 9;
			/// <summary>IDX: 10 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqdaphydrvlocationstring_50864 = 10;
			/// <summary>IDX: 10 | Type: read</summary>
			public const int cpqdaphydrvlocationstring = 10;
			/// <summary>IDX: 11 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqdaphydrvnegotiatedlinkrate_50865 = 11;
			/// <summary>IDX: 11 | Type: read</summary>
			public const int cpqdaphydrvnegotiatedlinkrate = 11;
		}
	}
	public class Cpqdalogdrvtable
	{
		/// <summary>PID: 50900</summary>
		public const int tablePid = 50900;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 50901</summary>
		public const int indexColumnPid = 50901;
		public class Pid
		{
			/// <summary>PID: 50901 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int hplogicaldrivetable_instance_50901 = 50901;
			/// <summary>PID: 50901 | Type: read</summary>
			public const int hplogicaldrivetable_instance = 50901;
			/// <summary>PID: 50902 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqdalogdrvfaulttol_50902 = 50902;
			/// <summary>PID: 50902 | Type: read</summary>
			public const int cpqdalogdrvfaulttol = 50902;
			/// <summary>PID: 50903 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqdalogdrvstatus_50903 = 50903;
			/// <summary>PID: 50903 | Type: read</summary>
			public const int cpqdalogdrvstatus = 50903;
			/// <summary>PID: 50904 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqdalogdrvsize_50904 = 50904;
			/// <summary>PID: 50904 | Type: read</summary>
			public const int cpqdalogdrvsize = 50904;
			/// <summary>PID: 50905 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqdalogdrvcondition_50905 = 50905;
			/// <summary>PID: 50905 | Type: read</summary>
			public const int cpqdalogdrvcondition = 50905;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int hplogicaldrivetable_instance_50901 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int hplogicaldrivetable_instance = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqdalogdrvfaulttol_50902 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int cpqdalogdrvfaulttol = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqdalogdrvstatus_50903 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int cpqdalogdrvstatus = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqdalogdrvsize_50904 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int cpqdalogdrvsize = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqdalogdrvcondition_50905 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int cpqdalogdrvcondition = 4;
		}
	}
	public class Cpqsecputable
	{
		/// <summary>PID: 51000</summary>
		public const int tablePid = 51000;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 51001</summary>
		public const int indexColumnPid = 51001;
		public class Pid
		{
			/// <summary>PID: 51001 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqsecpuunitindex_51001 = 51001;
			/// <summary>PID: 51001 | Type: read</summary>
			public const int cpqsecpuunitindex = 51001;
			/// <summary>PID: 51002 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqsecpuname_51002 = 51002;
			/// <summary>PID: 51002 | Type: read</summary>
			public const int cpqsecpuname = 51002;
			/// <summary>PID: 51003 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqsecpuspeed_51003 = 51003;
			/// <summary>PID: 51003 | Type: read</summary>
			public const int cpqsecpuspeed = 51003;
			/// <summary>PID: 51004 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqsecpustatus_51004 = 51004;
			/// <summary>PID: 51004 | Type: read</summary>
			public const int cpqsecpustatus = 51004;
			/// <summary>PID: 51005 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqsecpucore_51005 = 51005;
			/// <summary>PID: 51005 | Type: read</summary>
			public const int cpqsecpucore = 51005;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqsecpuunitindex_51001 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int cpqsecpuunitindex = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqsecpuname_51002 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int cpqsecpuname = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqsecpuspeed_51003 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int cpqsecpuspeed = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqsecpustatus_51004 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int cpqsecpustatus = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int cpqsecpucore_51005 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int cpqsecpucore = 4;
		}
	}
	public class Powersupplytable
	{
		/// <summary>PID: 52200</summary>
		public const int tablePid = 52200;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 52201</summary>
		public const int indexColumnPid = 52201;
		public class Pid
		{
			/// <summary>PID: 52201 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int dellpowersupply_52201 = 52201;
			/// <summary>PID: 52201 | Type: read</summary>
			public const int dellpowersupply = 52201;
			/// <summary>PID: 52202 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int powersupplylocationname_52202 = 52202;
			/// <summary>PID: 52202 | Type: read</summary>
			public const int powersupplylocationname = 52202;
			/// <summary>PID: 52203 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int powersupplystatus_52203 = 52203;
			/// <summary>PID: 52203 | Type: read</summary>
			public const int powersupplystatus = 52203;
			/// <summary>PID: 52204 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int powersupplytype_52204 = 52204;
			/// <summary>PID: 52204 | Type: read</summary>
			public const int powersupplytype = 52204;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int dellpowersupply_52201 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int dellpowersupply = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int powersupplylocationname_52202 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int powersupplylocationname = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int powersupplystatus_52203 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int powersupplystatus = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int powersupplytype_52204 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int powersupplytype = 3;
		}
	}
	public class Temperatureprobetable
	{
		/// <summary>PID: 52300</summary>
		public const int tablePid = 52300;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 52301</summary>
		public const int indexColumnPid = 52301;
		public class Pid
		{
			/// <summary>PID: 52301 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int instancetemperatureprobetable_52301 = 52301;
			/// <summary>PID: 52301 | Type: read</summary>
			public const int instancetemperatureprobetable = 52301;
			/// <summary>PID: 52302 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int temperatureprobelocationname_52302 = 52302;
			/// <summary>PID: 52302 | Type: read</summary>
			public const int temperatureprobelocationname = 52302;
			/// <summary>PID: 52303 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int temperatureprobestatesettings_52303 = 52303;
			/// <summary>PID: 52303 | Type: read</summary>
			public const int temperatureprobestatesettings = 52303;
			/// <summary>PID: 52304 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int temperatureprobestatus_52304 = 52304;
			/// <summary>PID: 52304 | Type: read</summary>
			public const int temperatureprobestatus = 52304;
			/// <summary>PID: 52305 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int temperatureprobetype_52305 = 52305;
			/// <summary>PID: 52305 | Type: read</summary>
			public const int temperatureprobetype = 52305;
			/// <summary>PID: 52306 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int temperatureprobereading_52306 = 52306;
			/// <summary>PID: 52306 | Type: read</summary>
			public const int temperatureprobereading = 52306;
			/// <summary>PID: 52307 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int temperatureprobediscretereading_52307 = 52307;
			/// <summary>PID: 52307 | Type: read</summary>
			public const int temperatureprobediscretereading = 52307;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int instancetemperatureprobetable_52301 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int instancetemperatureprobetable = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int temperatureprobelocationname_52302 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int temperatureprobelocationname = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int temperatureprobestatesettings_52303 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int temperatureprobestatesettings = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int temperatureprobestatus_52304 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int temperatureprobestatus = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int temperatureprobetype_52305 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int temperatureprobetype = 4;
			/// <summary>IDX: 5 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int temperatureprobereading_52306 = 5;
			/// <summary>IDX: 5 | Type: read</summary>
			public const int temperatureprobereading = 5;
			/// <summary>IDX: 6 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int temperatureprobediscretereading_52307 = 6;
			/// <summary>IDX: 6 | Type: read</summary>
			public const int temperatureprobediscretereading = 6;
		}
	}
	public class Coolingdevicetable
	{
		/// <summary>PID: 52400</summary>
		public const int tablePid = 52400;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 52401</summary>
		public const int indexColumnPid = 52401;
		public class Pid
		{
			/// <summary>PID: 52401 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int instancecoolingdevicetable_52401 = 52401;
			/// <summary>PID: 52401 | Type: read</summary>
			public const int instancecoolingdevicetable = 52401;
			/// <summary>PID: 52402 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int coolingdevicelocationname_52402 = 52402;
			/// <summary>PID: 52402 | Type: read</summary>
			public const int coolingdevicelocationname = 52402;
			/// <summary>PID: 52403 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int coolingdevicestatesettings_52403 = 52403;
			/// <summary>PID: 52403 | Type: read</summary>
			public const int coolingdevicestatesettings = 52403;
			/// <summary>PID: 52404 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int coolingdevicestatus_52404 = 52404;
			/// <summary>PID: 52404 | Type: read</summary>
			public const int coolingdevicestatus = 52404;
			/// <summary>PID: 52405 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int coolingdevicetype_52405 = 52405;
			/// <summary>PID: 52405 | Type: read</summary>
			public const int coolingdevicetype = 52405;
			/// <summary>PID: 52406 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int coolingdevicereading_52406 = 52406;
			/// <summary>PID: 52406 | Type: read</summary>
			public const int coolingdevicereading = 52406;
			/// <summary>PID: 52407 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int coolingdevicediscretereading_52407 = 52407;
			/// <summary>PID: 52407 | Type: read</summary>
			public const int coolingdevicediscretereading = 52407;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int instancecoolingdevicetable_52401 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int instancecoolingdevicetable = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int coolingdevicelocationname_52402 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int coolingdevicelocationname = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int coolingdevicestatesettings_52403 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int coolingdevicestatesettings = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int coolingdevicestatus_52404 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int coolingdevicestatus = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int coolingdevicetype_52405 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int coolingdevicetype = 4;
			/// <summary>IDX: 5 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int coolingdevicereading_52406 = 5;
			/// <summary>IDX: 5 | Type: read</summary>
			public const int coolingdevicereading = 5;
			/// <summary>IDX: 6 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int coolingdevicediscretereading_52407 = 6;
			/// <summary>IDX: 6 | Type: read</summary>
			public const int coolingdevicediscretereading = 6;
		}
	}
	public class Controllertable
	{
		/// <summary>PID: 52800</summary>
		public const int tablePid = 52800;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 52801</summary>
		public const int indexColumnPid = 52801;
		public class Pid
		{
			/// <summary>PID: 52801 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int controllernumber_52801 = 52801;
			/// <summary>PID: 52801 | Type: read</summary>
			public const int controllernumber = 52801;
			/// <summary>PID: 52802 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int controllername_52802 = 52802;
			/// <summary>PID: 52802 | Type: read</summary>
			public const int controllername = 52802;
			/// <summary>PID: 52803 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int controllertype_52803 = 52803;
			/// <summary>PID: 52803 | Type: read</summary>
			public const int controllertype = 52803;
			/// <summary>PID: 52804 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int controllerstate_52804 = 52804;
			/// <summary>PID: 52804 | Type: read</summary>
			public const int controllerstate = 52804;
			/// <summary>PID: 52805 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int controllerfwversion_52805 = 52805;
			/// <summary>PID: 52805 | Type: read</summary>
			public const int controllerfwversion = 52805;
			/// <summary>PID: 52806 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int controllerrollupstatus_52806 = 52806;
			/// <summary>PID: 52806 | Type: read</summary>
			public const int controllerrollupstatus = 52806;
			/// <summary>PID: 52807 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int controllercomponentstatus_52807 = 52807;
			/// <summary>PID: 52807 | Type: read</summary>
			public const int controllercomponentstatus = 52807;
			/// <summary>PID: 52808 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int controllernexusid_52808 = 52808;
			/// <summary>PID: 52808 | Type: read</summary>
			public const int controllernexusid = 52808;
			/// <summary>PID: 52809 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int controllerdriverversion_52809 = 52809;
			/// <summary>PID: 52809 | Type: read</summary>
			public const int controllerdriverversion = 52809;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int controllernumber_52801 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int controllernumber = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int controllername_52802 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int controllername = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int controllertype_52803 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int controllertype = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int controllerstate_52804 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int controllerstate = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int controllerfwversion_52805 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int controllerfwversion = 4;
			/// <summary>IDX: 5 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int controllerrollupstatus_52806 = 5;
			/// <summary>IDX: 5 | Type: read</summary>
			public const int controllerrollupstatus = 5;
			/// <summary>IDX: 6 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int controllercomponentstatus_52807 = 6;
			/// <summary>IDX: 6 | Type: read</summary>
			public const int controllercomponentstatus = 6;
			/// <summary>IDX: 7 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int controllernexusid_52808 = 7;
			/// <summary>IDX: 7 | Type: read</summary>
			public const int controllernexusid = 7;
			/// <summary>IDX: 8 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int controllerdriverversion_52809 = 8;
			/// <summary>IDX: 8 | Type: read</summary>
			public const int controllerdriverversion = 8;
		}
	}
	public class Channeltable
	{
		/// <summary>PID: 52900</summary>
		public const int tablePid = 52900;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 52901</summary>
		public const int indexColumnPid = 52901;
		public class Pid
		{
			/// <summary>PID: 52901 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int channelnumber_52901 = 52901;
			/// <summary>PID: 52901 | Type: read</summary>
			public const int channelnumber = 52901;
			/// <summary>PID: 52902 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int channelname_52902 = 52902;
			/// <summary>PID: 52902 | Type: read</summary>
			public const int channelname = 52902;
			/// <summary>PID: 52903 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int channelstate_52903 = 52903;
			/// <summary>PID: 52903 | Type: read</summary>
			public const int channelstate = 52903;
			/// <summary>PID: 52904 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int channelrollupstatus_52904 = 52904;
			/// <summary>PID: 52904 | Type: read</summary>
			public const int channelrollupstatus = 52904;
			/// <summary>PID: 52905 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int channelcomponentstatus_52905 = 52905;
			/// <summary>PID: 52905 | Type: read</summary>
			public const int channelcomponentstatus = 52905;
			/// <summary>PID: 52906 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int channelnexusid_52906 = 52906;
			/// <summary>PID: 52906 | Type: read</summary>
			public const int channelnexusid = 52906;
			/// <summary>PID: 52907 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int channelbustype_52907 = 52907;
			/// <summary>PID: 52907 | Type: read</summary>
			public const int channelbustype = 52907;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int channelnumber_52901 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int channelnumber = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int channelname_52902 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int channelname = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int channelstate_52903 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int channelstate = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int channelrollupstatus_52904 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int channelrollupstatus = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int channelcomponentstatus_52905 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int channelcomponentstatus = 4;
			/// <summary>IDX: 5 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int channelnexusid_52906 = 5;
			/// <summary>IDX: 5 | Type: read</summary>
			public const int channelnexusid = 5;
			/// <summary>IDX: 6 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int channelbustype_52907 = 6;
			/// <summary>IDX: 6 | Type: read</summary>
			public const int channelbustype = 6;
		}
	}
	public class Enclosuretable
	{
		/// <summary>PID: 53000</summary>
		public const int tablePid = 53000;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 53001</summary>
		public const int indexColumnPid = 53001;
		public class Pid
		{
			/// <summary>PID: 53001 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int enclosurenumber_53001 = 53001;
			/// <summary>PID: 53001 | Type: read</summary>
			public const int enclosurenumber = 53001;
			/// <summary>PID: 53002 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int enclosurename_53002 = 53002;
			/// <summary>PID: 53002 | Type: read</summary>
			public const int enclosurename = 53002;
			/// <summary>PID: 53003 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int enclosurestate_53003 = 53003;
			/// <summary>PID: 53003 | Type: read</summary>
			public const int enclosurestate = 53003;
			/// <summary>PID: 53004 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int enclosuretype_53004 = 53004;
			/// <summary>PID: 53004 | Type: read</summary>
			public const int enclosuretype = 53004;
			/// <summary>PID: 53005 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int enclosurerollupstatus_53005 = 53005;
			/// <summary>PID: 53005 | Type: read</summary>
			public const int enclosurerollupstatus = 53005;
			/// <summary>PID: 53006 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int enclosurecomponentstatus_53006 = 53006;
			/// <summary>PID: 53006 | Type: read</summary>
			public const int enclosurecomponentstatus = 53006;
			/// <summary>PID: 53007 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int enclosurenexusid_53007 = 53007;
			/// <summary>PID: 53007 | Type: read</summary>
			public const int enclosurenexusid = 53007;
			/// <summary>PID: 53008 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int enclosurefirmwareversion_53008 = 53008;
			/// <summary>PID: 53008 | Type: read</summary>
			public const int enclosurefirmwareversion = 53008;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int enclosurenumber_53001 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int enclosurenumber = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int enclosurename_53002 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int enclosurename = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int enclosurestate_53003 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int enclosurestate = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int enclosuretype_53004 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int enclosuretype = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int enclosurerollupstatus_53005 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int enclosurerollupstatus = 4;
			/// <summary>IDX: 5 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int enclosurecomponentstatus_53006 = 5;
			/// <summary>IDX: 5 | Type: read</summary>
			public const int enclosurecomponentstatus = 5;
			/// <summary>IDX: 6 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int enclosurenexusid_53007 = 6;
			/// <summary>IDX: 6 | Type: read</summary>
			public const int enclosurenexusid = 6;
			/// <summary>IDX: 7 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int enclosurefirmwareversion_53008 = 7;
			/// <summary>IDX: 7 | Type: read</summary>
			public const int enclosurefirmwareversion = 7;
		}
	}
	public class Arraydisktable
	{
		/// <summary>PID: 53100</summary>
		public const int tablePid = 53100;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 53101</summary>
		public const int indexColumnPid = 53101;
		public class Pid
		{
			/// <summary>PID: 53101 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int arraydisknumber_53101 = 53101;
			/// <summary>PID: 53101 | Type: read</summary>
			public const int arraydisknumber = 53101;
			/// <summary>PID: 53102 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int arraydiskname_53102 = 53102;
			/// <summary>PID: 53102 | Type: read</summary>
			public const int arraydiskname = 53102;
			/// <summary>PID: 53103 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int arraydiskstate_53103 = 53103;
			/// <summary>PID: 53103 | Type: read</summary>
			public const int arraydiskstate = 53103;
			/// <summary>PID: 53104 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int arraydiskproductid_53104 = 53104;
			/// <summary>PID: 53104 | Type: read</summary>
			public const int arraydiskproductid = 53104;
			/// <summary>PID: 53105 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int arraydiskserialno_53105 = 53105;
			/// <summary>PID: 53105 | Type: read</summary>
			public const int arraydiskserialno = 53105;
			/// <summary>PID: 53106 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int arraydiskrevision_53106 = 53106;
			/// <summary>PID: 53106 | Type: read</summary>
			public const int arraydiskrevision = 53106;
			/// <summary>PID: 53107 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int arraydisklengthinmb_53107 = 53107;
			/// <summary>PID: 53107 | Type: read</summary>
			public const int arraydisklengthinmb = 53107;
			/// <summary>PID: 53108 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int arraydiskusedspaceinmb_53108 = 53108;
			/// <summary>PID: 53108 | Type: read</summary>
			public const int arraydiskusedspaceinmb = 53108;
			/// <summary>PID: 53109 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int arraydiskfreespaceinmb_53109 = 53109;
			/// <summary>PID: 53109 | Type: read</summary>
			public const int arraydiskfreespaceinmb = 53109;
			/// <summary>PID: 53110 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int arraydiskbustype_53110 = 53110;
			/// <summary>PID: 53110 | Type: read</summary>
			public const int arraydiskbustype = 53110;
			/// <summary>PID: 53111 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int arraydisksparestate_53111 = 53111;
			/// <summary>PID: 53111 | Type: read</summary>
			public const int arraydisksparestate = 53111;
			/// <summary>PID: 53112 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int arraydiskrollupstatus_53112 = 53112;
			/// <summary>PID: 53112 | Type: read</summary>
			public const int arraydiskrollupstatus = 53112;
			/// <summary>PID: 53113 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int arraydiskcomponentstatus_53113 = 53113;
			/// <summary>PID: 53113 | Type: read</summary>
			public const int arraydiskcomponentstatus = 53113;
			/// <summary>PID: 53114 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int arraydisknexusid_53114 = 53114;
			/// <summary>PID: 53114 | Type: read</summary>
			public const int arraydisknexusid = 53114;
			/// <summary>PID: 53115 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int arraydisksmartalertindication_53115 = 53115;
			/// <summary>PID: 53115 | Type: read</summary>
			public const int arraydisksmartalertindication = 53115;
			/// <summary>PID: 53116 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int arraydiskmediatype_53116 = 53116;
			/// <summary>PID: 53116 | Type: read</summary>
			public const int arraydiskmediatype = 53116;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int arraydisknumber_53101 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int arraydisknumber = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int arraydiskname_53102 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int arraydiskname = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int arraydiskstate_53103 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int arraydiskstate = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int arraydiskproductid_53104 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int arraydiskproductid = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int arraydiskserialno_53105 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int arraydiskserialno = 4;
			/// <summary>IDX: 5 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int arraydiskrevision_53106 = 5;
			/// <summary>IDX: 5 | Type: read</summary>
			public const int arraydiskrevision = 5;
			/// <summary>IDX: 6 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int arraydisklengthinmb_53107 = 6;
			/// <summary>IDX: 6 | Type: read</summary>
			public const int arraydisklengthinmb = 6;
			/// <summary>IDX: 7 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int arraydiskusedspaceinmb_53108 = 7;
			/// <summary>IDX: 7 | Type: read</summary>
			public const int arraydiskusedspaceinmb = 7;
			/// <summary>IDX: 8 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int arraydiskfreespaceinmb_53109 = 8;
			/// <summary>IDX: 8 | Type: read</summary>
			public const int arraydiskfreespaceinmb = 8;
			/// <summary>IDX: 9 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int arraydiskbustype_53110 = 9;
			/// <summary>IDX: 9 | Type: read</summary>
			public const int arraydiskbustype = 9;
			/// <summary>IDX: 10 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int arraydisksparestate_53111 = 10;
			/// <summary>IDX: 10 | Type: read</summary>
			public const int arraydisksparestate = 10;
			/// <summary>IDX: 11 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int arraydiskrollupstatus_53112 = 11;
			/// <summary>IDX: 11 | Type: read</summary>
			public const int arraydiskrollupstatus = 11;
			/// <summary>IDX: 12 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int arraydiskcomponentstatus_53113 = 12;
			/// <summary>IDX: 12 | Type: read</summary>
			public const int arraydiskcomponentstatus = 12;
			/// <summary>IDX: 13 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int arraydisknexusid_53114 = 13;
			/// <summary>IDX: 13 | Type: read</summary>
			public const int arraydisknexusid = 13;
			/// <summary>IDX: 14 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int arraydisksmartalertindication_53115 = 14;
			/// <summary>IDX: 14 | Type: read</summary>
			public const int arraydisksmartalertindication = 14;
			/// <summary>IDX: 15 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int arraydiskmediatype_53116 = 15;
			/// <summary>IDX: 15 | Type: read</summary>
			public const int arraydiskmediatype = 15;
		}
	}
	public class Virtualdisktable
	{
		/// <summary>PID: 53200</summary>
		public const int tablePid = 53200;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 53201</summary>
		public const int indexColumnPid = 53201;
		public class Pid
		{
			/// <summary>PID: 53201 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int virtualdisknumber_53201 = 53201;
			/// <summary>PID: 53201 | Type: read</summary>
			public const int virtualdisknumber = 53201;
			/// <summary>PID: 53202 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int virtualdiskname_53202 = 53202;
			/// <summary>PID: 53202 | Type: read</summary>
			public const int virtualdiskname = 53202;
			/// <summary>PID: 53203 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int virtualdiskstate_53203 = 53203;
			/// <summary>PID: 53203 | Type: read</summary>
			public const int virtualdiskstate = 53203;
			/// <summary>PID: 53204 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int virtualdisklengthinmb_53204 = 53204;
			/// <summary>PID: 53204 | Type: read</summary>
			public const int virtualdisklengthinmb = 53204;
			/// <summary>PID: 53205 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int virtualdisklayout_53205 = 53205;
			/// <summary>PID: 53205 | Type: read</summary>
			public const int virtualdisklayout = 53205;
			/// <summary>PID: 53206 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int virtualdiskrollupstatus_53206 = 53206;
			/// <summary>PID: 53206 | Type: read</summary>
			public const int virtualdiskrollupstatus = 53206;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int virtualdisknumber_53201 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int virtualdisknumber = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int virtualdiskname_53202 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int virtualdiskname = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int virtualdiskstate_53203 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int virtualdiskstate = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int virtualdisklengthinmb_53204 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int virtualdisklengthinmb = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int virtualdisklayout_53205 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int virtualdisklayout = 4;
			/// <summary>IDX: 5 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int virtualdiskrollupstatus_53206 = 5;
			/// <summary>IDX: 5 | Type: read</summary>
			public const int virtualdiskrollupstatus = 5;
		}
	}
	public class Processordevicetable
	{
		/// <summary>PID: 53300</summary>
		public const int tablePid = 53300;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 53301</summary>
		public const int indexColumnPid = 53301;
		public class Pid
		{
			/// <summary>PID: 53301 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int dellcpu_53301 = 53301;
			/// <summary>PID: 53301 | Type: read</summary>
			public const int dellcpu = 53301;
			/// <summary>PID: 53302 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int processordevicestatus_53302 = 53302;
			/// <summary>PID: 53302 | Type: read</summary>
			public const int processordevicestatus = 53302;
			/// <summary>PID: 53303 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int processordevicetype_53303 = 53303;
			/// <summary>PID: 53303 | Type: read</summary>
			public const int processordevicetype = 53303;
			/// <summary>PID: 53304 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int processordevicemanufacturername_53304 = 53304;
			/// <summary>PID: 53304 | Type: read</summary>
			public const int processordevicemanufacturername = 53304;
			/// <summary>PID: 53305 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int processordevicefamily_53305 = 53305;
			/// <summary>PID: 53305 | Type: read</summary>
			public const int processordevicefamily = 53305;
			/// <summary>PID: 53306 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int processordevicemaximumspeed_53306 = 53306;
			/// <summary>PID: 53306 | Type: read</summary>
			public const int processordevicemaximumspeed = 53306;
			/// <summary>PID: 53307 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int processordevicecurrentspeed_53307 = 53307;
			/// <summary>PID: 53307 | Type: read</summary>
			public const int processordevicecurrentspeed = 53307;
			/// <summary>PID: 53308 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int processordevicecorecount_53308 = 53308;
			/// <summary>PID: 53308 | Type: read</summary>
			public const int processordevicecorecount = 53308;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int dellcpu_53301 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int dellcpu = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int processordevicestatus_53302 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int processordevicestatus = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int processordevicetype_53303 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int processordevicetype = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int processordevicemanufacturername_53304 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int processordevicemanufacturername = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int processordevicefamily_53305 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int processordevicefamily = 4;
			/// <summary>IDX: 5 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int processordevicemaximumspeed_53306 = 5;
			/// <summary>IDX: 5 | Type: read</summary>
			public const int processordevicemaximumspeed = 5;
			/// <summary>IDX: 6 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int processordevicecurrentspeed_53307 = 6;
			/// <summary>IDX: 6 | Type: read</summary>
			public const int processordevicecurrentspeed = 6;
			/// <summary>IDX: 7 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int processordevicecorecount_53308 = 7;
			/// <summary>IDX: 7 | Type: read</summary>
			public const int processordevicecorecount = 7;
		}
	}
	public class Memorydevicetable
	{
		/// <summary>PID: 53400</summary>
		public const int tablePid = 53400;
		/// <summary>IDX: 0</summary>
		public const int indexColumn = 0;
		/// <summary>PID: 53490</summary>
		public const int indexColumnPid = 53490;
		public class Pid
		{
			/// <summary>PID: 53490 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int dellmemoryindex_53490 = 53490;
			/// <summary>PID: 53490 | Type: read</summary>
			public const int dellmemoryindex = 53490;
			/// <summary>PID: 53401 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int memorydevicestatesettings_53401 = 53401;
			/// <summary>PID: 53401 | Type: read</summary>
			public const int memorydevicestatesettings = 53401;
			/// <summary>PID: 53402 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int memorydevicestatus_53402 = 53402;
			/// <summary>PID: 53402 | Type: read</summary>
			public const int memorydevicestatus = 53402;
			/// <summary>PID: 53403 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int memorydevicetype_53403 = 53403;
			/// <summary>PID: 53403 | Type: read</summary>
			public const int memorydevicetype = 53403;
			/// <summary>PID: 53404 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int memorydevicelocationname_53404 = 53404;
			/// <summary>PID: 53404 | Type: read</summary>
			public const int memorydevicelocationname = 53404;
			/// <summary>PID: 53405 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int memorydevicesize_53405 = 53405;
			/// <summary>PID: 53405 | Type: read</summary>
			public const int memorydevicesize = 53405;
			/// <summary>PID: 53406 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int memorydevicespeed_53406 = 53406;
			/// <summary>PID: 53406 | Type: read</summary>
			public const int memorydevicespeed = 53406;
			/// <summary>PID: 53407 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int memorydevicepartnumbername_53407 = 53407;
			/// <summary>PID: 53407 | Type: read</summary>
			public const int memorydevicepartnumbername = 53407;
			public class Write
			{
			}
		}
		public class Idx
		{
			/// <summary>IDX: 0 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int dellmemoryindex_53490 = 0;
			/// <summary>IDX: 0 | Type: read</summary>
			public const int dellmemoryindex = 0;
			/// <summary>IDX: 1 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int memorydevicestatesettings_53401 = 1;
			/// <summary>IDX: 1 | Type: read</summary>
			public const int memorydevicestatesettings = 1;
			/// <summary>IDX: 2 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int memorydevicestatus_53402 = 2;
			/// <summary>IDX: 2 | Type: read</summary>
			public const int memorydevicestatus = 2;
			/// <summary>IDX: 3 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int memorydevicetype_53403 = 3;
			/// <summary>IDX: 3 | Type: read</summary>
			public const int memorydevicetype = 3;
			/// <summary>IDX: 4 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int memorydevicelocationname_53404 = 4;
			/// <summary>IDX: 4 | Type: read</summary>
			public const int memorydevicelocationname = 4;
			/// <summary>IDX: 5 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int memorydevicesize_53405 = 5;
			/// <summary>IDX: 5 | Type: read</summary>
			public const int memorydevicesize = 5;
			/// <summary>IDX: 6 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int memorydevicespeed_53406 = 6;
			/// <summary>IDX: 6 | Type: read</summary>
			public const int memorydevicespeed = 6;
			/// <summary>IDX: 7 | Type: read</summary>
			[EditorBrowsable(EditorBrowsableState.Never)]
			public const int memorydevicepartnumbername_53407 = 7;
			/// <summary>IDX: 7 | Type: read</summary>
			public const int memorydevicepartnumbername = 7;
		}
	}
}
public class WriteParameters
{
	/// <summary>PID: 6  | Type: write | DISCREETS: Clear Mount Availability = 1</summary>
	public System.Object Clearmountavailability {get { return Protocol.GetParameter(6); }set { Protocol.SetParameter(6, value); }}
	/// <summary>PID: 8  | Type: write | DISCREETS: Clear Counter Table = 1</summary>
	public System.Object Clearprocesscounter {get { return Protocol.GetParameter(8); }set { Protocol.SetParameter(8, value); }}
	/// <summary>PID: 9  | Type: write | DISCREETS: Clear Table = 1</summary>
	public System.Object Clearmountstoragetable {get { return Protocol.GetParameter(9); }set { Protocol.SetParameter(9, value); }}
	/// <summary>PID: 29  | Type: write</summary>
	public System.Object Clean_tm_trigger {get { return Protocol.GetParameter(29); }set { Protocol.SetParameter(29, value); }}
	/// <summary>PID: 31  | Type: write | DISCREETS: Disabled = 0, Enabled = 1</summary>
	public System.Object Taskmanagerautoclear {get { return Protocol.GetParameter(31); }set { Protocol.SetParameter(31, value); }}
	/// <summary>PID: 41  | Type: write | DISCREETS: Disabled = 0, Enabled = 1, Auto = 2</summary>
	public System.Object Memorycalculationchange {get { return Protocol.GetParameter(41); }set { Protocol.SetParameter(41, value); }}
	/// <summary>PID: 49  | Type: write</summary>
	public System.Object Check_processor_nbr_trigger {get { return Protocol.GetParameter(49); }set { Protocol.SetParameter(49, value); }}
	/// <summary>PID: 58  | Type: write | DISCREETS: Interface Monitor Config... = Interface Monitor Config</summary>
	public System.Object Interfacemonitorconfig {get { return Protocol.GetParameter(58); }set { Protocol.SetParameter(58, value); }}
	/// <summary>PID: 59  | Type: write | DISCREETS: Refresh = 1, Enable Operational Up = 2, Disable All = 3, Enable All = 4</summary>
	public System.Object Changeallinterfacemonitoringstates {get { return Protocol.GetParameter(59); }set { Protocol.SetParameter(59, value); }}
	/// <summary>PID: 79  | Type: write | DISCREETS: Add Process = add, Remove Process = remove</summary>
	public System.Object Processcounter_contextmenu {get { return Protocol.GetParameter(79); }set { Protocol.SetParameter(79, value); }}
	/// <summary>PID: 122  | Type: write</summary>
	public System.Object Normalizetaskmanagerprocesscpu {get { return Protocol.GetParameter(122); }set { Protocol.SetParameter(122, value); }}
	/// <summary>PID: 123  | Type: write</summary>
	public System.Object Normalizetaskmanagerprocessmemusage {get { return Protocol.GetParameter(123); }set { Protocol.SetParameter(123, value); }}
	/// <summary>PID: 217  | Type: write | DISCREETS: Start = Start, Stop = Stop</summary>
	public System.Object Updatejobstatus {get { return Protocol.GetParameter(217); }set { Protocol.SetParameter(217, value); }}
	/// <summary>PID: 235  | Type: write</summary>
	public System.Object Inputswitcheractiveinput {get { return Protocol.GetParameter(235); }set { Protocol.SetParameter(235, value); }}
	/// <summary>PID: 269  | Type: write</summary>
	public System.Object Processcounterdisplaykey {get { return Protocol.GetParameter(269); }set { Protocol.SetParameter(269, value); }}
	/// <summary>PID: 273  | Type: write</summary>
	public System.Object Processcounterrunpath {get { return Protocol.GetParameter(273); }set { Protocol.SetParameter(273, value); }}
	/// <summary>PID: 373  | Type: write | DISCREETS: Enabled = 1, Disabled = 2</summary>
	public System.Object Taskmanagerpolling {get { return Protocol.GetParameter(373); }set { Protocol.SetParameter(373, value); }}
	/// <summary>PID: 451  | Type: write | DISCREETS: Enabled = 1, Disabled = 0</summary>
	public System.Object Pollingstatestoragetable {get { return Protocol.GetParameter(451); }set { Protocol.SetParameter(451, value); }}
	/// <summary>PID: 499  | Type: write | DISCREETS: Storage Availability... = Storage Availability</summary>
	public System.Object Mountstoragepage {get { return Protocol.GetParameter(499); }set { Protocol.SetParameter(499, value); }}
	/// <summary>PID: 504  | Type: write | DISCREETS: Add Storage = add, Remove Process = remove</summary>
	public System.Object Storageavailability_contextmenu {get { return Protocol.GetParameter(504); }set { Protocol.SetParameter(504, value); }}
	/// <summary>PID: 555  | Type: write</summary>
	public System.Object Descriptionmountstorage {get { return Protocol.GetParameter(555); }set { Protocol.SetParameter(555, value); }}
	/// <summary>PID: 655  | Type: write</summary>
	public System.Object Interfacesinterfacebandwidth {get { return Protocol.GetParameter(655); }set { Protocol.SetParameter(655, value); }}
	/// <summary>PID: 767  | Type: write</summary>
	public System.Object Mystatussettableinteger {get { return Protocol.GetParameter(767); }set { Protocol.SetParameter(767, value); }}
	/// <summary>PID: 828  | Type: write | DISCREETS: Enable = 1, Disable = 2</summary>
	public System.Object Monitorinterfacetableconfig {get { return Protocol.GetParameter(828); }set { Protocol.SetParameter(828, value); }}
	/// <summary>PID: 999  | Type: write | DISCREETS: Memory... = More Memory, Disk IO... = Disk IO</summary>
	public System.Object Morememorybutton {get { return Protocol.GetParameter(999); }set { Protocol.SetParameter(999, value); }}
	/// <summary>PID: 1019  | Type: write | DISCREETS: More... = Linux Monitored Processes, Process Validation... = Process Validation</summary>
	public System.Object Moreprocessbutton {get { return Protocol.GetParameter(1019); }set { Protocol.SetParameter(1019, value); }}
	/// <summary>PID: 1049  | Type: write | DISCREETS: Add Process = add, Remove Process = remove</summary>
	public System.Object Mountavailability_contextmenu {get { return Protocol.GetParameter(1049); }set { Protocol.SetParameter(1049, value); }}
	/// <summary>PID: 1081  | Type: write | DISCREETS: Enabled = 1, Disabled = 0</summary>
	public System.Object Pollingstatelinuxmonitoreddisks {get { return Protocol.GetParameter(1081); }set { Protocol.SetParameter(1081, value); }}
	/// <summary>PID: 1098  | Type: write | DISCREETS: Processor... = Processor, Raw CPU... = Raw CPU, Ext Commands... = Ext Commands</summary>
	public System.Object Generalbutton2 {get { return Protocol.GetParameter(1098); }set { Protocol.SetParameter(1098, value); }}
	/// <summary>PID: 1099  | Type: write | DISCREETS: Load... = Load</summary>
	public System.Object Generalbutton {get { return Protocol.GetParameter(1099); }set { Protocol.SetParameter(1099, value); }}
	/// <summary>PID: 1200  | Type: write | DISCREETS: Clear Task Manager = Clear Task Manager, Normalize Alarms = Normalize Alarms</summary>
	public System.Object Clearnormalizetm {get { return Protocol.GetParameter(1200); }set { Protocol.SetParameter(1200, value); }}
	/// <summary>PID: 1201  | Type: write | DISCREETS: Nominal Values... = Normalize Task Manager, Process Counters... = Process Counters</summary>
	public System.Object Normalizetm {get { return Protocol.GetParameter(1201); }set { Protocol.SetParameter(1201, value); }}
	/// <summary>PID: 1202  | Type: write | DISCREETS: Mount Availability... = Mount Availability</summary>
	public System.Object Morediskspagebuttons {get { return Protocol.GetParameter(1202); }set { Protocol.SetParameter(1202, value); }}
	/// <summary>PID: 1500  | Type: write | DISCREETS: Service Table... = Service Table, LVS Real Table... = LVS Real Table</summary>
	public System.Object Pgblinuxvirtualserver {get { return Protocol.GetParameter(1500); }set { Protocol.SetParameter(1500, value); }}
	/// <summary>PID: 1502  | Type: write | DISCREETS: Disabled = 0, Enabled = 1</summary>
	public System.Object Polllvsparameters {get { return Protocol.GetParameter(1502); }set { Protocol.SetParameter(1502, value); }}
	/// <summary>PID: 2012  | Type: write</summary>
	public System.Object Pathofthefiles {get { return Protocol.GetParameter(2012); }set { Protocol.SetParameter(2012, value); }}
	/// <summary>PID: 2014  | Type: write</summary>
	public System.Object Csvfilename {get { return Protocol.GetParameter(2014); }set { Protocol.SetParameter(2014, value); }}
	/// <summary>PID: 2015  | Type: write | DISCREETS: Import CSV = Import CSV, Export CSV = Export CSV</summary>
	public System.Object Csvbutton {get { return Protocol.GetParameter(2015); }set { Protocol.SetParameter(2015, value); }}
	/// <summary>PID: 8104  | Type: write</summary>
	public System.Object Externaldataoverviewfunctionality {get { return Protocol.GetParameter(8104); }set { Protocol.SetParameter(8104, value); }}
	/// <summary>PID: 8300  | Type: write</summary>
	public System.Object Addexternaldataentry {get { return Protocol.GetParameter(8300); }set { Protocol.SetParameter(8300, value); }}
	/// <summary>PID: 8301  | Type: write</summary>
	public System.Object Removeexternaldataentry {get { return Protocol.GetParameter(8301); }set { Protocol.SetParameter(8301, value); }}
	/// <summary>PID: 8500  | Type: write</summary>
	public System.Object Processtovalidate {get { return Protocol.GetParameter(8500); }set { Protocol.SetParameter(8500, value); }}
	/// <summary>PID: 8501  | Type: write | DISCREETS: Update List... = Update List</summary>
	public System.Object Validationbutton {get { return Protocol.GetParameter(8501); }set { Protocol.SetParameter(8501, value); }}
	/// <summary>PID: 8504  | Type: write</summary>
	public System.Object Unlistedprocess {get { return Protocol.GetParameter(8504); }set { Protocol.SetParameter(8504, value); }}
	/// <summary>PID: 8613  | Type: write | DISCREETS: Monitored = Monitored, Not Monitored = Not Monitored, Delete = Delete</summary>
	public System.Object Processvalidationprocessmonitoring {get { return Protocol.GetParameter(8613); }set { Protocol.SetParameter(8613, value); }}
	/// <summary>PID: 10016  | Type: write</summary>
	public System.Object Exterrfix {get { return Protocol.GetParameter(10016); }set { Protocol.SetParameter(10016, value); }}
	/// <summary>PID: 10026  | Type: write</summary>
	public System.Object Exterrfixoid {get { return Protocol.GetParameter(10026); }set { Protocol.SetParameter(10026, value); }}
	/// <summary>PID: 22299  | Type: write | DISCREETS: TCP Connection... = TCP Connection</summary>
	public System.Object Pagebuttontcp {get { return Protocol.GetParameter(22299); }set { Protocol.SetParameter(22299, value); }}
	/// <summary>PID: 22502  | Type: write | DISCREETS: Closed = 1, Listen = 2, Sync Sent = 3, Sync Received = 4, Established = 5, Fin Wait 1 = 6, Fin Wait 2 = 7, Close Wait = 8, Last ACK = 9, Closing = 10, Time Wait = 11, Delete TCB = 12</summary>
	public System.Object Tcpconnectionstate {get { return Protocol.GetParameter(22502); }set { Protocol.SetParameter(22502, value); }}
	/// <summary>PID: 40003  | Type: write</summary>
	public System.Object Triggerupdateaddress {get { return Protocol.GetParameter(40003); }set { Protocol.SetParameter(40003, value); }}
	/// <summary>PID: 40004  | Type: write</summary>
	public System.Object Triggerrowdisabled {get { return Protocol.GetParameter(40004); }set { Protocol.SetParameter(40004, value); }}
	/// <summary>PID: 40005  | Type: write</summary>
	public System.Object Triggerrowundefined {get { return Protocol.GetParameter(40005); }set { Protocol.SetParameter(40005, value); }}
	/// <summary>PID: 40021  | Type: write</summary>
	public System.Object Portlisttimeoutport {get { return Protocol.GetParameter(40021); }set { Protocol.SetParameter(40021, value); }}
	/// <summary>PID: 40022  | Type: write | DISCREETS: Disabled = 0, Enabled = 1, Remove = 2</summary>
	public System.Object Portliststatus {get { return Protocol.GetParameter(40022); }set { Protocol.SetParameter(40022, value); }}
	/// <summary>PID: 40028  | Type: write</summary>
	public System.Object Portlistretries {get { return Protocol.GetParameter(40028); }set { Protocol.SetParameter(40028, value); }}
	/// <summary>PID: 40032  | Type: write</summary>
	public System.Object Pollingperiod {get { return Protocol.GetParameter(40032); }set { Protocol.SetParameter(40032, value); }}
	/// <summary>PID: 40034  | Type: write | DISCREETS: Disabled = 0, Enabled = 1</summary>
	public System.Object Pollingexecution {get { return Protocol.GetParameter(40034); }set { Protocol.SetParameter(40034, value); }}
	/// <summary>PID: 40043  | Type: write</summary>
	public System.Object Addport {get { return Protocol.GetParameter(40043); }set { Protocol.SetParameter(40043, value); }}
	/// <summary>PID: 40045  | Type: write</summary>
	public System.Object Removeport {get { return Protocol.GetParameter(40045); }set { Protocol.SetParameter(40045, value); }}
	/// <summary>PID: 50001  | Type: write | DISCREETS: Disabled = 0, Enabled = 1</summary>
	public System.Object Pingactive {get { return Protocol.GetParameter(50001); }set { Protocol.SetParameter(50001, value); }}
	/// <summary>PID: 50003  | Type: write</summary>
	public System.Object Pingcycle {get { return Protocol.GetParameter(50003); }set { Protocol.SetParameter(50003, value); }}
	/// <summary>PID: 50005  | Type: write</summary>
	public System.Object Pingtimeout {get { return Protocol.GetParameter(50005); }set { Protocol.SetParameter(50005, value); }}
	/// <summary>PID: 50007  | Type: write</summary>
	public System.Object Pingnumber {get { return Protocol.GetParameter(50007); }set { Protocol.SetParameter(50007, value); }}
	/// <summary>PID: 50048  | Type: write</summary>
	public System.Object Pingrequestshistory {get { return Protocol.GetParameter(50048); }set { Protocol.SetParameter(50048, value); }}
	/// <summary>PID: 50200  | Type: write | DISCREETS: Disabled = 0, Enabled = 1</summary>
	public System.Object Pollhpparameters {get { return Protocol.GetParameter(50200); }set { Protocol.SetParameter(50200, value); }}
	/// <summary>PID: 50250  | Type: write</summary>
	public System.Object Hppollingip {get { return Protocol.GetParameter(50250); }set { Protocol.SetParameter(50250, value); }}
	/// <summary>PID: 50260  | Type: write | DISCREETS: Disabled = 0, Enabled = 1</summary>
	public System.Object Hppollingipstatus {get { return Protocol.GetParameter(50260); }set { Protocol.SetParameter(50260, value); }}
	/// <summary>PID: 50949  | Type: write | DISCREETS: Temperature... = HP Temperature Table, Power Supply... = HP Power Supply Table, Fan... = HP Fan Table</summary>
	public System.Object Pagebuttonhp {get { return Protocol.GetParameter(50949); }set { Protocol.SetParameter(50949, value); }}
	/// <summary>PID: 50950  | Type: write | DISCREETS: Disk... = HP Disk, CPU... = HP CPU, Memory... = HP Memory</summary>
	public System.Object Pagebuttonhp2 {get { return Protocol.GetParameter(50950); }set { Protocol.SetParameter(50950, value); }}
	/// <summary>PID: 51200  | Type: write | DISCREETS: Disabled = 0, Enabled = 1</summary>
	public System.Object Polldellparameters {get { return Protocol.GetParameter(51200); }set { Protocol.SetParameter(51200, value); }}
	/// <summary>PID: 51900  | Type: write | DISCREETS: Temperature... = Dell Temperature, Power Supply... = Dell Power Supply, Fan... = Dell Fan</summary>
	public System.Object Dellpagebutton {get { return Protocol.GetParameter(51900); }set { Protocol.SetParameter(51900, value); }}
	/// <summary>PID: 51901  | Type: write | DISCREETS: Disk... = Dell Disk, CPU... = Dell CPU, Memory... = Dell Memory</summary>
	public System.Object Dellpagebutton2 {get { return Protocol.GetParameter(51901); }set { Protocol.SetParameter(51901, value); }}
	/// <summary>PID: 53421  | Type: write | DISCREETS: Unknown = 1, Enabled = 2, Not Ready = 4, Enabled and Not Ready = 6</summary>
	public System.Object Memorydevicestatesettings {get { return Protocol.GetParameter(53421); }set { Protocol.SetParameter(53421, value); }}
	/// <summary>PID: 53441  | Type: write</summary>
	public System.Object Memorydevicestatesettingssnmpset {get { return Protocol.GetParameter(53441); }set { Protocol.SetParameter(53441, value); }}
	public SLProtocolExt Protocol;
	public WriteParameters(SLProtocolExt protocol)
	{
		Protocol = protocol;
	}
}
public interface SLProtocolExt : SLProtocol
{
	/// <summary>PID: 50</summary>
	HrdevicetypeQActionTable hrdevicetype { get; set; }
	/// <summary>PID: 70</summary>
	ProcesscounterQActionTable processcounter { get; set; }
	/// <summary>PID: 80</summary>
	TaskmanagerQActionTable taskmanager { get; set; }
	/// <summary>PID: 90</summary>
	HrswrunperftableQActionTable hrswrunperftable { get; set; }
	/// <summary>PID: 110</summary>
	NormalizetaskmanagerQActionTable normalizetaskmanager { get; set; }
	/// <summary>PID: 130</summary>
	SoftwareinfoQActionTable softwareinfo { get; set; }
	/// <summary>PID: 140</summary>
	HrfstableQActionTable hrfstable { get; set; }
	/// <summary>PID: 150</summary>
	IpaddrtableQActionTable ipaddrtable { get; set; }
	/// <summary>PID: 160</summary>
	IproutetableQActionTable iproutetable { get; set; }
	/// <summary>PID: 210</summary>
	JobdatatableQActionTable jobdatatable { get; set; }
	/// <summary>PID: 230</summary>
	InputswitcherQActionTable inputswitcher { get; set; }
	/// <summary>PID: 250</summary>
	RftuningQActionTable rftuning { get; set; }
	/// <summary>PID: 280</summary>
	ChannalListQActionTable channalList { get; set; }
	/// <summary>PID: 290</summary>
	JobstatisticsQActionTable jobstatistics { get; set; }
	/// <summary>PID: 350</summary>
	StoragestoragesizeQActionTable storagestoragesize { get; set; }
	/// <summary>PID: 355</summary>
	Storagestoragesize2QActionTable storagestoragesize2 { get; set; }
	/// <summary>PID: 360</summary>
	StorageinstanceindexQActionTable storageinstanceindex { get; set; }
	/// <summary>PID: 400</summary>
	StoragetableQActionTable storagetable { get; set; }
	/// <summary>PID: 500</summary>
	StorageavailabilityQActionTable storageavailability { get; set; }
	/// <summary>PID: 600</summary>
	InterfacestableQActionTable interfacestable { get; set; }
	/// <summary>PID: 800</summary>
	InterfacetableconfigQActionTable interfacetableconfig { get; set; }
	/// <summary>PID: 900</summary>
	IfxtableQActionTable ifxtable { get; set; }
	/// <summary>PID: 1020</summary>
	LinuxmonitoredprocesseslistQActionTable linuxmonitoredprocesseslist { get; set; }
	/// <summary>PID: 1040</summary>
	MountavailabilityQActionTable mountavailability { get; set; }
	/// <summary>PID: 1050</summary>
	LinuxmonitoreddisksQActionTable linuxmonitoreddisks { get; set; }
	/// <summary>PID: 1100</summary>
	LoadaverageinformationQActionTable loadaverageinformation { get; set; }
	/// <summary>PID: 1220</summary>
	ProcessortableQActionTable processortable { get; set; }
	/// <summary>PID: 1600</summary>
	LvsservicetableQActionTable lvsservicetable { get; set; }
	/// <summary>PID: 1700</summary>
	LvsrealtableQActionTable lvsrealtable { get; set; }
	/// <summary>PID: 8000</summary>
	ExternaldataoverviewQActionTable externaldataoverview { get; set; }
	/// <summary>PID: 8600</summary>
	ProcessvalidationtableQActionTable processvalidationtable { get; set; }
	/// <summary>PID: 10000</summary>
	ExttableQActionTable exttable { get; set; }
	/// <summary>PID: 10100</summary>
	DiskiotableQActionTable diskiotable { get; set; }
	/// <summary>PID: 22000</summary>
	IpsystemstatstableQActionTable ipsystemstatstable { get; set; }
	/// <summary>PID: 22400</summary>
	TcpconnectiontableQActionTable tcpconnectiontable { get; set; }
	/// <summary>PID: 40009</summary>
	PortlistQActionTable portlist { get; set; }
	/// <summary>PID: 49997</summary>
	RemotedcfinterfacetableQActionTable remotedcfinterfacetable { get; set; }
	/// <summary>PID: 50300</summary>
	CpqhetemperaturetableQActionTable cpqhetemperaturetable { get; set; }
	/// <summary>PID: 50400</summary>
	HppowersupplytableQActionTable hppowersupplytable { get; set; }
	/// <summary>PID: 50500</summary>
	HpfantableQActionTable hpfantable { get; set; }
	/// <summary>PID: 50600</summary>
	CpqdacntlrtableQActionTable cpqdacntlrtable { get; set; }
	/// <summary>PID: 50700</summary>
	CpqdaacceltableQActionTable cpqdaacceltable { get; set; }
	/// <summary>PID: 50750</summary>
	Cpqheresmem2moduletableQActionTable cpqheresmem2moduletable { get; set; }
	/// <summary>PID: 50800</summary>
	CpqdaphydrvtableQActionTable cpqdaphydrvtable { get; set; }
	/// <summary>PID: 50900</summary>
	CpqdalogdrvtableQActionTable cpqdalogdrvtable { get; set; }
	/// <summary>PID: 51000</summary>
	CpqsecputableQActionTable cpqsecputable { get; set; }
	/// <summary>PID: 52200</summary>
	PowersupplytableQActionTable powersupplytable { get; set; }
	/// <summary>PID: 52300</summary>
	TemperatureprobetableQActionTable temperatureprobetable { get; set; }
	/// <summary>PID: 52400</summary>
	CoolingdevicetableQActionTable coolingdevicetable { get; set; }
	/// <summary>PID: 52800</summary>
	ControllertableQActionTable controllertable { get; set; }
	/// <summary>PID: 52900</summary>
	ChanneltableQActionTable channeltable { get; set; }
	/// <summary>PID: 53000</summary>
	EnclosuretableQActionTable enclosuretable { get; set; }
	/// <summary>PID: 53100</summary>
	ArraydisktableQActionTable arraydisktable { get; set; }
	/// <summary>PID: 53200</summary>
	VirtualdisktableQActionTable virtualdisktable { get; set; }
	/// <summary>PID: 53300</summary>
	ProcessordevicetableQActionTable processordevicetable { get; set; }
	/// <summary>PID: 53400</summary>
	MemorydevicetableQActionTable memorydevicetable { get; set; }
	object Qa1_1 { get; set; }
	object Qa1 { get; set; }
	object Elementid_elementid { get; set; }
	object Pollingwasenabled_3 { get; set; }
	object Pollingwasenabled { get; set; }
	object Intmin1__fixed { get; set; }
	object Dummytrigger__fixed { get; set; }
	object Clearmountavailability_6 { get; set; }
	object Clearmountavailability { get; set; }
	object Clearprocesscounter_8 { get; set; }
	object Clearprocesscounter { get; set; }
	object Clearmountstoragetable_9 { get; set; }
	object Clearmountstoragetable { get; set; }
	object Totalprocessorload_10 { get; set; }
	object Totalprocessorload { get; set; }
	object Numberofcores_11 { get; set; }
	object Numberofcores { get; set; }
	object Sscpuidle_12 { get; set; }
	object Sscpuidle { get; set; }
	object Tableinstance_15 { get; set; }
	object Tableinstance { get; set; }
	object Qacalculateprocessorsloadavg_dummy { get; set; }
	object Statuscode_18 { get; set; }
	object Statuscode { get; set; }
	object Responsecontent_19 { get; set; }
	object Responsecontent { get; set; }
	object Time_flag_new_20 { get; set; }
	object Time_flag_new { get; set; }
	object Time_flag_old_21 { get; set; }
	object Time_flag_old { get; set; }
	object Cputemperature1_22 { get; set; }
	object Cputemperature1 { get; set; }
	object Cputemperature2_23 { get; set; }
	object Cputemperature2 { get; set; }
	object Pixfixversion_24 { get; set; }
	object Pixfixversion { get; set; }
	object Clean_tm_trigger_29 { get; set; }
	object Clean_tm_trigger { get; set; }
	object Taskmanagerautoclear_30 { get; set; }
	object Taskmanagerautoclear { get; set; }
	object Taskmanagerautoclear_31 { get; set; }
	object Memorycalculationchange_40 { get; set; }
	object Memorycalculationchange { get; set; }
	object Memorycalculationchange_41 { get; set; }
	object Check_processor_nbr_trigger_49 { get; set; }
	object Check_processor_nbr_trigger { get; set; }
	object Hrdevicetype_inst_51 { get; set; }
	object Hrdevicetype_inst { get; set; }
	object Hrdevicetype_col_52 { get; set; }
	object Hrdevicetype_col { get; set; }
	object Interfacemonitorconfig_58 { get; set; }
	object Interfacemonitorconfig { get; set; }
	object Changeallinterfacemonitoringstates_59 { get; set; }
	object Changeallinterfacemonitoringstates { get; set; }
	object Versiontag_60 { get; set; }
	object Versiontag { get; set; }
	object Processcounterrunarguments_63 { get; set; }
	object Processcounterrunarguments { get; set; }
	object Processcounterprocesscpu_64 { get; set; }
	object Processcounterprocesscpu { get; set; }
	object Processcounterprocessmemusage_66 { get; set; }
	object Processcounterprocessmemusage { get; set; }
	object Processcounterprocessidentifier_67 { get; set; }
	object Processcounterprocessidentifier { get; set; }
	object Clearprocesscountertableonce_68 { get; set; }
	object Clearprocesscountertableonce { get; set; }
	object Processcounterdisplaykey_69 { get; set; }
	object Processcounterdisplaykey { get; set; }
	object Processcounterindex_71 { get; set; }
	object Processcounterindex { get; set; }
	object Processcounterinstancecount_72 { get; set; }
	object Processcounterinstancecount { get; set; }
	object Processcounterrunpath_73 { get; set; }
	object Processcounterrunpath { get; set; }
	object Dummystoragecounter_dummy { get; set; }
	object Dummymonitordiskscounter_dummy { get; set; }
	object Dummyrunscounter_dummy { get; set; }
	object Wildcardinstance_77 { get; set; }
	object Wildcardinstance { get; set; }
	object Processname_78 { get; set; }
	object Processname { get; set; }
	object Processcounter_contextmenu_79 { get; set; }
	object Processcounter_contextmenu { get; set; }
	object Taskmanagerprocesspid_81 { get; set; }
	object Taskmanagerprocesspid { get; set; }
	object Taskmanagerprocessname_82 { get; set; }
	object Taskmanagerprocessname { get; set; }
	object Taskmanagerprocessnameindex_83 { get; set; }
	object Taskmanagerprocessnameindex { get; set; }
	object Taskmanagerprocesscpu_84 { get; set; }
	object Taskmanagerprocesscpu { get; set; }
	object Taskmanagerprocesscputime_85 { get; set; }
	object Taskmanagerprocesscputime { get; set; }
	object Taskmanagerprocessmemusage_86 { get; set; }
	object Taskmanagerprocessmemusage { get; set; }
	object Taskmanagerrowstatus_87 { get; set; }
	object Taskmanagerrowstatus { get; set; }
	object Taskmanagerprevioustime_88 { get; set; }
	object Taskmanagerprevioustime { get; set; }
	object Taskmanagerpreviousperf_89 { get; set; }
	object Taskmanagerpreviousperf { get; set; }
	object Hrswrunperftable_instance_91 { get; set; }
	object Hrswrunperftable_instance { get; set; }
	object Hrswrunperfcpu_92 { get; set; }
	object Hrswrunperfcpu { get; set; }
	object Hrswrunperftable_currenttime_93 { get; set; }
	object Hrswrunperftable_currenttime { get; set; }
	object Hrswrunperfpreviouscpu_94 { get; set; }
	object Hrswrunperfpreviouscpu { get; set; }
	object Hrswrunperftable_init_95 { get; set; }
	object Hrswrunperftable_init { get; set; }
	object Taskmanagerprocessrunstatus_96 { get; set; }
	object Taskmanagerprocessrunstatus { get; set; }
	object Taskmanagerprocessrunpath_97 { get; set; }
	object Taskmanagerprocessrunpath { get; set; }
	object Runqaction90_dummy { get; set; }
	object Taskmanagerrunparameters_99 { get; set; }
	object Taskmanagerrunparameters { get; set; }
	object Sysdescr_100 { get; set; }
	object Sysdescr { get; set; }
	object Sysuptimeprocessed_102 { get; set; }
	object Sysuptimeprocessed { get; set; }
	object Syslocation_103 { get; set; }
	object Syslocation { get; set; }
	object Systemname_104 { get; set; }
	object Systemname { get; set; }
	object Hrsystemnumusers_105 { get; set; }
	object Hrsystemnumusers { get; set; }
	object Hrsystemuptime_106 { get; set; }
	object Hrsystemuptime { get; set; }
	object Hrsystemprocesses_107 { get; set; }
	object Hrsystemprocesses { get; set; }
	object Localtimesnmp_108 { get; set; }
	object Localtimesnmp { get; set; }
	object Normalizetaskmanagerprocessname_111 { get; set; }
	object Normalizetaskmanagerprocessname { get; set; }
	object Normalizetaskmanagerprocesscpu_112 { get; set; }
	object Normalizetaskmanagerprocesscpu { get; set; }
	object Normalizetaskmanagerprocessmemusage_113 { get; set; }
	object Normalizetaskmanagerprocessmemusage { get; set; }
	object Normalizetaskmanagerprocesscpu_122 { get; set; }
	object Normalizetaskmanagerprocessmemusage_123 { get; set; }
	object Softwareinfohrswinstalledindex_131 { get; set; }
	object Softwareinfohrswinstalledindex { get; set; }
	object Softwareinfohrswinstalledname_132 { get; set; }
	object Softwareinfohrswinstalledname { get; set; }
	object Softwareinfohrswinstalleddate_133 { get; set; }
	object Softwareinfohrswinstalleddate { get; set; }
	object Softwareinfoswinstallationdate_134 { get; set; }
	object Softwareinfoswinstallationdate { get; set; }
	object Hrfsindex_141 { get; set; }
	object Hrfsindex { get; set; }
	object Hrfstype_142 { get; set; }
	object Hrfstype { get; set; }
	object Hrfsstorageindex_143 { get; set; }
	object Hrfsstorageindex { get; set; }
	object Ipaddrentaddr_151 { get; set; }
	object Ipaddrentaddr { get; set; }
	object Ipaddrentifindex_152 { get; set; }
	object Ipaddrentifindex { get; set; }
	object Ipaddrentnetmask_153 { get; set; }
	object Ipaddrentnetmask { get; set; }
	object Iproutedest_161 { get; set; }
	object Iproutedest { get; set; }
	object Iprouteifindex_162 { get; set; }
	object Iprouteifindex { get; set; }
	object Iproutenexthop_163 { get; set; }
	object Iproutenexthop { get; set; }
	object Iproutemask_164 { get; set; }
	object Iproutemask { get; set; }
	object Flag199_199 { get; set; }
	object Flag199 { get; set; }
	object Processrunpath_200 { get; set; }
	object Processrunpath { get; set; }
	object Processrunargument_201 { get; set; }
	object Processrunargument { get; set; }
	object JobName_211 { get; set; }
	object JobName { get; set; }
	object JobType_212 { get; set; }
	object JobType { get; set; }
	object Jobstatus_213 { get; set; }
	object Jobstatus { get; set; }
	object UpdatedTime_214 { get; set; }
	object UpdatedTime { get; set; }
	object NodeName_215 { get; set; }
	object NodeName { get; set; }
	object Updatejobstatus_216 { get; set; }
	object Updatejobstatus { get; set; }
	object Updatejobstatus_217 { get; set; }
	object Inputswitcherindex_231 { get; set; }
	object Inputswitcherindex { get; set; }
	object Inputswitcherjobname_232 { get; set; }
	object Inputswitcherjobname { get; set; }
	object Inputswitchergroupno_233 { get; set; }
	object Inputswitchergroupno { get; set; }
	object Inputswitcheractiveinput_234 { get; set; }
	object Inputswitcheractiveinput { get; set; }
	object Inputswitcheractiveinput_235 { get; set; }
	object Inputswitchercolumnname_236 { get; set; }
	object Inputswitchercolumnname { get; set; }
	object Rftunningindex_251 { get; set; }
	object Rftunningindex { get; set; }
	object Rftunningfrequency_252 { get; set; }
	object Rftunningfrequency { get; set; }
	object Rftunningsymbolrate_253 { get; set; }
	object Rftunningsymbolrate { get; set; }
	object Rftunningfec_254 { get; set; }
	object Rftunningfec { get; set; }
	object Rftunningadopterport_255 { get; set; }
	object Rftunningadopterport { get; set; }
	object Rftunninglnbvoltage_256 { get; set; }
	object Rftunninglnbvoltage { get; set; }
	object Rftunninglnbtone_257 { get; set; }
	object Rftunninglnbtone { get; set; }
	object Rftunningipandport_258 { get; set; }
	object Rftunningipandport { get; set; }
	object Rftunningsignalstrength_259 { get; set; }
	object Rftunningsignalstrength { get; set; }
	object Rftunningstatus_260 { get; set; }
	object Rftunningstatus { get; set; }
	object Rftunningsystem_262 { get; set; }
	object Rftunningsystem { get; set; }
	object Processcounterdisplaykey_269 { get; set; }
	object Processcounterrunpath_273 { get; set; }
	object ChannalListIndex_281 { get; set; }
	object ChannalListIndex { get; set; }
	object ChannalListServiceName_282 { get; set; }
	object ChannalListServiceName { get; set; }
	object ChannalListServiceId_283 { get; set; }
	object ChannalListServiceId { get; set; }
	object ChannalListVideoPid_284 { get; set; }
	object ChannalListVideoPid { get; set; }
	object ChannalListVideoCodec_285 { get; set; }
	object ChannalListVideoCodec { get; set; }
	object ChannalListAudioPid_286 { get; set; }
	object ChannalListAudioPid { get; set; }
	object ChannalListAudioCodec_287 { get; set; }
	object ChannalListAudioCodec { get; set; }
	object ChannalListFrequency_288 { get; set; }
	object ChannalListFrequency { get; set; }
	object Jobstatisticsjobname_291 { get; set; }
	object Jobstatisticsjobname { get; set; }
	object Jobstatisticsjobstatus_292 { get; set; }
	object Jobstatisticsjobstatus { get; set; }
	object Jobstatisticslatency_293 { get; set; }
	object Jobstatisticslatency { get; set; }
	object JobstatisticsbufferedData_294 { get; set; }
	object JobstatisticsbufferedData { get; set; }
	object Jobstatisticscpuload_295 { get; set; }
	object Jobstatisticscpuload { get; set; }
	object Jobstatisticscpuavarageload_296 { get; set; }
	object Jobstatisticscpuavarageload { get; set; }
	object Jobstatisticsmemoryload_297 { get; set; }
	object Jobstatisticsmemoryload { get; set; }
	object Jobstatisticsavaragememoryload_298 { get; set; }
	object Jobstatisticsavaragememoryload { get; set; }
	object Flag299_299 { get; set; }
	object Flag299 { get; set; }
	object Storagesizeinstance_351 { get; set; }
	object Storagesizeinstance { get; set; }
	object Storagesizesize_352 { get; set; }
	object Storagesizesize { get; set; }
	object Storageusedinstance_356 { get; set; }
	object Storageusedinstance { get; set; }
	object Storageusedsize2_357 { get; set; }
	object Storageusedsize2 { get; set; }
	object Storageinstanceindex_instance_363 { get; set; }
	object Storageinstanceindex_instance { get; set; }
	object Storageinstanceindex_firstcol_364 { get; set; }
	object Storageinstanceindex_firstcol { get; set; }
	object Storageinstanceindex_name_365 { get; set; }
	object Storageinstanceindex_name { get; set; }
	object Taskmanagerpolling_372 { get; set; }
	object Taskmanagerpolling { get; set; }
	object Taskmanagerpolling_373 { get; set; }
	object Storageindex_405 { get; set; }
	object Storageindex { get; set; }
	object Storagedescription_406 { get; set; }
	object Storagedescription { get; set; }
	object Storageremainingstorage_407 { get; set; }
	object Storageremainingstorage { get; set; }
	object Storagesize_408 { get; set; }
	object Storagesize { get; set; }
	object Storageuse_409 { get; set; }
	object Storageuse { get; set; }
	object Storagetype_410 { get; set; }
	object Storagetype { get; set; }
	object Storagedescriptionidx_411 { get; set; }
	object Storagedescriptionidx { get; set; }
	object Storageallocationunit_412 { get; set; }
	object Storageallocationunit { get; set; }
	object Storagetotalsize_413 { get; set; }
	object Storagetotalsize { get; set; }
	object Storageusedsize_414 { get; set; }
	object Storageusedsize { get; set; }
	object Pollingstatestoragetable_450 { get; set; }
	object Pollingstatestoragetable { get; set; }
	object Pollingstatestoragetable_451 { get; set; }
	object Mountstoragepage_499 { get; set; }
	object Mountstoragepage { get; set; }
	object Mountnamemountstorage_501 { get; set; }
	object Mountnamemountstorage { get; set; }
	object Availabilitymountstorage_502 { get; set; }
	object Availabilitymountstorage { get; set; }
	object Storagemountname_503 { get; set; }
	object Storagemountname { get; set; }
	object Storageavailability_contextmenu_504 { get; set; }
	object Storageavailability_contextmenu { get; set; }
	object Descriptionmountstorage_505 { get; set; }
	object Descriptionmountstorage { get; set; }
	object Descriptionmountstoragedependencyvalue_506 { get; set; }
	object Descriptionmountstoragedependencyvalue { get; set; }
	object Descriptionmountstorage_555 { get; set; }
	object Flag599_599 { get; set; }
	object Flag599 { get; set; }
	object Interfacesinterface_idx__604 { get; set; }
	object Interfacesinterface_idx_ { get; set; }
	object Interfacesifindex_605 { get; set; }
	object Interfacesifindex { get; set; }
	object Interfacesifdescr_606 { get; set; }
	object Interfacesifdescr { get; set; }
	object Interfacesiftype_607 { get; set; }
	object Interfacesiftype { get; set; }
	object Interfacesphysaddress_608 { get; set; }
	object Interfacesphysaddress { get; set; }
	object Interfacesadminstatus_609 { get; set; }
	object Interfacesadminstatus { get; set; }
	object Interfacesoperstatus_610 { get; set; }
	object Interfacesoperstatus { get; set; }
	object Interfacesinrate_611 { get; set; }
	object Interfacesinrate { get; set; }
	object Interfacesoutrate_612 { get; set; }
	object Interfacesoutrate { get; set; }
	object Interfacestotalrate_613 { get; set; }
	object Interfacestotalrate { get; set; }
	object Interfacesinterfacestatus_614 { get; set; }
	object Interfacesinterfacestatus { get; set; }
	object Interfacesinterfacebandwidth_615 { get; set; }
	object Interfacesinterfacebandwidth { get; set; }
	object Interfacesrxutilization_616 { get; set; }
	object Interfacesrxutilization { get; set; }
	object Interfacestxutilization_617 { get; set; }
	object Interfacestxutilization { get; set; }
	object Interfacesifinoctets_620 { get; set; }
	object Interfacesifinoctets { get; set; }
	object Interfacesifoutoctets_621 { get; set; }
	object Interfacesifoutoctets { get; set; }
	object Interfacesifinoctetstime_622 { get; set; }
	object Interfacesifinoctetstime { get; set; }
	object Interfacesifoutoctetstime_623 { get; set; }
	object Interfacesifoutoctetstime { get; set; }
	object Ifinoctetsprevious_624 { get; set; }
	object Ifinoctetsprevious { get; set; }
	object Ifoutoctetsprevious_625 { get; set; }
	object Ifoutoctetsprevious { get; set; }
	object Interfacesifinucastpkts_626 { get; set; }
	object Interfacesifinucastpkts { get; set; }
	object Interfacesifoutucastpkts_627 { get; set; }
	object Interfacesifoutucastpkts { get; set; }
	object Interfacesipaddress_642 { get; set; }
	object Interfacesipaddress { get; set; }
	object Interfacesipsubnet_643 { get; set; }
	object Interfacesipsubnet { get; set; }
	object Interfacesdefaultipgateway_644 { get; set; }
	object Interfacesdefaultipgateway { get; set; }
	object Interfacestotalutilization_645 { get; set; }
	object Interfacestotalutilization { get; set; }
	object Interfacesifcountertype_646 { get; set; }
	object Interfacesifcountertype { get; set; }
	object Interfacesinterfacebandwidth_655 { get; set; }
	object Iftrapreceiver_dummy { get; set; }
	object Mystatusstring_750 { get; set; }
	object Mystatusstring { get; set; }
	object Mystatusinteger_751 { get; set; }
	object Mystatusinteger { get; set; }
	object Mystatusoid_752 { get; set; }
	object Mystatusoid { get; set; }
	object Mystatustimeticks_753 { get; set; }
	object Mystatustimeticks { get; set; }
	object Mystatusipaddress_754 { get; set; }
	object Mystatusipaddress { get; set; }
	object Mystatuscounter_755 { get; set; }
	object Mystatuscounter { get; set; }
	object Mystatusgauge_756 { get; set; }
	object Mystatusgauge { get; set; }
	object Mystatussettableinteger_757 { get; set; }
	object Mystatussettableinteger { get; set; }
	object Mystatussettableinteger_767 { get; set; }
	object Indexinterfacetableconfig_801 { get; set; }
	object Indexinterfacetableconfig { get; set; }
	object Descriptioninterfacetableconfig_802 { get; set; }
	object Descriptioninterfacetableconfig { get; set; }
	object Ififtype_803 { get; set; }
	object Ififtype { get; set; }
	object Ifinterfacebandwidth_805 { get; set; }
	object Ifinterfacebandwidth { get; set; }
	object Ifphysaddress_806 { get; set; }
	object Ifphysaddress { get; set; }
	object Ifadminstatus_807 { get; set; }
	object Ifadminstatus { get; set; }
	object Operationalstatusinterfacetableconfig_808 { get; set; }
	object Operationalstatusinterfacetableconfig { get; set; }
	object Ififinoctets_810 { get; set; }
	object Ififinoctets { get; set; }
	object Ififinucastpkts_811 { get; set; }
	object Ififinucastpkts { get; set; }
	object Ififoutoctets_816 { get; set; }
	object Ififoutoctets { get; set; }
	object Ififoutucastpkts_817 { get; set; }
	object Ififoutucastpkts { get; set; }
	object Monitorinterfacetableconfig_818 { get; set; }
	object Monitorinterfacetableconfig { get; set; }
	object Monitorinterfacetableconfig_828 { get; set; }
	object Ifinstance_901 { get; set; }
	object Ifinstance { get; set; }
	object Ifname_902 { get; set; }
	object Ifname { get; set; }
	object Ifinmulticastpkts_903 { get; set; }
	object Ifinmulticastpkts { get; set; }
	object Ifinbroadcastpkts_904 { get; set; }
	object Ifinbroadcastpkts { get; set; }
	object Ifoutmulticastpkts_905 { get; set; }
	object Ifoutmulticastpkts { get; set; }
	object Ifoutbroadcastpkts_906 { get; set; }
	object Ifoutbroadcastpkts { get; set; }
	object Ifhcinoctets_907 { get; set; }
	object Ifhcinoctets { get; set; }
	object Ifhcinucastpkts_908 { get; set; }
	object Ifhcinucastpkts { get; set; }
	object Ifhcinmulticastpkts_909 { get; set; }
	object Ifhcinmulticastpkts { get; set; }
	object Ifhcinbroadcastpkts_910 { get; set; }
	object Ifhcinbroadcastpkts { get; set; }
	object Ifhcoutoctets_911 { get; set; }
	object Ifhcoutoctets { get; set; }
	object Ifhcoutucastpkts_912 { get; set; }
	object Ifhcoutucastpkts { get; set; }
	object Ifhcoutmulticastpkts_913 { get; set; }
	object Ifhcoutmulticastpkts { get; set; }
	object Ifhcoutbroadcastpkts_914 { get; set; }
	object Ifhcoutbroadcastpkts { get; set; }
	object Ifhighspeed_916 { get; set; }
	object Ifhighspeed { get; set; }
	object Ifconnectorpresent_918 { get; set; }
	object Ifconnectorpresent { get; set; }
	object Ifcounterdiscontinuitytime_920 { get; set; }
	object Ifcounterdiscontinuitytime { get; set; }
	object Ifxtablewriteinstance_980 { get; set; }
	object Ifxtablewriteinstance { get; set; }
	object Morememorybutton_999 { get; set; }
	object Morememorybutton { get; set; }
	object Memtotalswap_1000 { get; set; }
	object Memtotalswap { get; set; }
	object Memavailswap_1001 { get; set; }
	object Memavailswap { get; set; }
	object Memusageswap_1002 { get; set; }
	object Memusageswap { get; set; }
	object Memtotalreal_1003 { get; set; }
	object Memtotalreal { get; set; }
	object Memavailreal_1004 { get; set; }
	object Memavailreal { get; set; }
	object Memusagereal_1005 { get; set; }
	object Memusagereal { get; set; }
	object Memusedreal_1006 { get; set; }
	object Memusedreal { get; set; }
	object Membuffer_1007 { get; set; }
	object Membuffer { get; set; }
	object Memcached_1008 { get; set; }
	object Memcached { get; set; }
	object Availablephysicalmemory_1009 { get; set; }
	object Availablephysicalmemory { get; set; }
	object Qa1010_1010 { get; set; }
	object Qa1010 { get; set; }
	object Memoryusage_1011 { get; set; }
	object Memoryusage { get; set; }
	object Percentagememoryusage_1012 { get; set; }
	object Percentagememoryusage { get; set; }
	object Moreprocessbutton_1019 { get; set; }
	object Moreprocessbutton { get; set; }
	object Linuxmonitoredprocesseslistprocess_index_1024 { get; set; }
	object Linuxmonitoredprocesseslistprocess_index { get; set; }
	object Linuxmonitoredprocesseslistprocess_id_1025 { get; set; }
	object Linuxmonitoredprocesseslistprocess_id { get; set; }
	object Linuxmonitoredprocesseslistprocess_name_1026 { get; set; }
	object Linuxmonitoredprocesseslistprocess_name { get; set; }
	object Linuxmonitoredprocesseslistprocess_minimum_1027 { get; set; }
	object Linuxmonitoredprocesseslistprocess_minimum { get; set; }
	object Linuxmonitoredprocesseslistprocess_maximum_1028 { get; set; }
	object Linuxmonitoredprocesseslistprocess_maximum { get; set; }
	object Linuxmonitoredprocesseslistprocess_current_1029 { get; set; }
	object Linuxmonitoredprocesseslistprocess_current { get; set; }
	object Linuxmonitoredprocesseslistprocess_status_1030 { get; set; }
	object Linuxmonitoredprocesseslistprocess_status { get; set; }
	object Linuxmonitoredprocesseslistprocess_errormessage_1031 { get; set; }
	object Linuxmonitoredprocesseslistprocess_errormessage { get; set; }
	object Linuxmonitoredprocesseslistprocess_script_1032 { get; set; }
	object Linuxmonitoredprocesseslistprocess_script { get; set; }
	object Linuxmonitoredprocesseslistprocess_command_1033 { get; set; }
	object Linuxmonitoredprocesseslistprocess_command { get; set; }
	object Mountavailabilitymountname_1041 { get; set; }
	object Mountavailabilitymountname { get; set; }
	object Mountavailabilityavailability_1042 { get; set; }
	object Mountavailabilityavailability { get; set; }
	object Mountname_1048 { get; set; }
	object Mountname { get; set; }
	object Mountavailability_contextmenu_1049 { get; set; }
	object Mountavailability_contextmenu { get; set; }
	object Linuxmonitoreddisksidentifier_1054 { get; set; }
	object Linuxmonitoreddisksidentifier { get; set; }
	object Linuxmonitoreddisksindex_1056 { get; set; }
	object Linuxmonitoreddisksindex { get; set; }
	object Linuxmonitoreddisksmountpath_1057 { get; set; }
	object Linuxmonitoreddisksmountpath { get; set; }
	object Linuxmonitoreddisksdevicepath_1058 { get; set; }
	object Linuxmonitoreddisksdevicepath { get; set; }
	object Linuxmonitoreddisksminimum_1059 { get; set; }
	object Linuxmonitoreddisksminimum { get; set; }
	object Linuxmonitoreddiskspercentagediskminimum_1060 { get; set; }
	object Linuxmonitoreddiskspercentagediskminimum { get; set; }
	object Linuxmonitoreddiskstotalsize_1061 { get; set; }
	object Linuxmonitoreddiskstotalsize { get; set; }
	object Linuxmonitoreddisksavailablespace_1062 { get; set; }
	object Linuxmonitoreddisksavailablespace { get; set; }
	object Linuxmonitoreddisksusedspace_1064 { get; set; }
	object Linuxmonitoreddisksusedspace { get; set; }
	object Linuxmonitoreddisksstatus_1065 { get; set; }
	object Linuxmonitoreddisksstatus { get; set; }
	object Linuxmonitoreddiskswarning_1066 { get; set; }
	object Linuxmonitoreddiskswarning { get; set; }
	object Linuxmonitoreddisksusedspaceabsolute_1067 { get; set; }
	object Linuxmonitoreddisksusedspaceabsolute { get; set; }
	object Pollingstatelinuxmonitoreddisks_1080 { get; set; }
	object Pollingstatelinuxmonitoreddisks { get; set; }
	object Pollingstatelinuxmonitoreddisks_1081 { get; set; }
	object Generalbutton2_1098 { get; set; }
	object Generalbutton2 { get; set; }
	object Generalbutton_1099 { get; set; }
	object Generalbutton { get; set; }
	object Loadaverageinformationindex_1105 { get; set; }
	object Loadaverageinformationindex { get; set; }
	object Loadaverageinformationname_1106 { get; set; }
	object Loadaverageinformationname { get; set; }
	object Loadaverageinformationvalue_1107 { get; set; }
	object Loadaverageinformationvalue { get; set; }
	object Clearnormalizetm_1200 { get; set; }
	object Clearnormalizetm { get; set; }
	object Normalizetm_1201 { get; set; }
	object Normalizetm { get; set; }
	object Morediskspagebuttons_1202 { get; set; }
	object Morediskspagebuttons { get; set; }
	object Processorinstance_1221 { get; set; }
	object Processorinstance { get; set; }
	object Processorfrwid_1222 { get; set; }
	object Processorfrwid { get; set; }
	object Processorload_1223 { get; set; }
	object Processorload { get; set; }
	object Processordevicedescr_1224 { get; set; }
	object Processordevicedescr { get; set; }
	object Processorindex_1225 { get; set; }
	object Processorindex { get; set; }
	object Cpurawuser_1301 { get; set; }
	object Cpurawuser { get; set; }
	object Cpurawnice_1302 { get; set; }
	object Cpurawnice { get; set; }
	object Cpurawsystem_1303 { get; set; }
	object Cpurawsystem { get; set; }
	object Cpurawidle_1304 { get; set; }
	object Cpurawidle { get; set; }
	object Cpurawwait_1305 { get; set; }
	object Cpurawwait { get; set; }
	object Cpurawkernel_1306 { get; set; }
	object Cpurawkernel { get; set; }
	object Cpurawinterrupt_1307 { get; set; }
	object Cpurawinterrupt { get; set; }
	object Rawcpuuser_1310 { get; set; }
	object Rawcpuuser { get; set; }
	object Rawcpunice_1311 { get; set; }
	object Rawcpunice { get; set; }
	object Rawcpusystem_1312 { get; set; }
	object Rawcpusystem { get; set; }
	object Rawcpuidle_1313 { get; set; }
	object Rawcpuidle { get; set; }
	object Rawcpuwait_1314 { get; set; }
	object Rawcpuwait { get; set; }
	object Rawcpukernel_1315 { get; set; }
	object Rawcpukernel { get; set; }
	object Rawcpuinterrupt_1316 { get; set; }
	object Rawcpuinterrupt { get; set; }
	object Rawcpuuserbuf_1320 { get; set; }
	object Rawcpuuserbuf { get; set; }
	object Rawcpunicebuf_1321 { get; set; }
	object Rawcpunicebuf { get; set; }
	object Rawcpusystembuf_1322 { get; set; }
	object Rawcpusystembuf { get; set; }
	object Rawcpuidlebuf_1323 { get; set; }
	object Rawcpuidlebuf { get; set; }
	object Rawcpuwaitbuf_1324 { get; set; }
	object Rawcpuwaitbuf { get; set; }
	object Rawcpukernelbuf_1325 { get; set; }
	object Rawcpukernelbuf { get; set; }
	object Rawcpuinterruptbuf_1326 { get; set; }
	object Rawcpuinterruptbuf { get; set; }
	object Rawcputrig_1330 { get; set; }
	object Rawcputrig { get; set; }
	object Pgblinuxvirtualserver_1500 { get; set; }
	object Pgblinuxvirtualserver { get; set; }
	object Polllvsparameters_1501 { get; set; }
	object Polllvsparameters { get; set; }
	object Polllvsparameters_1502 { get; set; }
	object Lvsversion_1510 { get; set; }
	object Lvsversion { get; set; }
	object Lvsnumservices_1511 { get; set; }
	object Lvsnumservices { get; set; }
	object Lvshashtablesize_1512 { get; set; }
	object Lvshashtablesize { get; set; }
	object Lvstcptimeout_1513 { get; set; }
	object Lvstcptimeout { get; set; }
	object Lvstcpfintimeout_1514 { get; set; }
	object Lvstcpfintimeout { get; set; }
	object Lvsudptimeout_1515 { get; set; }
	object Lvsudptimeout { get; set; }
	object Lvsdaemonstate_1516 { get; set; }
	object Lvsdaemonstate { get; set; }
	object Lvsmcastint_1517 { get; set; }
	object Lvsmcastint { get; set; }
	object Lvsservicenumber_1601 { get; set; }
	object Lvsservicenumber { get; set; }
	object Lvsserviceschedtype_1602 { get; set; }
	object Lvsserviceschedtype { get; set; }
	object Lvsserviceproto_1603 { get; set; }
	object Lvsserviceproto { get; set; }
	object Lvsserviceaddr_1604 { get; set; }
	object Lvsserviceaddr { get; set; }
	object Lvsserviceport_1605 { get; set; }
	object Lvsserviceport { get; set; }
	object Lvsservicefwmark_1606 { get; set; }
	object Lvsservicefwmark { get; set; }
	object Lvsservicepersisttimeout_1607 { get; set; }
	object Lvsservicepersisttimeout { get; set; }
	object Lvsservicepersistnetmask_1608 { get; set; }
	object Lvsservicepersistnetmask { get; set; }
	object Lvsservicenumdests_1609 { get; set; }
	object Lvsservicenumdests { get; set; }
	object Lvsservicestatsconns_1610 { get; set; }
	object Lvsservicestatsconns { get; set; }
	object Lvsservicestatsinpkts_1611 { get; set; }
	object Lvsservicestatsinpkts { get; set; }
	object Lvsservicestatsoutpkts_1612 { get; set; }
	object Lvsservicestatsoutpkts { get; set; }
	object Lvsservicestatsinbytes_1613 { get; set; }
	object Lvsservicestatsinbytes { get; set; }
	object Lvsservicestatsoutbytes_1614 { get; set; }
	object Lvsservicestatsoutbytes { get; set; }
	object Lvsserviceratecps_1615 { get; set; }
	object Lvsserviceratecps { get; set; }
	object Lvsservicerateinpps_1616 { get; set; }
	object Lvsservicerateinpps { get; set; }
	object Lvsservicerateoutpps_1617 { get; set; }
	object Lvsservicerateoutpps { get; set; }
	object Lvsservicerateinbps_1618 { get; set; }
	object Lvsservicerateinbps { get; set; }
	object Lvsservicerateoutbps_1619 { get; set; }
	object Lvsservicerateoutbps { get; set; }
	object Lvsrealservicenumber_1701 { get; set; }
	object Lvsrealservicenumber { get; set; }
	object Lvsrealservernumber_1702 { get; set; }
	object Lvsrealservernumber { get; set; }
	object Lvsrealserveraddr_1703 { get; set; }
	object Lvsrealserveraddr { get; set; }
	object Lvsrealserverport_1704 { get; set; }
	object Lvsrealserverport { get; set; }
	object Lvsrealserverflags_1705 { get; set; }
	object Lvsrealserverflags { get; set; }
	object Lvsrealserverweight_1706 { get; set; }
	object Lvsrealserverweight { get; set; }
	object Lvsrealstatsconns_1707 { get; set; }
	object Lvsrealstatsconns { get; set; }
	object Lvsrealstatsinpkts_1708 { get; set; }
	object Lvsrealstatsinpkts { get; set; }
	object Lvsrealstatsoutpkts_1709 { get; set; }
	object Lvsrealstatsoutpkts { get; set; }
	object Lvsrealstatsinbytes_1710 { get; set; }
	object Lvsrealstatsinbytes { get; set; }
	object Lvsrealstatsoutbytes_1711 { get; set; }
	object Lvsrealstatsoutbytes { get; set; }
	object Lvsrealratecps_1712 { get; set; }
	object Lvsrealratecps { get; set; }
	object Lvsrealrateinpps_1713 { get; set; }
	object Lvsrealrateinpps { get; set; }
	object Lvsrealrateoutpps_1714 { get; set; }
	object Lvsrealrateoutpps { get; set; }
	object Lvsrealrateinbps_1715 { get; set; }
	object Lvsrealrateinbps { get; set; }
	object Lvsrealrateoutbps_1716 { get; set; }
	object Lvsrealrateoutbps { get; set; }
	object Pathlist_2002 { get; set; }
	object Pathlist { get; set; }
	object Csvfilelist_2003 { get; set; }
	object Csvfilelist { get; set; }
	object Pathofthefiles_2011 { get; set; }
	object Pathofthefiles { get; set; }
	object Pathofthefiles_2012 { get; set; }
	object Csvfilename_2013 { get; set; }
	object Csvfilename { get; set; }
	object Csvfilename_2014 { get; set; }
	object Csvbutton_2015 { get; set; }
	object Csvbutton { get; set; }
	object Externaldataoverviewid_idx__8001 { get; set; }
	object Externaldataoverviewid_idx_ { get; set; }
	object Externaldataoverviewvalue_8002 { get; set; }
	object Externaldataoverviewvalue { get; set; }
	object Externaldataoverviewstring_8003 { get; set; }
	object Externaldataoverviewstring { get; set; }
	object Externaldataoverviewfunctionality_8004 { get; set; }
	object Externaldataoverviewfunctionality { get; set; }
	object Externaldataoverviewfunctionality_8104 { get; set; }
	object Addexternaldataentry_8200 { get; set; }
	object Addexternaldataentry { get; set; }
	object Removeexternaldataentry_8201 { get; set; }
	object Removeexternaldataentry { get; set; }
	object Addexternaldataentry_8300 { get; set; }
	object Removeexternaldataentry_8301 { get; set; }
	object Processtovalidate_8400 { get; set; }
	object Processtovalidate { get; set; }
	object Processvalidationlistbuffer_8402 { get; set; }
	object Processvalidationlistbuffer { get; set; }
	object Unlistedprocess_8404 { get; set; }
	object Unlistedprocess { get; set; }
	object Processtovalidate_8500 { get; set; }
	object Validationbutton_8501 { get; set; }
	object Validationbutton { get; set; }
	object Unlistedprocess_8504 { get; set; }
	object Processvalidationprocesstovalidate_8601 { get; set; }
	object Processvalidationprocesstovalidate { get; set; }
	object Processvalidationstatus_8602 { get; set; }
	object Processvalidationstatus { get; set; }
	object Processvalidationprocessmonitoring_8603 { get; set; }
	object Processvalidationprocessmonitoring { get; set; }
	object Processvalidationprocessmonitoring_8613 { get; set; }
	object Exttableindex_10001 { get; set; }
	object Exttableindex { get; set; }
	object Extnames_10002 { get; set; }
	object Extnames { get; set; }
	object Extcommand_10003 { get; set; }
	object Extcommand { get; set; }
	object Extresult_10004 { get; set; }
	object Extresult { get; set; }
	object Extoutput_10005 { get; set; }
	object Extoutput { get; set; }
	object Exterrfix_10006 { get; set; }
	object Exterrfix { get; set; }
	object Exterrfixcmd_10007 { get; set; }
	object Exterrfixcmd { get; set; }
	object Exterrfix_10016 { get; set; }
	object Exterrfixoid_10026 { get; set; }
	object Exterrfixoid { get; set; }
	object Diskioindex_10101 { get; set; }
	object Diskioindex { get; set; }
	object Diskiodevice_10102 { get; set; }
	object Diskiodevice { get; set; }
	object Diskionread_10103 { get; set; }
	object Diskionread { get; set; }
	object Diskionreadrate_10104 { get; set; }
	object Diskionreadrate { get; set; }
	object Diskionreadbefore_10105 { get; set; }
	object Diskionreadbefore { get; set; }
	object Diskionwritten_10106 { get; set; }
	object Diskionwritten { get; set; }
	object Diskionwrittenrate_10107 { get; set; }
	object Diskionwrittenrate { get; set; }
	object Diskionwrittenbefore_10108 { get; set; }
	object Diskionwrittenbefore { get; set; }
	object Diskioreads_10109 { get; set; }
	object Diskioreads { get; set; }
	object Diskiowrites_10110 { get; set; }
	object Diskiowrites { get; set; }
	object Diskioreadsrate_10111 { get; set; }
	object Diskioreadsrate { get; set; }
	object Diskioreadsbefore_10112 { get; set; }
	object Diskioreadsbefore { get; set; }
	object Diskiowritesrate_10113 { get; set; }
	object Diskiowritesrate { get; set; }
	object Diskiowritesbefore_10114 { get; set; }
	object Diskiowritesbefore { get; set; }
	object Diskioaveragesecondread_10115 { get; set; }
	object Diskioaveragesecondread { get; set; }
	object Diskioaveragesecondwrite_10116 { get; set; }
	object Diskioaveragesecondwrite { get; set; }
	object Diskiotablereadfinished_10150 { get; set; }
	object Diskiotablereadfinished { get; set; }
	object Tickcounter_10151 { get; set; }
	object Tickcounter { get; set; }
	object Readinstance_11000 { get; set; }
	object Readinstance { get; set; }
	object Linuxplatformprotocoldriver_11111 { get; set; }
	object Linuxplatformprotocoldriver { get; set; }
	object Ipsystemstatsipversion_22001 { get; set; }
	object Ipsystemstatsipversion { get; set; }
	object Ipsystemstatsinreceives_22002 { get; set; }
	object Ipsystemstatsinreceives { get; set; }
	object Ipsystemstatshcinreceives_22003 { get; set; }
	object Ipsystemstatshcinreceives { get; set; }
	object Ipsystemstatsinoctets_22004 { get; set; }
	object Ipsystemstatsinoctets { get; set; }
	object Ipsystemstatshcinoctets_22005 { get; set; }
	object Ipsystemstatshcinoctets { get; set; }
	object Ipsystemstatsinhdrerrors_22006 { get; set; }
	object Ipsystemstatsinhdrerrors { get; set; }
	object Ipsystemstatsinnoroutes_22007 { get; set; }
	object Ipsystemstatsinnoroutes { get; set; }
	object Ipsystemstatsinaddrerrors_22008 { get; set; }
	object Ipsystemstatsinaddrerrors { get; set; }
	object Ipsystemstatsinunknownprotos_22009 { get; set; }
	object Ipsystemstatsinunknownprotos { get; set; }
	object Ipsystemstatsintruncatedpkts_22010 { get; set; }
	object Ipsystemstatsintruncatedpkts { get; set; }
	object Ipsystemstatsinforwdatagrams_22011 { get; set; }
	object Ipsystemstatsinforwdatagrams { get; set; }
	object Ipsystemstatshcinforwdatagrams_22012 { get; set; }
	object Ipsystemstatshcinforwdatagrams { get; set; }
	object Ipsystemstatsreasmreqds_22013 { get; set; }
	object Ipsystemstatsreasmreqds { get; set; }
	object Ipsystemstatsreasmoks_22014 { get; set; }
	object Ipsystemstatsreasmoks { get; set; }
	object Ipsystemstatsreasmfails_22015 { get; set; }
	object Ipsystemstatsreasmfails { get; set; }
	object Ipsystemstatsindiscards_22016 { get; set; }
	object Ipsystemstatsindiscards { get; set; }
	object Ipsystemstatsindelivers_22017 { get; set; }
	object Ipsystemstatsindelivers { get; set; }
	object Ipsystemstatshcindelivers_22018 { get; set; }
	object Ipsystemstatshcindelivers { get; set; }
	object Ipsystemstatsoutrequests_22019 { get; set; }
	object Ipsystemstatsoutrequests { get; set; }
	object Ipsystemstatshcoutrequests_22020 { get; set; }
	object Ipsystemstatshcoutrequests { get; set; }
	object Ipsystemstatsoutnoroutes_22021 { get; set; }
	object Ipsystemstatsoutnoroutes { get; set; }
	object Ipsystemstatsoutforwdatagrams_22022 { get; set; }
	object Ipsystemstatsoutforwdatagrams { get; set; }
	object Ipsystemstatshcoutforwdatagrams_22023 { get; set; }
	object Ipsystemstatshcoutforwdatagrams { get; set; }
	object Ipsystemstatsoutdiscards_22024 { get; set; }
	object Ipsystemstatsoutdiscards { get; set; }
	object Ipsystemstatsoutfragreqds_22025 { get; set; }
	object Ipsystemstatsoutfragreqds { get; set; }
	object Ipsystemstatsoutfragoks_22026 { get; set; }
	object Ipsystemstatsoutfragoks { get; set; }
	object Ipsystemstatsoutfragfails_22027 { get; set; }
	object Ipsystemstatsoutfragfails { get; set; }
	object Ipsystemstatsoutfragcreates_22028 { get; set; }
	object Ipsystemstatsoutfragcreates { get; set; }
	object Ipsystemstatsouttransmits_22029 { get; set; }
	object Ipsystemstatsouttransmits { get; set; }
	object Ipsystemstatshcouttransmits_22030 { get; set; }
	object Ipsystemstatshcouttransmits { get; set; }
	object Ipsystemstatsoutoctets_22031 { get; set; }
	object Ipsystemstatsoutoctets { get; set; }
	object Ipsystemstatshcoutoctets_22032 { get; set; }
	object Ipsystemstatshcoutoctets { get; set; }
	object Ipsystemstatsinmcastpkts_22033 { get; set; }
	object Ipsystemstatsinmcastpkts { get; set; }
	object Ipsystemstatshcinmcastpkts_22034 { get; set; }
	object Ipsystemstatshcinmcastpkts { get; set; }
	object Ipsystemstatsinmcastoctets_22035 { get; set; }
	object Ipsystemstatsinmcastoctets { get; set; }
	object Ipsystemstatshcinmcastoctets_22036 { get; set; }
	object Ipsystemstatshcinmcastoctets { get; set; }
	object Ipsystemstatsoutmcastpkts_22037 { get; set; }
	object Ipsystemstatsoutmcastpkts { get; set; }
	object Ipsystemstatshcoutmcastpkts_22038 { get; set; }
	object Ipsystemstatshcoutmcastpkts { get; set; }
	object Ipsystemstatsoutmcastoctets_22039 { get; set; }
	object Ipsystemstatsoutmcastoctets { get; set; }
	object Ipsystemstatshcoutmcastoctets_22040 { get; set; }
	object Ipsystemstatshcoutmcastoctets { get; set; }
	object Ipsystemstatsinbcastpkts_22041 { get; set; }
	object Ipsystemstatsinbcastpkts { get; set; }
	object Ipsystemstatshcinbcastpkts_22042 { get; set; }
	object Ipsystemstatshcinbcastpkts { get; set; }
	object Ipsystemstatsoutbcastpkts_22043 { get; set; }
	object Ipsystemstatsoutbcastpkts { get; set; }
	object Ipsystemstatshcoutbcastpkts_22044 { get; set; }
	object Ipsystemstatshcoutbcastpkts { get; set; }
	object Ipsystemstatsdiscontinuitytime_22045 { get; set; }
	object Ipsystemstatsdiscontinuitytime { get; set; }
	object Ipsystemstatsrefreshrate_22046 { get; set; }
	object Ipsystemstatsrefreshrate { get; set; }
	object Tcprtoalgorithm_22200 { get; set; }
	object Tcprtoalgorithm { get; set; }
	object Tcprtomin_22201 { get; set; }
	object Tcprtomin { get; set; }
	object Tcprtomax_22202 { get; set; }
	object Tcprtomax { get; set; }
	object Tcpmaxconn_22203 { get; set; }
	object Tcpmaxconn { get; set; }
	object Tcpactiveopens_22204 { get; set; }
	object Tcpactiveopens { get; set; }
	object Tcppassiveopens_22205 { get; set; }
	object Tcppassiveopens { get; set; }
	object Tcpattemptfails_22206 { get; set; }
	object Tcpattemptfails { get; set; }
	object Tcpestabresets_22207 { get; set; }
	object Tcpestabresets { get; set; }
	object Tcpcurrestab_22208 { get; set; }
	object Tcpcurrestab { get; set; }
	object Tcpinsegs_22209 { get; set; }
	object Tcpinsegs { get; set; }
	object Tcpoutsegs_22210 { get; set; }
	object Tcpoutsegs { get; set; }
	object Tcpretranssegs_22211 { get; set; }
	object Tcpretranssegs { get; set; }
	object Tcpinerrs_22212 { get; set; }
	object Tcpinerrs { get; set; }
	object Tcpoutrsts_22213 { get; set; }
	object Tcpoutrsts { get; set; }
	object Pagebuttontcp_22299 { get; set; }
	object Pagebuttontcp { get; set; }
	object Tcpconnectiontableinstance_22401 { get; set; }
	object Tcpconnectiontableinstance { get; set; }
	object Tcpconnectionstate_22402 { get; set; }
	object Tcpconnectionstate { get; set; }
	object Tcpconnectionprocess_22403 { get; set; }
	object Tcpconnectionprocess { get; set; }
	object Tcpconnectionlocalipaddresstype_22404 { get; set; }
	object Tcpconnectionlocalipaddresstype { get; set; }
	object Tcpconnectionlocalipaddress_22405 { get; set; }
	object Tcpconnectionlocalipaddress { get; set; }
	object Tcpconnectionlocalipaddressport_22406 { get; set; }
	object Tcpconnectionlocalipaddressport { get; set; }
	object Tcpconnectionremoteipaddresstype_22407 { get; set; }
	object Tcpconnectionremoteipaddresstype { get; set; }
	object Tcpconnectionremoteipaddress_22408 { get; set; }
	object Tcpconnectionremoteipaddress { get; set; }
	object Tcpconnectionremoteipaddressport_22409 { get; set; }
	object Tcpconnectionremoteipaddressport { get; set; }
	object Tcpconnectionstate_22502 { get; set; }
	object Deviceaddress_pollingip { get; set; }
	object Pollingipaddress_40001 { get; set; }
	object Pollingipaddress { get; set; }
	object Triggerupdateaddress_40003 { get; set; }
	object Triggerupdateaddress { get; set; }
	object Triggerrowdisabled_40004 { get; set; }
	object Triggerrowdisabled { get; set; }
	object Triggerrowundefined_40005 { get; set; }
	object Triggerrowundefined { get; set; }
	object Portlistportnumber_40010 { get; set; }
	object Portlistportnumber { get; set; }
	object Portlisttimeoutport_40011 { get; set; }
	object Portlisttimeoutport { get; set; }
	object Portliststatus_40012 { get; set; }
	object Portliststatus { get; set; }
	object Portlistportresult_40013 { get; set; }
	object Portlistportresult { get; set; }
	object Portlistdelay_40014 { get; set; }
	object Portlistdelay { get; set; }
	object Portlistpreviousexecution_40015 { get; set; }
	object Portlistpreviousexecution { get; set; }
	object Portlistcomment_40016 { get; set; }
	object Portlistcomment { get; set; }
	object Portlistpreviousexecutionbackup_40017 { get; set; }
	object Portlistpreviousexecutionbackup { get; set; }
	object Portlistretries_40018 { get; set; }
	object Portlistretries { get; set; }
	object Portlisttimeuntilnextpoll_40019 { get; set; }
	object Portlisttimeuntilnextpoll { get; set; }
	object Portlisttimeoutport_40021 { get; set; }
	object Portliststatus_40022 { get; set; }
	object Portlistretries_40028 { get; set; }
	object Pollingperiod_40031 { get; set; }
	object Pollingperiod { get; set; }
	object Pollingperiod_40032 { get; set; }
	object Pollingexecution_40033 { get; set; }
	object Pollingexecution { get; set; }
	object Pollingexecution_40034 { get; set; }
	object Addport_40043 { get; set; }
	object Addport { get; set; }
	object Removeport_40045 { get; set; }
	object Removeport { get; set; }
	object Remotedcfinterfaceid_49998 { get; set; }
	object Remotedcfinterfaceid { get; set; }
	object Runqactionpingfunction_dummy { get; set; }
	object Pingactive_50000 { get; set; }
	object Pingactive { get; set; }
	object Pingactive_50001 { get; set; }
	object Pingcycle_50002 { get; set; }
	object Pingcycle { get; set; }
	object Pingcycle_50003 { get; set; }
	object Pingtimeout_50004 { get; set; }
	object Pingtimeout { get; set; }
	object Pingtimeout_50005 { get; set; }
	object Pingnumber_50006 { get; set; }
	object Pingnumber { get; set; }
	object Pingnumber_50007 { get; set; }
	object Val0__fixed { get; set; }
	object Pingpreviousexecution_50010 { get; set; }
	object Pingpreviousexecution { get; set; }
	object Pingresult_50012 { get; set; }
	object Pingresult { get; set; }
	object Pingmeanrtt_50014 { get; set; }
	object Pingmeanrtt { get; set; }
	object Pingminrtt_50016 { get; set; }
	object Pingminrtt { get; set; }
	object Pingmaxrtt_50017 { get; set; }
	object Pingmaxrtt { get; set; }
	object Pingavgsuccess_50018 { get; set; }
	object Pingavgsuccess { get; set; }
	object Pingexecutioncounter_50021 { get; set; }
	object Pingexecutioncounter { get; set; }
	object Pingpollingipaddress_pollingip { get; set; }
	object Pingstartstoptimer_50023 { get; set; }
	object Pingstartstoptimer { get; set; }
	object Pingcyclerttcounter_50024 { get; set; }
	object Pingcyclerttcounter { get; set; }
	object Pingcyclerequestscounter_50025 { get; set; }
	object Pingcyclerequestscounter { get; set; }
	object Pingcyclesuccesscounter_50026 { get; set; }
	object Pingcyclesuccesscounter { get; set; }
	object Pingcycleminrtt_50027 { get; set; }
	object Pingcycleminrtt { get; set; }
	object Pingcyclemaxrtt_50028 { get; set; }
	object Pingcyclemaxrtt { get; set; }
	object Localhost__fixed { get; set; }
	object Pingfirstdailyupdatetime_50039 { get; set; }
	object Pingfirstdailyupdatetime { get; set; }
	object Ping_dailyavailability_50040 { get; set; }
	object Ping_dailyavailability { get; set; }
	object Ping_weeklyavailability_50041 { get; set; }
	object Ping_weeklyavailability { get; set; }
	object Ping_monthlyavailability_50042 { get; set; }
	object Ping_monthlyavailability { get; set; }
	object Ping_packetlossrequests_50043 { get; set; }
	object Ping_packetlossrequests { get; set; }
	object Ping_packetlosscycles_50044 { get; set; }
	object Ping_packetlosscycles { get; set; }
	object Ping_lastrequestsbuffer_50045 { get; set; }
	object Ping_lastrequestsbuffer { get; set; }
	object Ping_lastcyclesbuffer_50046 { get; set; }
	object Ping_lastcyclesbuffer { get; set; }
	object Pingrequestshistory_50047 { get; set; }
	object Pingrequestshistory { get; set; }
	object Pingrequestshistory_50048 { get; set; }
	object Refdailydate_50050 { get; set; }
	object Refdailydate { get; set; }
	object Dailytotalcounter_50051 { get; set; }
	object Dailytotalcounter { get; set; }
	object Dailysuccesscounter_50052 { get; set; }
	object Dailysuccesscounter { get; set; }
	object Refweeklydate_50053 { get; set; }
	object Refweeklydate { get; set; }
	object Weeklytotalcounter_50054 { get; set; }
	object Weeklytotalcounter { get; set; }
	object Weeklysuccesscounter_50055 { get; set; }
	object Weeklysuccesscounter { get; set; }
	object Refmonthlydate_50056 { get; set; }
	object Refmonthlydate { get; set; }
	object Monthlytotalcounter_50057 { get; set; }
	object Monthlytotalcounter { get; set; }
	object Monthlysuccesscounter_50058 { get; set; }
	object Monthlysuccesscounter { get; set; }
	object Pollhpparameters_50100 { get; set; }
	object Pollhpparameters { get; set; }
	object Cpqhoname_50101 { get; set; }
	object Cpqhoname { get; set; }
	object Cpqhoversion_50102 { get; set; }
	object Cpqhoversion { get; set; }
	object Cpqhodesc_50103 { get; set; }
	object Cpqhodesc { get; set; }
	object Cpqsiproductname_50104 { get; set; }
	object Cpqsiproductname { get; set; }
	object Cpqsisysserialnum_50105 { get; set; }
	object Cpqsisysserialnum { get; set; }
	object Cpqsesysromver_50106 { get; set; }
	object Cpqsesysromver { get; set; }
	object Cpqhethermaltempstatus_50110 { get; set; }
	object Cpqhethermaltempstatus { get; set; }
	object Cpqhethermalsystemfanstatus_50111 { get; set; }
	object Cpqhethermalsystemfanstatus { get; set; }
	object Cpqhethermalcpufanstatus_50112 { get; set; }
	object Cpqhethermalcpufanstatus { get; set; }
	object Hppwrsupplycondition_50113 { get; set; }
	object Hppwrsupplycondition { get; set; }
	object Cpqhemibcondition_50114 { get; set; }
	object Cpqhemibcondition { get; set; }
	object Hppollingip_50150 { get; set; }
	object Hppollingip { get; set; }
	object Hppollingipstatus_50160 { get; set; }
	object Hppollingipstatus { get; set; }
	object Pollhpparameters_50200 { get; set; }
	object Hppollingip_50250 { get; set; }
	object Hppollingipstatus_50260 { get; set; }
	object Hptemptable_instance_50311 { get; set; }
	object Hptemptable_instance { get; set; }
	object Cpqhetemperaturechassis_50312 { get; set; }
	object Cpqhetemperaturechassis { get; set; }
	object Cpqhetemperatureindex_50313 { get; set; }
	object Cpqhetemperatureindex { get; set; }
	object Cpqhetemperaturelocale_50314 { get; set; }
	object Cpqhetemperaturelocale { get; set; }
	object Cpqhetemperaturecelsius_50315 { get; set; }
	object Cpqhetemperaturecelsius { get; set; }
	object Cpqhetemperaturethreshold_50316 { get; set; }
	object Cpqhetemperaturethreshold { get; set; }
	object Cpqhetemperaturecondition_50317 { get; set; }
	object Cpqhetemperaturecondition { get; set; }
	object Cpqhetemperaturethresholdtype_50318 { get; set; }
	object Cpqhetemperaturethresholdtype { get; set; }
	object Cpqhetemperaturehwlocation_50319 { get; set; }
	object Cpqhetemperaturehwlocation { get; set; }
	object Hptempidx_50320 { get; set; }
	object Hptempidx { get; set; }
	object Hppowersupplyinstance_50401 { get; set; }
	object Hppowersupplyinstance { get; set; }
	object Hppowersupplychassis_50402 { get; set; }
	object Hppowersupplychassis { get; set; }
	object Hppowersupplypresent_50404 { get; set; }
	object Hppowersupplypresent { get; set; }
	object Hppowersupplycondition_50405 { get; set; }
	object Hppowersupplycondition { get; set; }
	object Hppowersupplystatus_50406 { get; set; }
	object Hppowersupplystatus { get; set; }
	object Hppowersupplymainvoltage_50407 { get; set; }
	object Hppowersupplymainvoltage { get; set; }
	object Hppowersupplycapacityused_50408 { get; set; }
	object Hppowersupplycapacityused { get; set; }
	object Hppowersupplycapacitymaximum_50409 { get; set; }
	object Hppowersupplycapacitymaximum { get; set; }
	object Hppowersupplyredundant_50410 { get; set; }
	object Hppowersupplyredundant { get; set; }
	object Hppowersupplyhotplug_50414 { get; set; }
	object Hppowersupplyhotplug { get; set; }
	object Hpfantable_instance_50501 { get; set; }
	object Hpfantable_instance { get; set; }
	object Hpfanchassis_50502 { get; set; }
	object Hpfanchassis { get; set; }
	object Cpqheflttolfanindex_50503 { get; set; }
	object Cpqheflttolfanindex { get; set; }
	object Cpqheflttolfanlocale_50504 { get; set; }
	object Cpqheflttolfanlocale { get; set; }
	object Cpqheflttolfanpresent_50505 { get; set; }
	object Cpqheflttolfanpresent { get; set; }
	object Cpqheflttolfantype_50506 { get; set; }
	object Cpqheflttolfantype { get; set; }
	object Cpqheflttolfanspeed_50507 { get; set; }
	object Cpqheflttolfanspeed { get; set; }
	object Cpqheflttolfanredundant_50508 { get; set; }
	object Cpqheflttolfanredundant { get; set; }
	object Cpqheflttolfancondition_50510 { get; set; }
	object Cpqheflttolfancondition { get; set; }
	object Cpqheflttolfanhotplug_50511 { get; set; }
	object Cpqheflttolfanhotplug { get; set; }
	object Cpqheflttolfancurrentspeed_50513 { get; set; }
	object Cpqheflttolfancurrentspeed { get; set; }
	object Hpfanidx_50520 { get; set; }
	object Hpfanidx { get; set; }
	object Cpqdacntlrindex_50601 { get; set; }
	object Cpqdacntlrindex { get; set; }
	object Cpqdacntlrmodel_50602 { get; set; }
	object Cpqdacntlrmodel { get; set; }
	object Cpqdacntlrcondition_50606 { get; set; }
	object Cpqdacntlrcondition { get; set; }
	object Cpqdacntlrboardstatus_50610 { get; set; }
	object Cpqdacntlrboardstatus { get; set; }
	object Cpqdacntlrboardcondition_50612 { get; set; }
	object Cpqdacntlrboardcondition { get; set; }
	object Cpqdacntlrredundancytype_50616 { get; set; }
	object Cpqdacntlrredundancytype { get; set; }
	object Cpqdacntlrredundancyerror_50617 { get; set; }
	object Cpqdacntlrredundancyerror { get; set; }
	object Cpqdacntlraccessmodulestatus_50618 { get; set; }
	object Cpqdacntlraccessmodulestatus { get; set; }
	object Cpqdaaccelcntlrindex_50701 { get; set; }
	object Cpqdaaccelcntlrindex { get; set; }
	object Cpqdaaccelstatus_50702 { get; set; }
	object Cpqdaaccelstatus { get; set; }
	object Cpqdaaccelbaddata_50704 { get; set; }
	object Cpqdaaccelbaddata { get; set; }
	object Cpqdaaccelerrcode_50705 { get; set; }
	object Cpqdaaccelerrcode { get; set; }
	object Cpqdaaccelbattery_50706 { get; set; }
	object Cpqdaaccelbattery { get; set; }
	object Cpqdaaccelcondition_50709 { get; set; }
	object Cpqdaaccelcondition { get; set; }
	object Cpqheresmem2module_50751 { get; set; }
	object Cpqheresmem2module { get; set; }
	object Cpqheresmem2boardnum_50752 { get; set; }
	object Cpqheresmem2boardnum { get; set; }
	object Cpqheresmem2cpunum_50753 { get; set; }
	object Cpqheresmem2cpunum { get; set; }
	object Cpqheresmem2modulenum_50754 { get; set; }
	object Cpqheresmem2modulenum { get; set; }
	object Cpqheresmem2modulesize_50755 { get; set; }
	object Cpqheresmem2modulesize { get; set; }
	object Cpqheresmem2moduletype_50756 { get; set; }
	object Cpqheresmem2moduletype { get; set; }
	object Cpqheresmem2modulefrequency_50757 { get; set; }
	object Cpqheresmem2modulefrequency { get; set; }
	object Cpqheresmem2modulestatus_50758 { get; set; }
	object Cpqheresmem2modulestatus { get; set; }
	object Cpqheresmem2modulecondition_50759 { get; set; }
	object Cpqheresmem2modulecondition { get; set; }
	object Hpphysicaldrivetable_instance_50801 { get; set; }
	object Hpphysicaldrivetable_instance { get; set; }
	object Cpqdaphydrvmodel_50803 { get; set; }
	object Cpqdaphydrvmodel { get; set; }
	object Cpqdaphydrvstatus_50806 { get; set; }
	object Cpqdaphydrvstatus { get; set; }
	object Cpqdaphydrvcondition_50837 { get; set; }
	object Cpqdaphydrvcondition { get; set; }
	object Cpqdaphydrvsize_50845 { get; set; }
	object Cpqdaphydrvsize { get; set; }
	object Cpqdaphydrvfailurecode_50855 { get; set; }
	object Cpqdaphydrvfailurecode { get; set; }
	object Cpqdaphydrvsmartstatus_50857 { get; set; }
	object Cpqdaphydrvsmartstatus { get; set; }
	object Cpqdaphydrvconfigurationstatus_50858 { get; set; }
	object Cpqdaphydrvconfigurationstatus { get; set; }
	object Cpqdaphydrvrotationalspeed_50859 { get; set; }
	object Cpqdaphydrvrotationalspeed { get; set; }
	object Cpqdaphydrvtype_50860 { get; set; }
	object Cpqdaphydrvtype { get; set; }
	object Cpqdaphydrvlocationstring_50864 { get; set; }
	object Cpqdaphydrvlocationstring { get; set; }
	object Cpqdaphydrvnegotiatedlinkrate_50865 { get; set; }
	object Cpqdaphydrvnegotiatedlinkrate { get; set; }
	object Hplogicaldrivetable_instance_50901 { get; set; }
	object Hplogicaldrivetable_instance { get; set; }
	object Cpqdalogdrvfaulttol_50902 { get; set; }
	object Cpqdalogdrvfaulttol { get; set; }
	object Cpqdalogdrvstatus_50903 { get; set; }
	object Cpqdalogdrvstatus { get; set; }
	object Cpqdalogdrvsize_50904 { get; set; }
	object Cpqdalogdrvsize { get; set; }
	object Cpqdalogdrvcondition_50905 { get; set; }
	object Cpqdalogdrvcondition { get; set; }
	object Pagebuttonhp_50949 { get; set; }
	object Pagebuttonhp { get; set; }
	object Pagebuttonhp2_50950 { get; set; }
	object Pagebuttonhp2 { get; set; }
	object Cpqsm2cntlrromdatesnmp_50951 { get; set; }
	object Cpqsm2cntlrromdatesnmp { get; set; }
	object Cpqsm2cntlrromrevision_50952 { get; set; }
	object Cpqsm2cntlrromrevision { get; set; }
	object Cpqsm2cntlrromdate_50953 { get; set; }
	object Cpqsm2cntlrromdate { get; set; }
	object Cpqsecpuunitindex_51001 { get; set; }
	object Cpqsecpuunitindex { get; set; }
	object Cpqsecpuname_51002 { get; set; }
	object Cpqsecpuname { get; set; }
	object Cpqsecpuspeed_51003 { get; set; }
	object Cpqsecpuspeed { get; set; }
	object Cpqsecpustatus_51004 { get; set; }
	object Cpqsecpustatus { get; set; }
	object Cpqsecpucore_51005 { get; set; }
	object Cpqsecpucore { get; set; }
	object Polldellparameters_51100 { get; set; }
	object Polldellparameters { get; set; }
	object Operatingsystemoperatingsystemname_51101 { get; set; }
	object Operatingsystemoperatingsystemname { get; set; }
	object Operatingsystemoperatingsystemversionname_51102 { get; set; }
	object Operatingsystemoperatingsystemversionname { get; set; }
	object Chassismodelname_51103 { get; set; }
	object Chassismodelname { get; set; }
	object Chassisservicetagname_51104 { get; set; }
	object Chassisservicetagname { get; set; }
	object Systembiosversionname_51105 { get; set; }
	object Systembiosversionname { get; set; }
	object Systemmanagementsoftwareversionnumbername_51106 { get; set; }
	object Systemmanagementsoftwareversionnumbername { get; set; }
	object Polldellparameters_51200 { get; set; }
	object Dellpagebutton_51900 { get; set; }
	object Dellpagebutton { get; set; }
	object Dellpagebutton2_51901 { get; set; }
	object Dellpagebutton2 { get; set; }
	object Systemstatepowersupplystatuscombined_52110 { get; set; }
	object Systemstatepowersupplystatuscombined { get; set; }
	object Systemstatetemperaturestatuscombined_52111 { get; set; }
	object Systemstatetemperaturestatuscombined { get; set; }
	object Systemstatecoolingdevicestatuscombined_52112 { get; set; }
	object Systemstatecoolingdevicestatuscombined { get; set; }
	object Systemstateglobalsystemstatus_52113 { get; set; }
	object Systemstateglobalsystemstatus { get; set; }
	object Systemstatechassisstatus_52114 { get; set; }
	object Systemstatechassisstatus { get; set; }
	object Dellpowersupply_52201 { get; set; }
	object Dellpowersupply { get; set; }
	object Powersupplylocationname_52202 { get; set; }
	object Powersupplylocationname { get; set; }
	object Powersupplystatus_52203 { get; set; }
	object Powersupplystatus { get; set; }
	object Powersupplytype_52204 { get; set; }
	object Powersupplytype { get; set; }
	object Instancetemperatureprobetable_52301 { get; set; }
	object Instancetemperatureprobetable { get; set; }
	object Temperatureprobelocationname_52302 { get; set; }
	object Temperatureprobelocationname { get; set; }
	object Temperatureprobestatesettings_52303 { get; set; }
	object Temperatureprobestatesettings { get; set; }
	object Temperatureprobestatus_52304 { get; set; }
	object Temperatureprobestatus { get; set; }
	object Temperatureprobetype_52305 { get; set; }
	object Temperatureprobetype { get; set; }
	object Temperatureprobereading_52306 { get; set; }
	object Temperatureprobereading { get; set; }
	object Temperatureprobediscretereading_52307 { get; set; }
	object Temperatureprobediscretereading { get; set; }
	object Instancecoolingdevicetable_52401 { get; set; }
	object Instancecoolingdevicetable { get; set; }
	object Coolingdevicelocationname_52402 { get; set; }
	object Coolingdevicelocationname { get; set; }
	object Coolingdevicestatesettings_52403 { get; set; }
	object Coolingdevicestatesettings { get; set; }
	object Coolingdevicestatus_52404 { get; set; }
	object Coolingdevicestatus { get; set; }
	object Coolingdevicetype_52405 { get; set; }
	object Coolingdevicetype { get; set; }
	object Coolingdevicereading_52406 { get; set; }
	object Coolingdevicereading { get; set; }
	object Coolingdevicediscretereading_52407 { get; set; }
	object Coolingdevicediscretereading { get; set; }
	object Controllernumber_52801 { get; set; }
	object Controllernumber { get; set; }
	object Controllername_52802 { get; set; }
	object Controllername { get; set; }
	object Controllertype_52803 { get; set; }
	object Controllertype { get; set; }
	object Controllerstate_52804 { get; set; }
	object Controllerstate { get; set; }
	object Controllerfwversion_52805 { get; set; }
	object Controllerfwversion { get; set; }
	object Controllerrollupstatus_52806 { get; set; }
	object Controllerrollupstatus { get; set; }
	object Controllercomponentstatus_52807 { get; set; }
	object Controllercomponentstatus { get; set; }
	object Controllernexusid_52808 { get; set; }
	object Controllernexusid { get; set; }
	object Controllerdriverversion_52809 { get; set; }
	object Controllerdriverversion { get; set; }
	object Channelnumber_52901 { get; set; }
	object Channelnumber { get; set; }
	object Channelname_52902 { get; set; }
	object Channelname { get; set; }
	object Channelstate_52903 { get; set; }
	object Channelstate { get; set; }
	object Channelrollupstatus_52904 { get; set; }
	object Channelrollupstatus { get; set; }
	object Channelcomponentstatus_52905 { get; set; }
	object Channelcomponentstatus { get; set; }
	object Channelnexusid_52906 { get; set; }
	object Channelnexusid { get; set; }
	object Channelbustype_52907 { get; set; }
	object Channelbustype { get; set; }
	object Enclosurenumber_53001 { get; set; }
	object Enclosurenumber { get; set; }
	object Enclosurename_53002 { get; set; }
	object Enclosurename { get; set; }
	object Enclosurestate_53003 { get; set; }
	object Enclosurestate { get; set; }
	object Enclosuretype_53004 { get; set; }
	object Enclosuretype { get; set; }
	object Enclosurerollupstatus_53005 { get; set; }
	object Enclosurerollupstatus { get; set; }
	object Enclosurecomponentstatus_53006 { get; set; }
	object Enclosurecomponentstatus { get; set; }
	object Enclosurenexusid_53007 { get; set; }
	object Enclosurenexusid { get; set; }
	object Enclosurefirmwareversion_53008 { get; set; }
	object Enclosurefirmwareversion { get; set; }
	object Arraydisknumber_53101 { get; set; }
	object Arraydisknumber { get; set; }
	object Arraydiskname_53102 { get; set; }
	object Arraydiskname { get; set; }
	object Arraydiskstate_53103 { get; set; }
	object Arraydiskstate { get; set; }
	object Arraydiskproductid_53104 { get; set; }
	object Arraydiskproductid { get; set; }
	object Arraydiskserialno_53105 { get; set; }
	object Arraydiskserialno { get; set; }
	object Arraydiskrevision_53106 { get; set; }
	object Arraydiskrevision { get; set; }
	object Arraydisklengthinmb_53107 { get; set; }
	object Arraydisklengthinmb { get; set; }
	object Arraydiskusedspaceinmb_53108 { get; set; }
	object Arraydiskusedspaceinmb { get; set; }
	object Arraydiskfreespaceinmb_53109 { get; set; }
	object Arraydiskfreespaceinmb { get; set; }
	object Arraydiskbustype_53110 { get; set; }
	object Arraydiskbustype { get; set; }
	object Arraydisksparestate_53111 { get; set; }
	object Arraydisksparestate { get; set; }
	object Arraydiskrollupstatus_53112 { get; set; }
	object Arraydiskrollupstatus { get; set; }
	object Arraydiskcomponentstatus_53113 { get; set; }
	object Arraydiskcomponentstatus { get; set; }
	object Arraydisknexusid_53114 { get; set; }
	object Arraydisknexusid { get; set; }
	object Arraydisksmartalertindication_53115 { get; set; }
	object Arraydisksmartalertindication { get; set; }
	object Arraydiskmediatype_53116 { get; set; }
	object Arraydiskmediatype { get; set; }
	object Virtualdisknumber_53201 { get; set; }
	object Virtualdisknumber { get; set; }
	object Virtualdiskname_53202 { get; set; }
	object Virtualdiskname { get; set; }
	object Virtualdiskstate_53203 { get; set; }
	object Virtualdiskstate { get; set; }
	object Virtualdisklengthinmb_53204 { get; set; }
	object Virtualdisklengthinmb { get; set; }
	object Virtualdisklayout_53205 { get; set; }
	object Virtualdisklayout { get; set; }
	object Virtualdiskrollupstatus_53206 { get; set; }
	object Virtualdiskrollupstatus { get; set; }
	object Dellcpu_53301 { get; set; }
	object Dellcpu { get; set; }
	object Processordevicestatus_53302 { get; set; }
	object Processordevicestatus { get; set; }
	object Processordevicetype_53303 { get; set; }
	object Processordevicetype { get; set; }
	object Processordevicemanufacturername_53304 { get; set; }
	object Processordevicemanufacturername { get; set; }
	object Processordevicefamily_53305 { get; set; }
	object Processordevicefamily { get; set; }
	object Processordevicemaximumspeed_53306 { get; set; }
	object Processordevicemaximumspeed { get; set; }
	object Processordevicecurrentspeed_53307 { get; set; }
	object Processordevicecurrentspeed { get; set; }
	object Processordevicecorecount_53308 { get; set; }
	object Processordevicecorecount { get; set; }
	object Memorydevicestatesettings_53401 { get; set; }
	object Memorydevicestatesettings { get; set; }
	object Memorydevicestatus_53402 { get; set; }
	object Memorydevicestatus { get; set; }
	object Memorydevicetype_53403 { get; set; }
	object Memorydevicetype { get; set; }
	object Memorydevicelocationname_53404 { get; set; }
	object Memorydevicelocationname { get; set; }
	object Memorydevicesize_53405 { get; set; }
	object Memorydevicesize { get; set; }
	object Memorydevicespeed_53406 { get; set; }
	object Memorydevicespeed { get; set; }
	object Memorydevicepartnumbername_53407 { get; set; }
	object Memorydevicepartnumbername { get; set; }
	object Memorydevicestatesettings_53421 { get; set; }
	object Memorydevicestatesettingssnmpset_53441 { get; set; }
	object Memorydevicestatesettingssnmpset { get; set; }
	object Dellmemoryindex_53490 { get; set; }
	object Dellmemoryindex { get; set; }
	WriteParameters Write { get; set; }
}
public class ConcreteSLProtocolExt : ConcreteSLProtocol, SLProtocolExt
{
	/// <summary>PID: 50</summary>
	public HrdevicetypeQActionTable hrdevicetype { get; set; }
	/// <summary>PID: 70</summary>
	public ProcesscounterQActionTable processcounter { get; set; }
	/// <summary>PID: 80</summary>
	public TaskmanagerQActionTable taskmanager { get; set; }
	/// <summary>PID: 90</summary>
	public HrswrunperftableQActionTable hrswrunperftable { get; set; }
	/// <summary>PID: 110</summary>
	public NormalizetaskmanagerQActionTable normalizetaskmanager { get; set; }
	/// <summary>PID: 130</summary>
	public SoftwareinfoQActionTable softwareinfo { get; set; }
	/// <summary>PID: 140</summary>
	public HrfstableQActionTable hrfstable { get; set; }
	/// <summary>PID: 150</summary>
	public IpaddrtableQActionTable ipaddrtable { get; set; }
	/// <summary>PID: 160</summary>
	public IproutetableQActionTable iproutetable { get; set; }
	/// <summary>PID: 210</summary>
	public JobdatatableQActionTable jobdatatable { get; set; }
	/// <summary>PID: 230</summary>
	public InputswitcherQActionTable inputswitcher { get; set; }
	/// <summary>PID: 250</summary>
	public RftuningQActionTable rftuning { get; set; }
	/// <summary>PID: 280</summary>
	public ChannalListQActionTable channalList { get; set; }
	/// <summary>PID: 290</summary>
	public JobstatisticsQActionTable jobstatistics { get; set; }
	/// <summary>PID: 350</summary>
	public StoragestoragesizeQActionTable storagestoragesize { get; set; }
	/// <summary>PID: 355</summary>
	public Storagestoragesize2QActionTable storagestoragesize2 { get; set; }
	/// <summary>PID: 360</summary>
	public StorageinstanceindexQActionTable storageinstanceindex { get; set; }
	/// <summary>PID: 400</summary>
	public StoragetableQActionTable storagetable { get; set; }
	/// <summary>PID: 500</summary>
	public StorageavailabilityQActionTable storageavailability { get; set; }
	/// <summary>PID: 600</summary>
	public InterfacestableQActionTable interfacestable { get; set; }
	/// <summary>PID: 800</summary>
	public InterfacetableconfigQActionTable interfacetableconfig { get; set; }
	/// <summary>PID: 900</summary>
	public IfxtableQActionTable ifxtable { get; set; }
	/// <summary>PID: 1020</summary>
	public LinuxmonitoredprocesseslistQActionTable linuxmonitoredprocesseslist { get; set; }
	/// <summary>PID: 1040</summary>
	public MountavailabilityQActionTable mountavailability { get; set; }
	/// <summary>PID: 1050</summary>
	public LinuxmonitoreddisksQActionTable linuxmonitoreddisks { get; set; }
	/// <summary>PID: 1100</summary>
	public LoadaverageinformationQActionTable loadaverageinformation { get; set; }
	/// <summary>PID: 1220</summary>
	public ProcessortableQActionTable processortable { get; set; }
	/// <summary>PID: 1600</summary>
	public LvsservicetableQActionTable lvsservicetable { get; set; }
	/// <summary>PID: 1700</summary>
	public LvsrealtableQActionTable lvsrealtable { get; set; }
	/// <summary>PID: 8000</summary>
	public ExternaldataoverviewQActionTable externaldataoverview { get; set; }
	/// <summary>PID: 8600</summary>
	public ProcessvalidationtableQActionTable processvalidationtable { get; set; }
	/// <summary>PID: 10000</summary>
	public ExttableQActionTable exttable { get; set; }
	/// <summary>PID: 10100</summary>
	public DiskiotableQActionTable diskiotable { get; set; }
	/// <summary>PID: 22000</summary>
	public IpsystemstatstableQActionTable ipsystemstatstable { get; set; }
	/// <summary>PID: 22400</summary>
	public TcpconnectiontableQActionTable tcpconnectiontable { get; set; }
	/// <summary>PID: 40009</summary>
	public PortlistQActionTable portlist { get; set; }
	/// <summary>PID: 49997</summary>
	public RemotedcfinterfacetableQActionTable remotedcfinterfacetable { get; set; }
	/// <summary>PID: 50300</summary>
	public CpqhetemperaturetableQActionTable cpqhetemperaturetable { get; set; }
	/// <summary>PID: 50400</summary>
	public HppowersupplytableQActionTable hppowersupplytable { get; set; }
	/// <summary>PID: 50500</summary>
	public HpfantableQActionTable hpfantable { get; set; }
	/// <summary>PID: 50600</summary>
	public CpqdacntlrtableQActionTable cpqdacntlrtable { get; set; }
	/// <summary>PID: 50700</summary>
	public CpqdaacceltableQActionTable cpqdaacceltable { get; set; }
	/// <summary>PID: 50750</summary>
	public Cpqheresmem2moduletableQActionTable cpqheresmem2moduletable { get; set; }
	/// <summary>PID: 50800</summary>
	public CpqdaphydrvtableQActionTable cpqdaphydrvtable { get; set; }
	/// <summary>PID: 50900</summary>
	public CpqdalogdrvtableQActionTable cpqdalogdrvtable { get; set; }
	/// <summary>PID: 51000</summary>
	public CpqsecputableQActionTable cpqsecputable { get; set; }
	/// <summary>PID: 52200</summary>
	public PowersupplytableQActionTable powersupplytable { get; set; }
	/// <summary>PID: 52300</summary>
	public TemperatureprobetableQActionTable temperatureprobetable { get; set; }
	/// <summary>PID: 52400</summary>
	public CoolingdevicetableQActionTable coolingdevicetable { get; set; }
	/// <summary>PID: 52800</summary>
	public ControllertableQActionTable controllertable { get; set; }
	/// <summary>PID: 52900</summary>
	public ChanneltableQActionTable channeltable { get; set; }
	/// <summary>PID: 53000</summary>
	public EnclosuretableQActionTable enclosuretable { get; set; }
	/// <summary>PID: 53100</summary>
	public ArraydisktableQActionTable arraydisktable { get; set; }
	/// <summary>PID: 53200</summary>
	public VirtualdisktableQActionTable virtualdisktable { get; set; }
	/// <summary>PID: 53300</summary>
	public ProcessordevicetableQActionTable processordevicetable { get; set; }
	/// <summary>PID: 53400</summary>
	public MemorydevicetableQActionTable memorydevicetable { get; set; }
	/// <summary>PID: 1  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Qa1_1 {get { return GetParameter(1); }set { SetParameter(1, value); }}
	/// <summary>PID: 1  | Type: read</summary>
	public System.Object Qa1 {get { return GetParameter(1); }set { SetParameter(1, value); }}
	/// <summary>PID: 2  | Type: elementid</summary>
	public System.Object Elementid_elementid {get { return GetParameter(2); }set { SetParameter(2, value); }}
	/// <summary>PID: 3  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollingwasenabled_3 {get { return GetParameter(3); }set { SetParameter(3, value); }}
	/// <summary>PID: 3  | Type: read</summary>
	public System.Object Pollingwasenabled {get { return GetParameter(3); }set { SetParameter(3, value); }}
	/// <summary>PID: 4  | Type: fixed</summary>
	public System.Object Intmin1__fixed {get { return GetParameter(4); }set { SetParameter(4, value); }}
	/// <summary>PID: 5  | Type: fixed</summary>
	public System.Object Dummytrigger__fixed {get { return GetParameter(5); }set { SetParameter(5, value); }}
	/// <summary>PID: 6  | Type: write | DISCREETS: Clear Mount Availability = 1</summary>
	public System.Object Clearmountavailability_6 {get { return GetParameter(6); }set { SetParameter(6, value); }}
	/// <summary>PID: 6  | Type: write | DISCREETS: Clear Mount Availability = 1</summary>
	public System.Object Clearmountavailability {get { return Write.Clearmountavailability; }set { Write.Clearmountavailability = value; }}
	/// <summary>PID: 8  | Type: write | DISCREETS: Clear Counter Table = 1</summary>
	public System.Object Clearprocesscounter_8 {get { return GetParameter(8); }set { SetParameter(8, value); }}
	/// <summary>PID: 8  | Type: write | DISCREETS: Clear Counter Table = 1</summary>
	public System.Object Clearprocesscounter {get { return Write.Clearprocesscounter; }set { Write.Clearprocesscounter = value; }}
	/// <summary>PID: 9  | Type: write | DISCREETS: Clear Table = 1</summary>
	public System.Object Clearmountstoragetable_9 {get { return GetParameter(9); }set { SetParameter(9, value); }}
	/// <summary>PID: 9  | Type: write | DISCREETS: Clear Table = 1</summary>
	public System.Object Clearmountstoragetable {get { return Write.Clearmountstoragetable; }set { Write.Clearmountstoragetable = value; }}
	/// <summary>PID: 10  | Type: read | EXCEPTIONS: Not Available = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Totalprocessorload_10 {get { return GetParameter(10); }set { SetParameter(10, value); }}
	/// <summary>PID: 10  | Type: read | EXCEPTIONS: Not Available = -1</summary>
	public System.Object Totalprocessorload {get { return GetParameter(10); }set { SetParameter(10, value); }}
	/// <summary>PID: 11  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Numberofcores_11 {get { return GetParameter(11); }set { SetParameter(11, value); }}
	/// <summary>PID: 11  | Type: read</summary>
	public System.Object Numberofcores {get { return GetParameter(11); }set { SetParameter(11, value); }}
	/// <summary>PID: 12  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Sscpuidle_12 {get { return GetParameter(12); }set { SetParameter(12, value); }}
	/// <summary>PID: 12  | Type: read</summary>
	public System.Object Sscpuidle {get { return GetParameter(12); }set { SetParameter(12, value); }}
	/// <summary>PID: 15  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Tableinstance_15 {get { return GetParameter(15); }set { SetParameter(15, value); }}
	/// <summary>PID: 15  | Type: read</summary>
	public System.Object Tableinstance {get { return GetParameter(15); }set { SetParameter(15, value); }}
	/// <summary>PID: 17  | Type: dummy</summary>
	public System.Object Qacalculateprocessorsloadavg_dummy {get { return GetParameter(17); }set { SetParameter(17, value); }}
	/// <summary>PID: 18  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Statuscode_18 {get { return GetParameter(18); }set { SetParameter(18, value); }}
	/// <summary>PID: 18  | Type: read</summary>
	public System.Object Statuscode {get { return GetParameter(18); }set { SetParameter(18, value); }}
	/// <summary>PID: 19  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Responsecontent_19 {get { return GetParameter(19); }set { SetParameter(19, value); }}
	/// <summary>PID: 19  | Type: read</summary>
	public System.Object Responsecontent {get { return GetParameter(19); }set { SetParameter(19, value); }}
	/// <summary>PID: 20  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Time_flag_new_20 {get { return GetParameter(20); }set { SetParameter(20, value); }}
	/// <summary>PID: 20  | Type: read</summary>
	public System.Object Time_flag_new {get { return GetParameter(20); }set { SetParameter(20, value); }}
	/// <summary>PID: 21  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Time_flag_old_21 {get { return GetParameter(21); }set { SetParameter(21, value); }}
	/// <summary>PID: 21  | Type: read</summary>
	public System.Object Time_flag_old {get { return GetParameter(21); }set { SetParameter(21, value); }}
	/// <summary>PID: 22  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cputemperature1_22 {get { return GetParameter(22); }set { SetParameter(22, value); }}
	/// <summary>PID: 22  | Type: read</summary>
	public System.Object Cputemperature1 {get { return GetParameter(22); }set { SetParameter(22, value); }}
	/// <summary>PID: 23  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cputemperature2_23 {get { return GetParameter(23); }set { SetParameter(23, value); }}
	/// <summary>PID: 23  | Type: read</summary>
	public System.Object Cputemperature2 {get { return GetParameter(23); }set { SetParameter(23, value); }}
	/// <summary>PID: 24  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pixfixversion_24 {get { return GetParameter(24); }set { SetParameter(24, value); }}
	/// <summary>PID: 24  | Type: read</summary>
	public System.Object Pixfixversion {get { return GetParameter(24); }set { SetParameter(24, value); }}
	/// <summary>PID: 29  | Type: write</summary>
	public System.Object Clean_tm_trigger_29 {get { return GetParameter(29); }set { SetParameter(29, value); }}
	/// <summary>PID: 29  | Type: write</summary>
	public System.Object Clean_tm_trigger {get { return Write.Clean_tm_trigger; }set { Write.Clean_tm_trigger = value; }}
	/// <summary>PID: 30  | Type: read | DISCREETS: Off = 0, On = 1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Taskmanagerautoclear_30 {get { return GetParameter(30); }set { SetParameter(30, value); }}
	/// <summary>PID: 30  | Type: read | DISCREETS: Off = 0, On = 1</summary>
	public System.Object Taskmanagerautoclear {get { return GetParameter(30); }set { SetParameter(30, value); }}
	/// <summary>PID: 31  | Type: write | DISCREETS: Disabled = 0, Enabled = 1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Taskmanagerautoclear_31 {get { return GetParameter(31); }set { SetParameter(31, value); }}
	/// <summary>PID: 40  | Type: read | DISCREETS: Disabled = 0, Enabled = 1, Auto = 2</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Memorycalculationchange_40 {get { return GetParameter(40); }set { SetParameter(40, value); }}
	/// <summary>PID: 40  | Type: read | DISCREETS: Disabled = 0, Enabled = 1, Auto = 2</summary>
	public System.Object Memorycalculationchange {get { return GetParameter(40); }set { SetParameter(40, value); }}
	/// <summary>PID: 41  | Type: write | DISCREETS: Disabled = 0, Enabled = 1, Auto = 2</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Memorycalculationchange_41 {get { return GetParameter(41); }set { SetParameter(41, value); }}
	/// <summary>PID: 49  | Type: write</summary>
	public System.Object Check_processor_nbr_trigger_49 {get { return GetParameter(49); }set { SetParameter(49, value); }}
	/// <summary>PID: 49  | Type: write</summary>
	public System.Object Check_processor_nbr_trigger {get { return Write.Check_processor_nbr_trigger; }set { Write.Check_processor_nbr_trigger = value; }}
	/// <summary>PID: 51  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hrdevicetype_inst_51 {get { return GetParameter(51); }set { SetParameter(51, value); }}
	/// <summary>PID: 51  | Type: read</summary>
	public System.Object Hrdevicetype_inst {get { return GetParameter(51); }set { SetParameter(51, value); }}
	/// <summary>PID: 52  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hrdevicetype_col_52 {get { return GetParameter(52); }set { SetParameter(52, value); }}
	/// <summary>PID: 52  | Type: read</summary>
	public System.Object Hrdevicetype_col {get { return GetParameter(52); }set { SetParameter(52, value); }}
	/// <summary>PID: 58  | Type: write | DISCREETS: Interface Monitor Config... = Interface Monitor Config</summary>
	public System.Object Interfacemonitorconfig_58 {get { return GetParameter(58); }set { SetParameter(58, value); }}
	/// <summary>PID: 58  | Type: write | DISCREETS: Interface Monitor Config... = Interface Monitor Config</summary>
	public System.Object Interfacemonitorconfig {get { return Write.Interfacemonitorconfig; }set { Write.Interfacemonitorconfig = value; }}
	/// <summary>PID: 59  | Type: write | DISCREETS: Refresh = 1, Enable Operational Up = 2, Disable All = 3, Enable All = 4</summary>
	public System.Object Changeallinterfacemonitoringstates_59 {get { return GetParameter(59); }set { SetParameter(59, value); }}
	/// <summary>PID: 59  | Type: write | DISCREETS: Refresh = 1, Enable Operational Up = 2, Disable All = 3, Enable All = 4</summary>
	public System.Object Changeallinterfacemonitoringstates {get { return Write.Changeallinterfacemonitoringstates; }set { Write.Changeallinterfacemonitoringstates = value; }}
	/// <summary>PID: 60  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Versiontag_60 {get { return GetParameter(60); }set { SetParameter(60, value); }}
	/// <summary>PID: 60  | Type: read</summary>
	public System.Object Versiontag {get { return GetParameter(60); }set { SetParameter(60, value); }}
	/// <summary>PID: 63  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Processcounterrunarguments_63 {get { return GetParameter(63); }set { SetParameter(63, value); }}
	/// <summary>PID: 63  | Type: read</summary>
	public System.Object Processcounterrunarguments {get { return GetParameter(63); }set { SetParameter(63, value); }}
	/// <summary>PID: 64  | Type: read | EXCEPTIONS: Not Available = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Processcounterprocesscpu_64 {get { return GetParameter(64); }set { SetParameter(64, value); }}
	/// <summary>PID: 64  | Type: read | EXCEPTIONS: Not Available = -1</summary>
	public System.Object Processcounterprocesscpu {get { return GetParameter(64); }set { SetParameter(64, value); }}
	/// <summary>PID: 66  | Type: read | EXCEPTIONS: Not Available = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Processcounterprocessmemusage_66 {get { return GetParameter(66); }set { SetParameter(66, value); }}
	/// <summary>PID: 66  | Type: read | EXCEPTIONS: Not Available = -1</summary>
	public System.Object Processcounterprocessmemusage {get { return GetParameter(66); }set { SetParameter(66, value); }}
	/// <summary>PID: 67  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Processcounterprocessidentifier_67 {get { return GetParameter(67); }set { SetParameter(67, value); }}
	/// <summary>PID: 67  | Type: read</summary>
	public System.Object Processcounterprocessidentifier {get { return GetParameter(67); }set { SetParameter(67, value); }}
	/// <summary>PID: 68  | Type: read | DISCREETS: Not Cleared = 0, Cleared = 1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Clearprocesscountertableonce_68 {get { return GetParameter(68); }set { SetParameter(68, value); }}
	/// <summary>PID: 68  | Type: read | DISCREETS: Not Cleared = 0, Cleared = 1</summary>
	public System.Object Clearprocesscountertableonce {get { return GetParameter(68); }set { SetParameter(68, value); }}
	/// <summary>PID: 69  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Processcounterdisplaykey_69 {get { return GetParameter(69); }set { SetParameter(69, value); }}
	/// <summary>PID: 69  | Type: read</summary>
	public System.Object Processcounterdisplaykey {get { return GetParameter(69); }set { SetParameter(69, value); }}
	/// <summary>PID: 71  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Processcounterindex_71 {get { return GetParameter(71); }set { SetParameter(71, value); }}
	/// <summary>PID: 71  | Type: read</summary>
	public System.Object Processcounterindex {get { return GetParameter(71); }set { SetParameter(71, value); }}
	/// <summary>PID: 72  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Processcounterinstancecount_72 {get { return GetParameter(72); }set { SetParameter(72, value); }}
	/// <summary>PID: 72  | Type: read</summary>
	public System.Object Processcounterinstancecount {get { return GetParameter(72); }set { SetParameter(72, value); }}
	/// <summary>PID: 73  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Processcounterrunpath_73 {get { return GetParameter(73); }set { SetParameter(73, value); }}
	/// <summary>PID: 73  | Type: read</summary>
	public System.Object Processcounterrunpath {get { return GetParameter(73); }set { SetParameter(73, value); }}
	/// <summary>PID: 74  | Type: dummy</summary>
	public System.Object Dummystoragecounter_dummy {get { return GetParameter(74); }set { SetParameter(74, value); }}
	/// <summary>PID: 75  | Type: dummy</summary>
	public System.Object Dummymonitordiskscounter_dummy {get { return GetParameter(75); }set { SetParameter(75, value); }}
	/// <summary>PID: 76  | Type: dummy</summary>
	public System.Object Dummyrunscounter_dummy {get { return GetParameter(76); }set { SetParameter(76, value); }}
	/// <summary>PID: 77  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Wildcardinstance_77 {get { return GetParameter(77); }set { SetParameter(77, value); }}
	/// <summary>PID: 77  | Type: read</summary>
	public System.Object Wildcardinstance {get { return GetParameter(77); }set { SetParameter(77, value); }}
	/// <summary>PID: 78  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Processname_78 {get { return GetParameter(78); }set { SetParameter(78, value); }}
	/// <summary>PID: 78  | Type: read</summary>
	public System.Object Processname {get { return GetParameter(78); }set { SetParameter(78, value); }}
	/// <summary>PID: 79  | Type: write | DISCREETS: Add Process = add, Remove Process = remove</summary>
	public System.Object Processcounter_contextmenu_79 {get { return GetParameter(79); }set { SetParameter(79, value); }}
	/// <summary>PID: 79  | Type: write | DISCREETS: Add Process = add, Remove Process = remove</summary>
	public System.Object Processcounter_contextmenu {get { return Write.Processcounter_contextmenu; }set { Write.Processcounter_contextmenu = value; }}
	/// <summary>PID: 81  | Type: read | EXCEPTIONS: Not Available = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Taskmanagerprocesspid_81 {get { return GetParameter(81); }set { SetParameter(81, value); }}
	/// <summary>PID: 81  | Type: read | EXCEPTIONS: Not Available = -1</summary>
	public System.Object Taskmanagerprocesspid {get { return GetParameter(81); }set { SetParameter(81, value); }}
	/// <summary>PID: 82  | Type: read | EXCEPTIONS: Not Found = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Taskmanagerprocessname_82 {get { return GetParameter(82); }set { SetParameter(82, value); }}
	/// <summary>PID: 82  | Type: read | EXCEPTIONS: Not Found = -1</summary>
	public System.Object Taskmanagerprocessname {get { return GetParameter(82); }set { SetParameter(82, value); }}
	/// <summary>PID: 83  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Taskmanagerprocessnameindex_83 {get { return GetParameter(83); }set { SetParameter(83, value); }}
	/// <summary>PID: 83  | Type: read</summary>
	public System.Object Taskmanagerprocessnameindex {get { return GetParameter(83); }set { SetParameter(83, value); }}
	/// <summary>PID: 84  | Type: read | EXCEPTIONS: Not Available = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Taskmanagerprocesscpu_84 {get { return GetParameter(84); }set { SetParameter(84, value); }}
	/// <summary>PID: 84  | Type: read | EXCEPTIONS: Not Available = -1</summary>
	public System.Object Taskmanagerprocesscpu {get { return GetParameter(84); }set { SetParameter(84, value); }}
	/// <summary>PID: 85  | Type: read | EXCEPTIONS: Not Available = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Taskmanagerprocesscputime_85 {get { return GetParameter(85); }set { SetParameter(85, value); }}
	/// <summary>PID: 85  | Type: read | EXCEPTIONS: Not Available = -1</summary>
	public System.Object Taskmanagerprocesscputime {get { return GetParameter(85); }set { SetParameter(85, value); }}
	/// <summary>PID: 86  | Type: read | EXCEPTIONS: Not Available = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Taskmanagerprocessmemusage_86 {get { return GetParameter(86); }set { SetParameter(86, value); }}
	/// <summary>PID: 86  | Type: read | EXCEPTIONS: Not Available = -1</summary>
	public System.Object Taskmanagerprocessmemusage {get { return GetParameter(86); }set { SetParameter(86, value); }}
	/// <summary>PID: 87  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Taskmanagerrowstatus_87 {get { return GetParameter(87); }set { SetParameter(87, value); }}
	/// <summary>PID: 87  | Type: read</summary>
	public System.Object Taskmanagerrowstatus {get { return GetParameter(87); }set { SetParameter(87, value); }}
	/// <summary>PID: 88  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Taskmanagerprevioustime_88 {get { return GetParameter(88); }set { SetParameter(88, value); }}
	/// <summary>PID: 88  | Type: read</summary>
	public System.Object Taskmanagerprevioustime {get { return GetParameter(88); }set { SetParameter(88, value); }}
	/// <summary>PID: 89  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Taskmanagerpreviousperf_89 {get { return GetParameter(89); }set { SetParameter(89, value); }}
	/// <summary>PID: 89  | Type: read</summary>
	public System.Object Taskmanagerpreviousperf {get { return GetParameter(89); }set { SetParameter(89, value); }}
	/// <summary>PID: 91  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hrswrunperftable_instance_91 {get { return GetParameter(91); }set { SetParameter(91, value); }}
	/// <summary>PID: 91  | Type: read</summary>
	public System.Object Hrswrunperftable_instance {get { return GetParameter(91); }set { SetParameter(91, value); }}
	/// <summary>PID: 92  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hrswrunperfcpu_92 {get { return GetParameter(92); }set { SetParameter(92, value); }}
	/// <summary>PID: 92  | Type: read</summary>
	public System.Object Hrswrunperfcpu {get { return GetParameter(92); }set { SetParameter(92, value); }}
	/// <summary>PID: 93  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hrswrunperftable_currenttime_93 {get { return GetParameter(93); }set { SetParameter(93, value); }}
	/// <summary>PID: 93  | Type: read</summary>
	public System.Object Hrswrunperftable_currenttime {get { return GetParameter(93); }set { SetParameter(93, value); }}
	/// <summary>PID: 94  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hrswrunperfpreviouscpu_94 {get { return GetParameter(94); }set { SetParameter(94, value); }}
	/// <summary>PID: 94  | Type: read</summary>
	public System.Object Hrswrunperfpreviouscpu {get { return GetParameter(94); }set { SetParameter(94, value); }}
	/// <summary>PID: 95  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hrswrunperftable_init_95 {get { return GetParameter(95); }set { SetParameter(95, value); }}
	/// <summary>PID: 95  | Type: read</summary>
	public System.Object Hrswrunperftable_init {get { return GetParameter(95); }set { SetParameter(95, value); }}
	/// <summary>PID: 96  | Type: read | DISCREETS: Running = 1, Runnable = 2, Not Runnable = 3, Invalid = 4 | EXCEPTIONS: Not Running = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Taskmanagerprocessrunstatus_96 {get { return GetParameter(96); }set { SetParameter(96, value); }}
	/// <summary>PID: 96  | Type: read | DISCREETS: Running = 1, Runnable = 2, Not Runnable = 3, Invalid = 4 | EXCEPTIONS: Not Running = -1</summary>
	public System.Object Taskmanagerprocessrunstatus {get { return GetParameter(96); }set { SetParameter(96, value); }}
	/// <summary>PID: 97  | Type: read | EXCEPTIONS: Not Available = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Taskmanagerprocessrunpath_97 {get { return GetParameter(97); }set { SetParameter(97, value); }}
	/// <summary>PID: 97  | Type: read | EXCEPTIONS: Not Available = -1</summary>
	public System.Object Taskmanagerprocessrunpath {get { return GetParameter(97); }set { SetParameter(97, value); }}
	/// <summary>PID: 98  | Type: dummy</summary>
	public System.Object Runqaction90_dummy {get { return GetParameter(98); }set { SetParameter(98, value); }}
	/// <summary>PID: 99  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Taskmanagerrunparameters_99 {get { return GetParameter(99); }set { SetParameter(99, value); }}
	/// <summary>PID: 99  | Type: read</summary>
	public System.Object Taskmanagerrunparameters {get { return GetParameter(99); }set { SetParameter(99, value); }}
	/// <summary>PID: 100  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Sysdescr_100 {get { return GetParameter(100); }set { SetParameter(100, value); }}
	/// <summary>PID: 100  | Type: read</summary>
	public System.Object Sysdescr {get { return GetParameter(100); }set { SetParameter(100, value); }}
	/// <summary>PID: 102  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Sysuptimeprocessed_102 {get { return GetParameter(102); }set { SetParameter(102, value); }}
	/// <summary>PID: 102  | Type: read</summary>
	public System.Object Sysuptimeprocessed {get { return GetParameter(102); }set { SetParameter(102, value); }}
	/// <summary>PID: 103  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Syslocation_103 {get { return GetParameter(103); }set { SetParameter(103, value); }}
	/// <summary>PID: 103  | Type: read</summary>
	public System.Object Syslocation {get { return GetParameter(103); }set { SetParameter(103, value); }}
	/// <summary>PID: 104  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Systemname_104 {get { return GetParameter(104); }set { SetParameter(104, value); }}
	/// <summary>PID: 104  | Type: read</summary>
	public System.Object Systemname {get { return GetParameter(104); }set { SetParameter(104, value); }}
	/// <summary>PID: 105  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hrsystemnumusers_105 {get { return GetParameter(105); }set { SetParameter(105, value); }}
	/// <summary>PID: 105  | Type: read</summary>
	public System.Object Hrsystemnumusers {get { return GetParameter(105); }set { SetParameter(105, value); }}
	/// <summary>PID: 106  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hrsystemuptime_106 {get { return GetParameter(106); }set { SetParameter(106, value); }}
	/// <summary>PID: 106  | Type: read</summary>
	public System.Object Hrsystemuptime {get { return GetParameter(106); }set { SetParameter(106, value); }}
	/// <summary>PID: 107  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hrsystemprocesses_107 {get { return GetParameter(107); }set { SetParameter(107, value); }}
	/// <summary>PID: 107  | Type: read</summary>
	public System.Object Hrsystemprocesses {get { return GetParameter(107); }set { SetParameter(107, value); }}
	/// <summary>PID: 108  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Localtimesnmp_108 {get { return GetParameter(108); }set { SetParameter(108, value); }}
	/// <summary>PID: 108  | Type: read</summary>
	public System.Object Localtimesnmp {get { return GetParameter(108); }set { SetParameter(108, value); }}
	/// <summary>PID: 111  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Normalizetaskmanagerprocessname_111 {get { return GetParameter(111); }set { SetParameter(111, value); }}
	/// <summary>PID: 111  | Type: read</summary>
	public System.Object Normalizetaskmanagerprocessname {get { return GetParameter(111); }set { SetParameter(111, value); }}
	/// <summary>PID: 112  | Type: read | EXCEPTIONS: Not Available = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Normalizetaskmanagerprocesscpu_112 {get { return GetParameter(112); }set { SetParameter(112, value); }}
	/// <summary>PID: 112  | Type: read | EXCEPTIONS: Not Available = -1</summary>
	public System.Object Normalizetaskmanagerprocesscpu {get { return GetParameter(112); }set { SetParameter(112, value); }}
	/// <summary>PID: 113  | Type: read | EXCEPTIONS: Not Available = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Normalizetaskmanagerprocessmemusage_113 {get { return GetParameter(113); }set { SetParameter(113, value); }}
	/// <summary>PID: 113  | Type: read | EXCEPTIONS: Not Available = -1</summary>
	public System.Object Normalizetaskmanagerprocessmemusage {get { return GetParameter(113); }set { SetParameter(113, value); }}
	/// <summary>PID: 122  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Normalizetaskmanagerprocesscpu_122 {get { return GetParameter(122); }set { SetParameter(122, value); }}
	/// <summary>PID: 123  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Normalizetaskmanagerprocessmemusage_123 {get { return GetParameter(123); }set { SetParameter(123, value); }}
	/// <summary>PID: 131  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Softwareinfohrswinstalledindex_131 {get { return GetParameter(131); }set { SetParameter(131, value); }}
	/// <summary>PID: 131  | Type: read</summary>
	public System.Object Softwareinfohrswinstalledindex {get { return GetParameter(131); }set { SetParameter(131, value); }}
	/// <summary>PID: 132  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Softwareinfohrswinstalledname_132 {get { return GetParameter(132); }set { SetParameter(132, value); }}
	/// <summary>PID: 132  | Type: read</summary>
	public System.Object Softwareinfohrswinstalledname {get { return GetParameter(132); }set { SetParameter(132, value); }}
	/// <summary>PID: 133  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Softwareinfohrswinstalleddate_133 {get { return GetParameter(133); }set { SetParameter(133, value); }}
	/// <summary>PID: 133  | Type: read</summary>
	public System.Object Softwareinfohrswinstalleddate {get { return GetParameter(133); }set { SetParameter(133, value); }}
	/// <summary>PID: 134  | Type: read | EXCEPTIONS: Not Applicable = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Softwareinfoswinstallationdate_134 {get { return GetParameter(134); }set { SetParameter(134, value); }}
	/// <summary>PID: 134  | Type: read | EXCEPTIONS: Not Applicable = -1</summary>
	public System.Object Softwareinfoswinstallationdate {get { return GetParameter(134); }set { SetParameter(134, value); }}
	/// <summary>PID: 141  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hrfsindex_141 {get { return GetParameter(141); }set { SetParameter(141, value); }}
	/// <summary>PID: 141  | Type: read</summary>
	public System.Object Hrfsindex {get { return GetParameter(141); }set { SetParameter(141, value); }}
	/// <summary>PID: 142  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hrfstype_142 {get { return GetParameter(142); }set { SetParameter(142, value); }}
	/// <summary>PID: 142  | Type: read</summary>
	public System.Object Hrfstype {get { return GetParameter(142); }set { SetParameter(142, value); }}
	/// <summary>PID: 143  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hrfsstorageindex_143 {get { return GetParameter(143); }set { SetParameter(143, value); }}
	/// <summary>PID: 143  | Type: read</summary>
	public System.Object Hrfsstorageindex {get { return GetParameter(143); }set { SetParameter(143, value); }}
	/// <summary>PID: 151  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipaddrentaddr_151 {get { return GetParameter(151); }set { SetParameter(151, value); }}
	/// <summary>PID: 151  | Type: read</summary>
	public System.Object Ipaddrentaddr {get { return GetParameter(151); }set { SetParameter(151, value); }}
	/// <summary>PID: 152  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipaddrentifindex_152 {get { return GetParameter(152); }set { SetParameter(152, value); }}
	/// <summary>PID: 152  | Type: read</summary>
	public System.Object Ipaddrentifindex {get { return GetParameter(152); }set { SetParameter(152, value); }}
	/// <summary>PID: 153  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipaddrentnetmask_153 {get { return GetParameter(153); }set { SetParameter(153, value); }}
	/// <summary>PID: 153  | Type: read</summary>
	public System.Object Ipaddrentnetmask {get { return GetParameter(153); }set { SetParameter(153, value); }}
	/// <summary>PID: 161  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Iproutedest_161 {get { return GetParameter(161); }set { SetParameter(161, value); }}
	/// <summary>PID: 161  | Type: read</summary>
	public System.Object Iproutedest {get { return GetParameter(161); }set { SetParameter(161, value); }}
	/// <summary>PID: 162  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Iprouteifindex_162 {get { return GetParameter(162); }set { SetParameter(162, value); }}
	/// <summary>PID: 162  | Type: read</summary>
	public System.Object Iprouteifindex {get { return GetParameter(162); }set { SetParameter(162, value); }}
	/// <summary>PID: 163  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Iproutenexthop_163 {get { return GetParameter(163); }set { SetParameter(163, value); }}
	/// <summary>PID: 163  | Type: read</summary>
	public System.Object Iproutenexthop {get { return GetParameter(163); }set { SetParameter(163, value); }}
	/// <summary>PID: 164  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Iproutemask_164 {get { return GetParameter(164); }set { SetParameter(164, value); }}
	/// <summary>PID: 164  | Type: read</summary>
	public System.Object Iproutemask {get { return GetParameter(164); }set { SetParameter(164, value); }}
	/// <summary>PID: 199  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Flag199_199 {get { return GetParameter(199); }set { SetParameter(199, value); }}
	/// <summary>PID: 199  | Type: read</summary>
	public System.Object Flag199 {get { return GetParameter(199); }set { SetParameter(199, value); }}
	/// <summary>PID: 200  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Processrunpath_200 {get { return GetParameter(200); }set { SetParameter(200, value); }}
	/// <summary>PID: 200  | Type: read</summary>
	public System.Object Processrunpath {get { return GetParameter(200); }set { SetParameter(200, value); }}
	/// <summary>PID: 201  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Processrunargument_201 {get { return GetParameter(201); }set { SetParameter(201, value); }}
	/// <summary>PID: 201  | Type: read</summary>
	public System.Object Processrunargument {get { return GetParameter(201); }set { SetParameter(201, value); }}
	/// <summary>PID: 211  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object JobName_211 {get { return GetParameter(211); }set { SetParameter(211, value); }}
	/// <summary>PID: 211  | Type: read</summary>
	public System.Object JobName {get { return GetParameter(211); }set { SetParameter(211, value); }}
	/// <summary>PID: 212  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object JobType_212 {get { return GetParameter(212); }set { SetParameter(212, value); }}
	/// <summary>PID: 212  | Type: read</summary>
	public System.Object JobType {get { return GetParameter(212); }set { SetParameter(212, value); }}
	/// <summary>PID: 213  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Jobstatus_213 {get { return GetParameter(213); }set { SetParameter(213, value); }}
	/// <summary>PID: 213  | Type: read</summary>
	public System.Object Jobstatus {get { return GetParameter(213); }set { SetParameter(213, value); }}
	/// <summary>PID: 214  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object UpdatedTime_214 {get { return GetParameter(214); }set { SetParameter(214, value); }}
	/// <summary>PID: 214  | Type: read</summary>
	public System.Object UpdatedTime {get { return GetParameter(214); }set { SetParameter(214, value); }}
	/// <summary>PID: 215  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object NodeName_215 {get { return GetParameter(215); }set { SetParameter(215, value); }}
	/// <summary>PID: 215  | Type: read</summary>
	public System.Object NodeName {get { return GetParameter(215); }set { SetParameter(215, value); }}
	/// <summary>PID: 216  | Type: read | DISCREETS: Start = Start, Stop = Stop</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Updatejobstatus_216 {get { return GetParameter(216); }set { SetParameter(216, value); }}
	/// <summary>PID: 216  | Type: read | DISCREETS: Start = Start, Stop = Stop</summary>
	public System.Object Updatejobstatus {get { return GetParameter(216); }set { SetParameter(216, value); }}
	/// <summary>PID: 217  | Type: write | DISCREETS: Start = Start, Stop = Stop</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Updatejobstatus_217 {get { return GetParameter(217); }set { SetParameter(217, value); }}
	/// <summary>PID: 231  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Inputswitcherindex_231 {get { return GetParameter(231); }set { SetParameter(231, value); }}
	/// <summary>PID: 231  | Type: read</summary>
	public System.Object Inputswitcherindex {get { return GetParameter(231); }set { SetParameter(231, value); }}
	/// <summary>PID: 232  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Inputswitcherjobname_232 {get { return GetParameter(232); }set { SetParameter(232, value); }}
	/// <summary>PID: 232  | Type: read</summary>
	public System.Object Inputswitcherjobname {get { return GetParameter(232); }set { SetParameter(232, value); }}
	/// <summary>PID: 233  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Inputswitchergroupno_233 {get { return GetParameter(233); }set { SetParameter(233, value); }}
	/// <summary>PID: 233  | Type: read</summary>
	public System.Object Inputswitchergroupno {get { return GetParameter(233); }set { SetParameter(233, value); }}
	/// <summary>PID: 234  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Inputswitcheractiveinput_234 {get { return GetParameter(234); }set { SetParameter(234, value); }}
	/// <summary>PID: 234  | Type: read</summary>
	public System.Object Inputswitcheractiveinput {get { return GetParameter(234); }set { SetParameter(234, value); }}
	/// <summary>PID: 235  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Inputswitcheractiveinput_235 {get { return GetParameter(235); }set { SetParameter(235, value); }}
	/// <summary>PID: 236  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Inputswitchercolumnname_236 {get { return GetParameter(236); }set { SetParameter(236, value); }}
	/// <summary>PID: 236  | Type: read</summary>
	public System.Object Inputswitchercolumnname {get { return GetParameter(236); }set { SetParameter(236, value); }}
	/// <summary>PID: 251  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Rftunningindex_251 {get { return GetParameter(251); }set { SetParameter(251, value); }}
	/// <summary>PID: 251  | Type: read</summary>
	public System.Object Rftunningindex {get { return GetParameter(251); }set { SetParameter(251, value); }}
	/// <summary>PID: 252  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Rftunningfrequency_252 {get { return GetParameter(252); }set { SetParameter(252, value); }}
	/// <summary>PID: 252  | Type: read</summary>
	public System.Object Rftunningfrequency {get { return GetParameter(252); }set { SetParameter(252, value); }}
	/// <summary>PID: 253  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Rftunningsymbolrate_253 {get { return GetParameter(253); }set { SetParameter(253, value); }}
	/// <summary>PID: 253  | Type: read</summary>
	public System.Object Rftunningsymbolrate {get { return GetParameter(253); }set { SetParameter(253, value); }}
	/// <summary>PID: 254  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Rftunningfec_254 {get { return GetParameter(254); }set { SetParameter(254, value); }}
	/// <summary>PID: 254  | Type: read</summary>
	public System.Object Rftunningfec {get { return GetParameter(254); }set { SetParameter(254, value); }}
	/// <summary>PID: 255  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Rftunningadopterport_255 {get { return GetParameter(255); }set { SetParameter(255, value); }}
	/// <summary>PID: 255  | Type: read</summary>
	public System.Object Rftunningadopterport {get { return GetParameter(255); }set { SetParameter(255, value); }}
	/// <summary>PID: 256  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Rftunninglnbvoltage_256 {get { return GetParameter(256); }set { SetParameter(256, value); }}
	/// <summary>PID: 256  | Type: read</summary>
	public System.Object Rftunninglnbvoltage {get { return GetParameter(256); }set { SetParameter(256, value); }}
	/// <summary>PID: 257  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Rftunninglnbtone_257 {get { return GetParameter(257); }set { SetParameter(257, value); }}
	/// <summary>PID: 257  | Type: read</summary>
	public System.Object Rftunninglnbtone {get { return GetParameter(257); }set { SetParameter(257, value); }}
	/// <summary>PID: 258  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Rftunningipandport_258 {get { return GetParameter(258); }set { SetParameter(258, value); }}
	/// <summary>PID: 258  | Type: read</summary>
	public System.Object Rftunningipandport {get { return GetParameter(258); }set { SetParameter(258, value); }}
	/// <summary>PID: 259  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Rftunningsignalstrength_259 {get { return GetParameter(259); }set { SetParameter(259, value); }}
	/// <summary>PID: 259  | Type: read</summary>
	public System.Object Rftunningsignalstrength {get { return GetParameter(259); }set { SetParameter(259, value); }}
	/// <summary>PID: 260  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Rftunningstatus_260 {get { return GetParameter(260); }set { SetParameter(260, value); }}
	/// <summary>PID: 260  | Type: read</summary>
	public System.Object Rftunningstatus {get { return GetParameter(260); }set { SetParameter(260, value); }}
	/// <summary>PID: 262  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Rftunningsystem_262 {get { return GetParameter(262); }set { SetParameter(262, value); }}
	/// <summary>PID: 262  | Type: read</summary>
	public System.Object Rftunningsystem {get { return GetParameter(262); }set { SetParameter(262, value); }}
	/// <summary>PID: 269  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Processcounterdisplaykey_269 {get { return GetParameter(269); }set { SetParameter(269, value); }}
	/// <summary>PID: 273  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Processcounterrunpath_273 {get { return GetParameter(273); }set { SetParameter(273, value); }}
	/// <summary>PID: 281  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object ChannalListIndex_281 {get { return GetParameter(281); }set { SetParameter(281, value); }}
	/// <summary>PID: 281  | Type: read</summary>
	public System.Object ChannalListIndex {get { return GetParameter(281); }set { SetParameter(281, value); }}
	/// <summary>PID: 282  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object ChannalListServiceName_282 {get { return GetParameter(282); }set { SetParameter(282, value); }}
	/// <summary>PID: 282  | Type: read</summary>
	public System.Object ChannalListServiceName {get { return GetParameter(282); }set { SetParameter(282, value); }}
	/// <summary>PID: 283  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object ChannalListServiceId_283 {get { return GetParameter(283); }set { SetParameter(283, value); }}
	/// <summary>PID: 283  | Type: read</summary>
	public System.Object ChannalListServiceId {get { return GetParameter(283); }set { SetParameter(283, value); }}
	/// <summary>PID: 284  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object ChannalListVideoPid_284 {get { return GetParameter(284); }set { SetParameter(284, value); }}
	/// <summary>PID: 284  | Type: read</summary>
	public System.Object ChannalListVideoPid {get { return GetParameter(284); }set { SetParameter(284, value); }}
	/// <summary>PID: 285  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object ChannalListVideoCodec_285 {get { return GetParameter(285); }set { SetParameter(285, value); }}
	/// <summary>PID: 285  | Type: read</summary>
	public System.Object ChannalListVideoCodec {get { return GetParameter(285); }set { SetParameter(285, value); }}
	/// <summary>PID: 286  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object ChannalListAudioPid_286 {get { return GetParameter(286); }set { SetParameter(286, value); }}
	/// <summary>PID: 286  | Type: read</summary>
	public System.Object ChannalListAudioPid {get { return GetParameter(286); }set { SetParameter(286, value); }}
	/// <summary>PID: 287  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object ChannalListAudioCodec_287 {get { return GetParameter(287); }set { SetParameter(287, value); }}
	/// <summary>PID: 287  | Type: read</summary>
	public System.Object ChannalListAudioCodec {get { return GetParameter(287); }set { SetParameter(287, value); }}
	/// <summary>PID: 288  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object ChannalListFrequency_288 {get { return GetParameter(288); }set { SetParameter(288, value); }}
	/// <summary>PID: 288  | Type: read</summary>
	public System.Object ChannalListFrequency {get { return GetParameter(288); }set { SetParameter(288, value); }}
	/// <summary>PID: 291  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Jobstatisticsjobname_291 {get { return GetParameter(291); }set { SetParameter(291, value); }}
	/// <summary>PID: 291  | Type: read</summary>
	public System.Object Jobstatisticsjobname {get { return GetParameter(291); }set { SetParameter(291, value); }}
	/// <summary>PID: 292  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Jobstatisticsjobstatus_292 {get { return GetParameter(292); }set { SetParameter(292, value); }}
	/// <summary>PID: 292  | Type: read</summary>
	public System.Object Jobstatisticsjobstatus {get { return GetParameter(292); }set { SetParameter(292, value); }}
	/// <summary>PID: 293  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Jobstatisticslatency_293 {get { return GetParameter(293); }set { SetParameter(293, value); }}
	/// <summary>PID: 293  | Type: read</summary>
	public System.Object Jobstatisticslatency {get { return GetParameter(293); }set { SetParameter(293, value); }}
	/// <summary>PID: 294  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object JobstatisticsbufferedData_294 {get { return GetParameter(294); }set { SetParameter(294, value); }}
	/// <summary>PID: 294  | Type: read</summary>
	public System.Object JobstatisticsbufferedData {get { return GetParameter(294); }set { SetParameter(294, value); }}
	/// <summary>PID: 295  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Jobstatisticscpuload_295 {get { return GetParameter(295); }set { SetParameter(295, value); }}
	/// <summary>PID: 295  | Type: read</summary>
	public System.Object Jobstatisticscpuload {get { return GetParameter(295); }set { SetParameter(295, value); }}
	/// <summary>PID: 296  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Jobstatisticscpuavarageload_296 {get { return GetParameter(296); }set { SetParameter(296, value); }}
	/// <summary>PID: 296  | Type: read</summary>
	public System.Object Jobstatisticscpuavarageload {get { return GetParameter(296); }set { SetParameter(296, value); }}
	/// <summary>PID: 297  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Jobstatisticsmemoryload_297 {get { return GetParameter(297); }set { SetParameter(297, value); }}
	/// <summary>PID: 297  | Type: read</summary>
	public System.Object Jobstatisticsmemoryload {get { return GetParameter(297); }set { SetParameter(297, value); }}
	/// <summary>PID: 298  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Jobstatisticsavaragememoryload_298 {get { return GetParameter(298); }set { SetParameter(298, value); }}
	/// <summary>PID: 298  | Type: read</summary>
	public System.Object Jobstatisticsavaragememoryload {get { return GetParameter(298); }set { SetParameter(298, value); }}
	/// <summary>PID: 299  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Flag299_299 {get { return GetParameter(299); }set { SetParameter(299, value); }}
	/// <summary>PID: 299  | Type: read</summary>
	public System.Object Flag299 {get { return GetParameter(299); }set { SetParameter(299, value); }}
	/// <summary>PID: 351  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Storagesizeinstance_351 {get { return GetParameter(351); }set { SetParameter(351, value); }}
	/// <summary>PID: 351  | Type: read</summary>
	public System.Object Storagesizeinstance {get { return GetParameter(351); }set { SetParameter(351, value); }}
	/// <summary>PID: 352  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Storagesizesize_352 {get { return GetParameter(352); }set { SetParameter(352, value); }}
	/// <summary>PID: 352  | Type: read</summary>
	public System.Object Storagesizesize {get { return GetParameter(352); }set { SetParameter(352, value); }}
	/// <summary>PID: 356  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Storageusedinstance_356 {get { return GetParameter(356); }set { SetParameter(356, value); }}
	/// <summary>PID: 356  | Type: read</summary>
	public System.Object Storageusedinstance {get { return GetParameter(356); }set { SetParameter(356, value); }}
	/// <summary>PID: 357  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Storageusedsize2_357 {get { return GetParameter(357); }set { SetParameter(357, value); }}
	/// <summary>PID: 357  | Type: read</summary>
	public System.Object Storageusedsize2 {get { return GetParameter(357); }set { SetParameter(357, value); }}
	/// <summary>PID: 363  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Storageinstanceindex_instance_363 {get { return GetParameter(363); }set { SetParameter(363, value); }}
	/// <summary>PID: 363  | Type: read</summary>
	public System.Object Storageinstanceindex_instance {get { return GetParameter(363); }set { SetParameter(363, value); }}
	/// <summary>PID: 364  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Storageinstanceindex_firstcol_364 {get { return GetParameter(364); }set { SetParameter(364, value); }}
	/// <summary>PID: 364  | Type: read</summary>
	public System.Object Storageinstanceindex_firstcol {get { return GetParameter(364); }set { SetParameter(364, value); }}
	/// <summary>PID: 365  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Storageinstanceindex_name_365 {get { return GetParameter(365); }set { SetParameter(365, value); }}
	/// <summary>PID: 365  | Type: read</summary>
	public System.Object Storageinstanceindex_name {get { return GetParameter(365); }set { SetParameter(365, value); }}
	/// <summary>PID: 372  | Type: read | DISCREETS: Enabled = 1, Disabled = 2</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Taskmanagerpolling_372 {get { return GetParameter(372); }set { SetParameter(372, value); }}
	/// <summary>PID: 372  | Type: read | DISCREETS: Enabled = 1, Disabled = 2</summary>
	public System.Object Taskmanagerpolling {get { return GetParameter(372); }set { SetParameter(372, value); }}
	/// <summary>PID: 373  | Type: write | DISCREETS: Enabled = 1, Disabled = 2</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Taskmanagerpolling_373 {get { return GetParameter(373); }set { SetParameter(373, value); }}
	/// <summary>PID: 405  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Storageindex_405 {get { return GetParameter(405); }set { SetParameter(405, value); }}
	/// <summary>PID: 405  | Type: read</summary>
	public System.Object Storageindex {get { return GetParameter(405); }set { SetParameter(405, value); }}
	/// <summary>PID: 406  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Storagedescription_406 {get { return GetParameter(406); }set { SetParameter(406, value); }}
	/// <summary>PID: 406  | Type: read</summary>
	public System.Object Storagedescription {get { return GetParameter(406); }set { SetParameter(406, value); }}
	/// <summary>PID: 407  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Storageremainingstorage_407 {get { return GetParameter(407); }set { SetParameter(407, value); }}
	/// <summary>PID: 407  | Type: read</summary>
	public System.Object Storageremainingstorage {get { return GetParameter(407); }set { SetParameter(407, value); }}
	/// <summary>PID: 408  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Storagesize_408 {get { return GetParameter(408); }set { SetParameter(408, value); }}
	/// <summary>PID: 408  | Type: read</summary>
	public System.Object Storagesize {get { return GetParameter(408); }set { SetParameter(408, value); }}
	/// <summary>PID: 409  | Type: read | EXCEPTIONS: Not Available = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Storageuse_409 {get { return GetParameter(409); }set { SetParameter(409, value); }}
	/// <summary>PID: 409  | Type: read | EXCEPTIONS: Not Available = -1</summary>
	public System.Object Storageuse {get { return GetParameter(409); }set { SetParameter(409, value); }}
	/// <summary>PID: 410  | Type: read | DISCREETS: Not Available = 0, Other = 1.3.6.1.2.1.25.2.1.1, RAM = 1.3.6.1.2.1.25.2.1.2, Virtual Memory = 1.3.6.1.2.1.25.2.1.3, Fixed Disk = 1.3.6.1.2.1.25.2.1.4, Removable Disk = 1.3.6.1.2.1.25.2.1.5, Floppy Disk = 1.3.6.1.2.1.25.2.1.6, Compact Disk = 1.3.6.1.2.1.25.2.1.7, RAM Disk = 1.3.6.1.2.1.25.2.1.8, Flash Memory = 1.3.6.1.2.1.25.2.1.9, Network Disk = 1.3.6.1.2.1.25.2.1.10</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Storagetype_410 {get { return GetParameter(410); }set { SetParameter(410, value); }}
	/// <summary>PID: 410  | Type: read | DISCREETS: Not Available = 0, Other = 1.3.6.1.2.1.25.2.1.1, RAM = 1.3.6.1.2.1.25.2.1.2, Virtual Memory = 1.3.6.1.2.1.25.2.1.3, Fixed Disk = 1.3.6.1.2.1.25.2.1.4, Removable Disk = 1.3.6.1.2.1.25.2.1.5, Floppy Disk = 1.3.6.1.2.1.25.2.1.6, Compact Disk = 1.3.6.1.2.1.25.2.1.7, RAM Disk = 1.3.6.1.2.1.25.2.1.8, Flash Memory = 1.3.6.1.2.1.25.2.1.9, Network Disk = 1.3.6.1.2.1.25.2.1.10</summary>
	public System.Object Storagetype {get { return GetParameter(410); }set { SetParameter(410, value); }}
	/// <summary>PID: 411  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Storagedescriptionidx_411 {get { return GetParameter(411); }set { SetParameter(411, value); }}
	/// <summary>PID: 411  | Type: read</summary>
	public System.Object Storagedescriptionidx {get { return GetParameter(411); }set { SetParameter(411, value); }}
	/// <summary>PID: 412  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Storageallocationunit_412 {get { return GetParameter(412); }set { SetParameter(412, value); }}
	/// <summary>PID: 412  | Type: read</summary>
	public System.Object Storageallocationunit {get { return GetParameter(412); }set { SetParameter(412, value); }}
	/// <summary>PID: 413  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Storagetotalsize_413 {get { return GetParameter(413); }set { SetParameter(413, value); }}
	/// <summary>PID: 413  | Type: read</summary>
	public System.Object Storagetotalsize {get { return GetParameter(413); }set { SetParameter(413, value); }}
	/// <summary>PID: 414  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Storageusedsize_414 {get { return GetParameter(414); }set { SetParameter(414, value); }}
	/// <summary>PID: 414  | Type: read</summary>
	public System.Object Storageusedsize {get { return GetParameter(414); }set { SetParameter(414, value); }}
	/// <summary>PID: 450  | Type: read | DISCREETS: Enabled = 1, Disabled = 0</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollingstatestoragetable_450 {get { return GetParameter(450); }set { SetParameter(450, value); }}
	/// <summary>PID: 450  | Type: read | DISCREETS: Enabled = 1, Disabled = 0</summary>
	public System.Object Pollingstatestoragetable {get { return GetParameter(450); }set { SetParameter(450, value); }}
	/// <summary>PID: 451  | Type: write | DISCREETS: Enabled = 1, Disabled = 0</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollingstatestoragetable_451 {get { return GetParameter(451); }set { SetParameter(451, value); }}
	/// <summary>PID: 499  | Type: write | DISCREETS: Storage Availability... = Storage Availability</summary>
	public System.Object Mountstoragepage_499 {get { return GetParameter(499); }set { SetParameter(499, value); }}
	/// <summary>PID: 499  | Type: write | DISCREETS: Storage Availability... = Storage Availability</summary>
	public System.Object Mountstoragepage {get { return Write.Mountstoragepage; }set { Write.Mountstoragepage = value; }}
	/// <summary>PID: 501  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mountnamemountstorage_501 {get { return GetParameter(501); }set { SetParameter(501, value); }}
	/// <summary>PID: 501  | Type: read</summary>
	public System.Object Mountnamemountstorage {get { return GetParameter(501); }set { SetParameter(501, value); }}
	/// <summary>PID: 502  | Type: read | DISCREETS: Not Present = 0, Present = 1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Availabilitymountstorage_502 {get { return GetParameter(502); }set { SetParameter(502, value); }}
	/// <summary>PID: 502  | Type: read | DISCREETS: Not Present = 0, Present = 1</summary>
	public System.Object Availabilitymountstorage {get { return GetParameter(502); }set { SetParameter(502, value); }}
	/// <summary>PID: 503  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Storagemountname_503 {get { return GetParameter(503); }set { SetParameter(503, value); }}
	/// <summary>PID: 503  | Type: read</summary>
	public System.Object Storagemountname {get { return GetParameter(503); }set { SetParameter(503, value); }}
	/// <summary>PID: 504  | Type: write | DISCREETS: Add Storage = add, Remove Process = remove</summary>
	public System.Object Storageavailability_contextmenu_504 {get { return GetParameter(504); }set { SetParameter(504, value); }}
	/// <summary>PID: 504  | Type: write | DISCREETS: Add Storage = add, Remove Process = remove</summary>
	public System.Object Storageavailability_contextmenu {get { return Write.Storageavailability_contextmenu; }set { Write.Storageavailability_contextmenu = value; }}
	/// <summary>PID: 505  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Descriptionmountstorage_505 {get { return GetParameter(505); }set { SetParameter(505, value); }}
	/// <summary>PID: 505  | Type: read</summary>
	public System.Object Descriptionmountstorage {get { return GetParameter(505); }set { SetParameter(505, value); }}
	/// <summary>PID: 506  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Descriptionmountstoragedependencyvalue_506 {get { return GetParameter(506); }set { SetParameter(506, value); }}
	/// <summary>PID: 506  | Type: read</summary>
	public System.Object Descriptionmountstoragedependencyvalue {get { return GetParameter(506); }set { SetParameter(506, value); }}
	/// <summary>PID: 555  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Descriptionmountstorage_555 {get { return GetParameter(555); }set { SetParameter(555, value); }}
	/// <summary>PID: 599  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Flag599_599 {get { return GetParameter(599); }set { SetParameter(599, value); }}
	/// <summary>PID: 599  | Type: read</summary>
	public System.Object Flag599 {get { return GetParameter(599); }set { SetParameter(599, value); }}
	/// <summary>PID: 604  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesinterface_idx__604 {get { return GetParameter(604); }set { SetParameter(604, value); }}
	/// <summary>PID: 604  | Type: read</summary>
	public System.Object Interfacesinterface_idx_ {get { return GetParameter(604); }set { SetParameter(604, value); }}
	/// <summary>PID: 605  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesifindex_605 {get { return GetParameter(605); }set { SetParameter(605, value); }}
	/// <summary>PID: 605  | Type: read</summary>
	public System.Object Interfacesifindex {get { return GetParameter(605); }set { SetParameter(605, value); }}
	/// <summary>PID: 606  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesifdescr_606 {get { return GetParameter(606); }set { SetParameter(606, value); }}
	/// <summary>PID: 606  | Type: read</summary>
	public System.Object Interfacesifdescr {get { return GetParameter(606); }set { SetParameter(606, value); }}
	/// <summary>PID: 607  | Type: read | DISCREETS: Other = 1, Regular 1822 = 2, HDH 1822 = 3, DDN-X25 = 4, RFC877-X25 = 5, Ethernet-CSMACD = 6, ISO88023-CSMACD = 7, ISO88024-Token Bus = 8, ISO88025-Token Ring = 9, ISO88026-MAN = 10, Star LAN = 11, Proteon-10Mbit = 12, Proteon-80Mbit = 13, HYPER Channel = 14, FDDI = 15, LAPB = 16, SDLC = 17, DS1 = 18, E1 = 19, Basic ISDN = 20, Primary ISDN = 21, Prop Point to Point Serial = 22, PPP = 23, Loopback = 24, EON = 25, Ethernet-3Mbit = 26, NSIP = 27, SLIP = 28, ULTRA = 29, DS3 = 30, SIP = 31, Frame-Relay = 32, RS232 = 33, PARA = 34, ARCNET = 35, ARCNET Plus = 36, ATM = 37, MIOX25 = 38, SONET = 39, X25PLE = 40, ISO88022LLC = 41, Local Talk = 42, SMDS DXI = 43, Frame Relay Service = 44, V35 = 45, HSSI = 46, HIPPI = 47, Modem = 48, AAL5 = 49, SONET Path = 50, SONET VT = 51, SMDS ICIP = 52, Prop Virtual = 53, Prop Multiplexer = 54, IEEE80212 = 55, Fiber Channel = 56, HIPPI Interface = 57, Frame Relay Interconnect = 58, AFlane8023 = 59, AFlane8025 = 60, CCT Emulation = 61, Fast Ether = 62, ISDN = 63, V11 = 64, V36 = 65, G703AT64K = 66, G703AT2MB = 67, QLLC = 68, Fast Ether FX = 69, Channel = 70, IEEE80211 = 71, IBM 370parChan = 72, ESCON = 73, DLSW = 74, ISDNS = 75, ISDNU = 76, LAPD = 77, IP Switch = 78, RSRB = 79, ATM Logical = 80, DS0 = 81, DS0 Bundle = 82, BSC = 83, Async = 84, CNR = 85, ISO88025DTR = 86, EPLRS = 87, ARAP = 88, Prop CNLS = 89, Host Pad = 90, Term Pad = 91, Frame Relay MPI = 92, X213 = 93, ADSL = 94, RADSL = 95, SDSL = 96, VDSL = 97, ISO88025 CRFPInt = 98, Myrinet = 99, Voice EM = 100, Voice FXO = 101, Voice FXS = 102, Voice Encapsulation = 103, Voice Over IP = 104, ATM DXI = 105, ATM FUNI = 106, ATM IMA = 107, PPP Multilink Bundle = 108, IP Over CDLC = 109, IP Over Claw = 110, Stack to Stack = 111, Virtual IP Address = 112, MPC = 113, IP Over ATM = 114, ISO88025 Fiber = 115, TDLC = 116, Gigabit Ethernet = 117, HDLC = 118, LAPF = 119, V37 = 120, X25MLP = 121, X25 Hunt Group = 122, Transport HDLC = 123, Interleave = 124, Fast = 125, IP = 126, DOCS Cable MACLayer = 127, DOCS Cable Downstream = 128, DOCS Cable Upstream = 129, A12MPP Switch = 130, Tunnel = 131, COFFEE = 132, CES = 133, ATMSubInterface = 134, L2 VLAN = 135, L3IP VLAN = 136, L3IPX VLAN = 137, Digital Powerline = 138, MediaMail Over IP = 139, DTM = 140, DCN = 141, IP Forward = 142, mSDSL = 143, IEEE1394 = 144, if-GSN = 145, DVBRCC MACLayer = 146, DVBRCC Downstream = 147, DVBRCC Upstream = 148, ATM Virtual = 149, MPLS Tunnel = 150, SRP = 151, Voice Over ATM = 152, Voice Over Frame Relay = 153, IDSL = 154, Composite Link = 155, SS7 SIG Link = 156, Prop Wireless P2P = 157, FR Forward = 158, RFC1483 = 159, USB = 160, IEEE8023 AdLag = 161, BGP Policy Accounting = 162, FRF16 Mfr Bundle = 163, H323 Gatekeeper = 164, H323 Proxy = 165, MPLS = 166, MF SIG Link = 167, HDSL2 = 168, SHDSL = 169, DS1FDL = 170, POS = 171, DVBASI In = 172, DVBASI Out = 173, PLC = 174, NFAS = 175, TR008 = 176, GR303RDT = 177, GR303IDT = 178, ISUP = 179, Prop DOCS Wireless MACLayer = 180, Prop DOCS Wireless Downstream = 181, Prop DOCS Wireless Upstream = 182, HiperLAN2 = 183, Prop BWAP2MP = 184, SONET Overhead Channel = 185, Digital Wrapper Overhead Channel = 186, AAL2 = 187, Radio MAC = 188, ATM Radio = 189, IMT = 190, MVL = 191, Reach DSL = 192, FRDLCI End Point = 193, ATM VCI End Point = 194, Optical Channel = 195, Optical Transport = 196, Prop ATM = 197, Voice Over Cable = 198, InfiniBand = 199, TE Link = 200, Q2931 = 201, Virtual TG = 202, SIP TG = 203, SIP SIG = 204, DOCS Cable Upstream Channel = 205, ECONET = 206, PON155 = 207, PON622 = 208, Bridge = 209, Line Group = 210, Voice EMFGD = 211, Voice FGDEANA = 212, Voice DID = 213, MPEG Transport = 214, Six to Four = 215, GTP = 216, PDN Ether Loop1 = 217, PDN Ether Loop2 = 218, Optical Channel Group = 219, Home PNA = 220, GFP = 221, CISCO ISL VLAN = 222, Actelis Meta LOOP = 223, FCIP Link = 224, RPR = 225, QAM = 226, LMP = 227, CBL VectaStar = 228, DOCS Cable MCMTS Downstream = 229, ADSL2 = 230, MAC SecControlled IF = 231, MAC SecUncontrolled IF = 232, Avici Optical Ether = 233, ATM Bond = 234, Voice FGDOS = 235, MOCA Version1 = 236, IEEE80216 WMAN = 237, ADSL2 Plus = 238, DVBRCS MACLayer = 239, DVB TDM = 240, DVBRCSTDMA = 241, X86Laps = 242, WWANPP = 243, WWANPP2 = 244, Voice EBS = 245, ifPWType = 246, ILAN = 247, PIP = 248, ALUELP = 249, GPON = 250</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesiftype_607 {get { return GetParameter(607); }set { SetParameter(607, value); }}
	/// <summary>PID: 607  | Type: read | DISCREETS: Other = 1, Regular 1822 = 2, HDH 1822 = 3, DDN-X25 = 4, RFC877-X25 = 5, Ethernet-CSMACD = 6, ISO88023-CSMACD = 7, ISO88024-Token Bus = 8, ISO88025-Token Ring = 9, ISO88026-MAN = 10, Star LAN = 11, Proteon-10Mbit = 12, Proteon-80Mbit = 13, HYPER Channel = 14, FDDI = 15, LAPB = 16, SDLC = 17, DS1 = 18, E1 = 19, Basic ISDN = 20, Primary ISDN = 21, Prop Point to Point Serial = 22, PPP = 23, Loopback = 24, EON = 25, Ethernet-3Mbit = 26, NSIP = 27, SLIP = 28, ULTRA = 29, DS3 = 30, SIP = 31, Frame-Relay = 32, RS232 = 33, PARA = 34, ARCNET = 35, ARCNET Plus = 36, ATM = 37, MIOX25 = 38, SONET = 39, X25PLE = 40, ISO88022LLC = 41, Local Talk = 42, SMDS DXI = 43, Frame Relay Service = 44, V35 = 45, HSSI = 46, HIPPI = 47, Modem = 48, AAL5 = 49, SONET Path = 50, SONET VT = 51, SMDS ICIP = 52, Prop Virtual = 53, Prop Multiplexer = 54, IEEE80212 = 55, Fiber Channel = 56, HIPPI Interface = 57, Frame Relay Interconnect = 58, AFlane8023 = 59, AFlane8025 = 60, CCT Emulation = 61, Fast Ether = 62, ISDN = 63, V11 = 64, V36 = 65, G703AT64K = 66, G703AT2MB = 67, QLLC = 68, Fast Ether FX = 69, Channel = 70, IEEE80211 = 71, IBM 370parChan = 72, ESCON = 73, DLSW = 74, ISDNS = 75, ISDNU = 76, LAPD = 77, IP Switch = 78, RSRB = 79, ATM Logical = 80, DS0 = 81, DS0 Bundle = 82, BSC = 83, Async = 84, CNR = 85, ISO88025DTR = 86, EPLRS = 87, ARAP = 88, Prop CNLS = 89, Host Pad = 90, Term Pad = 91, Frame Relay MPI = 92, X213 = 93, ADSL = 94, RADSL = 95, SDSL = 96, VDSL = 97, ISO88025 CRFPInt = 98, Myrinet = 99, Voice EM = 100, Voice FXO = 101, Voice FXS = 102, Voice Encapsulation = 103, Voice Over IP = 104, ATM DXI = 105, ATM FUNI = 106, ATM IMA = 107, PPP Multilink Bundle = 108, IP Over CDLC = 109, IP Over Claw = 110, Stack to Stack = 111, Virtual IP Address = 112, MPC = 113, IP Over ATM = 114, ISO88025 Fiber = 115, TDLC = 116, Gigabit Ethernet = 117, HDLC = 118, LAPF = 119, V37 = 120, X25MLP = 121, X25 Hunt Group = 122, Transport HDLC = 123, Interleave = 124, Fast = 125, IP = 126, DOCS Cable MACLayer = 127, DOCS Cable Downstream = 128, DOCS Cable Upstream = 129, A12MPP Switch = 130, Tunnel = 131, COFFEE = 132, CES = 133, ATMSubInterface = 134, L2 VLAN = 135, L3IP VLAN = 136, L3IPX VLAN = 137, Digital Powerline = 138, MediaMail Over IP = 139, DTM = 140, DCN = 141, IP Forward = 142, mSDSL = 143, IEEE1394 = 144, if-GSN = 145, DVBRCC MACLayer = 146, DVBRCC Downstream = 147, DVBRCC Upstream = 148, ATM Virtual = 149, MPLS Tunnel = 150, SRP = 151, Voice Over ATM = 152, Voice Over Frame Relay = 153, IDSL = 154, Composite Link = 155, SS7 SIG Link = 156, Prop Wireless P2P = 157, FR Forward = 158, RFC1483 = 159, USB = 160, IEEE8023 AdLag = 161, BGP Policy Accounting = 162, FRF16 Mfr Bundle = 163, H323 Gatekeeper = 164, H323 Proxy = 165, MPLS = 166, MF SIG Link = 167, HDSL2 = 168, SHDSL = 169, DS1FDL = 170, POS = 171, DVBASI In = 172, DVBASI Out = 173, PLC = 174, NFAS = 175, TR008 = 176, GR303RDT = 177, GR303IDT = 178, ISUP = 179, Prop DOCS Wireless MACLayer = 180, Prop DOCS Wireless Downstream = 181, Prop DOCS Wireless Upstream = 182, HiperLAN2 = 183, Prop BWAP2MP = 184, SONET Overhead Channel = 185, Digital Wrapper Overhead Channel = 186, AAL2 = 187, Radio MAC = 188, ATM Radio = 189, IMT = 190, MVL = 191, Reach DSL = 192, FRDLCI End Point = 193, ATM VCI End Point = 194, Optical Channel = 195, Optical Transport = 196, Prop ATM = 197, Voice Over Cable = 198, InfiniBand = 199, TE Link = 200, Q2931 = 201, Virtual TG = 202, SIP TG = 203, SIP SIG = 204, DOCS Cable Upstream Channel = 205, ECONET = 206, PON155 = 207, PON622 = 208, Bridge = 209, Line Group = 210, Voice EMFGD = 211, Voice FGDEANA = 212, Voice DID = 213, MPEG Transport = 214, Six to Four = 215, GTP = 216, PDN Ether Loop1 = 217, PDN Ether Loop2 = 218, Optical Channel Group = 219, Home PNA = 220, GFP = 221, CISCO ISL VLAN = 222, Actelis Meta LOOP = 223, FCIP Link = 224, RPR = 225, QAM = 226, LMP = 227, CBL VectaStar = 228, DOCS Cable MCMTS Downstream = 229, ADSL2 = 230, MAC SecControlled IF = 231, MAC SecUncontrolled IF = 232, Avici Optical Ether = 233, ATM Bond = 234, Voice FGDOS = 235, MOCA Version1 = 236, IEEE80216 WMAN = 237, ADSL2 Plus = 238, DVBRCS MACLayer = 239, DVB TDM = 240, DVBRCSTDMA = 241, X86Laps = 242, WWANPP = 243, WWANPP2 = 244, Voice EBS = 245, ifPWType = 246, ILAN = 247, PIP = 248, ALUELP = 249, GPON = 250</summary>
	public System.Object Interfacesiftype {get { return GetParameter(607); }set { SetParameter(607, value); }}
	/// <summary>PID: 608  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesphysaddress_608 {get { return GetParameter(608); }set { SetParameter(608, value); }}
	/// <summary>PID: 608  | Type: read</summary>
	public System.Object Interfacesphysaddress {get { return GetParameter(608); }set { SetParameter(608, value); }}
	/// <summary>PID: 609  | Type: read | DISCREETS: Up = 1, Down = 2, Testing = 3</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesadminstatus_609 {get { return GetParameter(609); }set { SetParameter(609, value); }}
	/// <summary>PID: 609  | Type: read | DISCREETS: Up = 1, Down = 2, Testing = 3</summary>
	public System.Object Interfacesadminstatus {get { return GetParameter(609); }set { SetParameter(609, value); }}
	/// <summary>PID: 610  | Type: read | DISCREETS: Up = 1, Down = 2, Testing = 3</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesoperstatus_610 {get { return GetParameter(610); }set { SetParameter(610, value); }}
	/// <summary>PID: 610  | Type: read | DISCREETS: Up = 1, Down = 2, Testing = 3</summary>
	public System.Object Interfacesoperstatus {get { return GetParameter(610); }set { SetParameter(610, value); }}
	/// <summary>PID: 611  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesinrate_611 {get { return GetParameter(611); }set { SetParameter(611, value); }}
	/// <summary>PID: 611  | Type: read</summary>
	public System.Object Interfacesinrate {get { return GetParameter(611); }set { SetParameter(611, value); }}
	/// <summary>PID: 612  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesoutrate_612 {get { return GetParameter(612); }set { SetParameter(612, value); }}
	/// <summary>PID: 612  | Type: read</summary>
	public System.Object Interfacesoutrate {get { return GetParameter(612); }set { SetParameter(612, value); }}
	/// <summary>PID: 613  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacestotalrate_613 {get { return GetParameter(613); }set { SetParameter(613, value); }}
	/// <summary>PID: 613  | Type: read</summary>
	public System.Object Interfacestotalrate {get { return GetParameter(613); }set { SetParameter(613, value); }}
	/// <summary>PID: 614  | Type: read | DISCREETS: Up = 1, Down = 2, Admin Down = 3, Testing = 4 | EXCEPTIONS: Not Available = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesinterfacestatus_614 {get { return GetParameter(614); }set { SetParameter(614, value); }}
	/// <summary>PID: 614  | Type: read | DISCREETS: Up = 1, Down = 2, Admin Down = 3, Testing = 4 | EXCEPTIONS: Not Available = -1</summary>
	public System.Object Interfacesinterfacestatus {get { return GetParameter(614); }set { SetParameter(614, value); }}
	/// <summary>PID: 615  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesinterfacebandwidth_615 {get { return GetParameter(615); }set { SetParameter(615, value); }}
	/// <summary>PID: 615  | Type: read</summary>
	public System.Object Interfacesinterfacebandwidth {get { return GetParameter(615); }set { SetParameter(615, value); }}
	/// <summary>PID: 616  | Type: read | EXCEPTIONS: Not Available = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesrxutilization_616 {get { return GetParameter(616); }set { SetParameter(616, value); }}
	/// <summary>PID: 616  | Type: read | EXCEPTIONS: Not Available = -1</summary>
	public System.Object Interfacesrxutilization {get { return GetParameter(616); }set { SetParameter(616, value); }}
	/// <summary>PID: 617  | Type: read | EXCEPTIONS: Not Available = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacestxutilization_617 {get { return GetParameter(617); }set { SetParameter(617, value); }}
	/// <summary>PID: 617  | Type: read | EXCEPTIONS: Not Available = -1</summary>
	public System.Object Interfacestxutilization {get { return GetParameter(617); }set { SetParameter(617, value); }}
	/// <summary>PID: 620  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesifinoctets_620 {get { return GetParameter(620); }set { SetParameter(620, value); }}
	/// <summary>PID: 620  | Type: read</summary>
	public System.Object Interfacesifinoctets {get { return GetParameter(620); }set { SetParameter(620, value); }}
	/// <summary>PID: 621  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesifoutoctets_621 {get { return GetParameter(621); }set { SetParameter(621, value); }}
	/// <summary>PID: 621  | Type: read</summary>
	public System.Object Interfacesifoutoctets {get { return GetParameter(621); }set { SetParameter(621, value); }}
	/// <summary>PID: 622  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesifinoctetstime_622 {get { return GetParameter(622); }set { SetParameter(622, value); }}
	/// <summary>PID: 622  | Type: read</summary>
	public System.Object Interfacesifinoctetstime {get { return GetParameter(622); }set { SetParameter(622, value); }}
	/// <summary>PID: 623  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesifoutoctetstime_623 {get { return GetParameter(623); }set { SetParameter(623, value); }}
	/// <summary>PID: 623  | Type: read</summary>
	public System.Object Interfacesifoutoctetstime {get { return GetParameter(623); }set { SetParameter(623, value); }}
	/// <summary>PID: 624  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ifinoctetsprevious_624 {get { return GetParameter(624); }set { SetParameter(624, value); }}
	/// <summary>PID: 624  | Type: read</summary>
	public System.Object Ifinoctetsprevious {get { return GetParameter(624); }set { SetParameter(624, value); }}
	/// <summary>PID: 625  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ifoutoctetsprevious_625 {get { return GetParameter(625); }set { SetParameter(625, value); }}
	/// <summary>PID: 625  | Type: read</summary>
	public System.Object Ifoutoctetsprevious {get { return GetParameter(625); }set { SetParameter(625, value); }}
	/// <summary>PID: 626  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesifinucastpkts_626 {get { return GetParameter(626); }set { SetParameter(626, value); }}
	/// <summary>PID: 626  | Type: read</summary>
	public System.Object Interfacesifinucastpkts {get { return GetParameter(626); }set { SetParameter(626, value); }}
	/// <summary>PID: 627  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesifoutucastpkts_627 {get { return GetParameter(627); }set { SetParameter(627, value); }}
	/// <summary>PID: 627  | Type: read</summary>
	public System.Object Interfacesifoutucastpkts {get { return GetParameter(627); }set { SetParameter(627, value); }}
	/// <summary>PID: 642  | Type: read | EXCEPTIONS: Not Available = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesipaddress_642 {get { return GetParameter(642); }set { SetParameter(642, value); }}
	/// <summary>PID: 642  | Type: read | EXCEPTIONS: Not Available = -1</summary>
	public System.Object Interfacesipaddress {get { return GetParameter(642); }set { SetParameter(642, value); }}
	/// <summary>PID: 643  | Type: read | EXCEPTIONS: Not Available = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesipsubnet_643 {get { return GetParameter(643); }set { SetParameter(643, value); }}
	/// <summary>PID: 643  | Type: read | EXCEPTIONS: Not Available = -1</summary>
	public System.Object Interfacesipsubnet {get { return GetParameter(643); }set { SetParameter(643, value); }}
	/// <summary>PID: 644  | Type: read | EXCEPTIONS: Not Available = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesdefaultipgateway_644 {get { return GetParameter(644); }set { SetParameter(644, value); }}
	/// <summary>PID: 644  | Type: read | EXCEPTIONS: Not Available = -1</summary>
	public System.Object Interfacesdefaultipgateway {get { return GetParameter(644); }set { SetParameter(644, value); }}
	/// <summary>PID: 645  | Type: read | EXCEPTIONS: Not Available = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacestotalutilization_645 {get { return GetParameter(645); }set { SetParameter(645, value); }}
	/// <summary>PID: 645  | Type: read | EXCEPTIONS: Not Available = -1</summary>
	public System.Object Interfacestotalutilization {get { return GetParameter(645); }set { SetParameter(645, value); }}
	/// <summary>PID: 646  | Type: read | DISCREETS: 32 Bit = 1, 64 Bit = 2 | EXCEPTIONS: Not Available = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesifcountertype_646 {get { return GetParameter(646); }set { SetParameter(646, value); }}
	/// <summary>PID: 646  | Type: read | DISCREETS: 32 Bit = 1, 64 Bit = 2 | EXCEPTIONS: Not Available = -1</summary>
	public System.Object Interfacesifcountertype {get { return GetParameter(646); }set { SetParameter(646, value); }}
	/// <summary>PID: 655  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesinterfacebandwidth_655 {get { return GetParameter(655); }set { SetParameter(655, value); }}
	/// <summary>PID: 700  | Type: dummy</summary>
	public System.Object Iftrapreceiver_dummy {get { return GetParameter(700); }set { SetParameter(700, value); }}
	/// <summary>PID: 750  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mystatusstring_750 {get { return GetParameter(750); }set { SetParameter(750, value); }}
	/// <summary>PID: 750  | Type: read</summary>
	public System.Object Mystatusstring {get { return GetParameter(750); }set { SetParameter(750, value); }}
	/// <summary>PID: 751  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mystatusinteger_751 {get { return GetParameter(751); }set { SetParameter(751, value); }}
	/// <summary>PID: 751  | Type: read</summary>
	public System.Object Mystatusinteger {get { return GetParameter(751); }set { SetParameter(751, value); }}
	/// <summary>PID: 752  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mystatusoid_752 {get { return GetParameter(752); }set { SetParameter(752, value); }}
	/// <summary>PID: 752  | Type: read</summary>
	public System.Object Mystatusoid {get { return GetParameter(752); }set { SetParameter(752, value); }}
	/// <summary>PID: 753  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mystatustimeticks_753 {get { return GetParameter(753); }set { SetParameter(753, value); }}
	/// <summary>PID: 753  | Type: read</summary>
	public System.Object Mystatustimeticks {get { return GetParameter(753); }set { SetParameter(753, value); }}
	/// <summary>PID: 754  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mystatusipaddress_754 {get { return GetParameter(754); }set { SetParameter(754, value); }}
	/// <summary>PID: 754  | Type: read</summary>
	public System.Object Mystatusipaddress {get { return GetParameter(754); }set { SetParameter(754, value); }}
	/// <summary>PID: 755  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mystatuscounter_755 {get { return GetParameter(755); }set { SetParameter(755, value); }}
	/// <summary>PID: 755  | Type: read</summary>
	public System.Object Mystatuscounter {get { return GetParameter(755); }set { SetParameter(755, value); }}
	/// <summary>PID: 756  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mystatusgauge_756 {get { return GetParameter(756); }set { SetParameter(756, value); }}
	/// <summary>PID: 756  | Type: read</summary>
	public System.Object Mystatusgauge {get { return GetParameter(756); }set { SetParameter(756, value); }}
	/// <summary>PID: 757  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mystatussettableinteger_757 {get { return GetParameter(757); }set { SetParameter(757, value); }}
	/// <summary>PID: 757  | Type: read</summary>
	public System.Object Mystatussettableinteger {get { return GetParameter(757); }set { SetParameter(757, value); }}
	/// <summary>PID: 767  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mystatussettableinteger_767 {get { return GetParameter(767); }set { SetParameter(767, value); }}
	/// <summary>PID: 801  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Indexinterfacetableconfig_801 {get { return GetParameter(801); }set { SetParameter(801, value); }}
	/// <summary>PID: 801  | Type: read</summary>
	public System.Object Indexinterfacetableconfig {get { return GetParameter(801); }set { SetParameter(801, value); }}
	/// <summary>PID: 802  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Descriptioninterfacetableconfig_802 {get { return GetParameter(802); }set { SetParameter(802, value); }}
	/// <summary>PID: 802  | Type: read</summary>
	public System.Object Descriptioninterfacetableconfig {get { return GetParameter(802); }set { SetParameter(802, value); }}
	/// <summary>PID: 803  | Type: read | DISCREETS: Other = 1, Regular 1822 = 2, HDH 1822 = 3, DDN-X25 = 4, RFC877-X25 = 5, Ethernet-CSMACD = 6, ISO88023-CSMACD = 7, ISO88024-Token Bus = 8, ISO88025-Token Ring = 9, ISO88026-MAN = 10, Star LAN = 11, Proteon-10Mbit = 12, Proteon-80Mbit = 13, HYPER Channel = 14, FDDI = 15, LAPB = 16, SDLC = 17, DS1 = 18, E1 = 19, Basic ISDN = 20, Primary ISDN = 21, Prop Point to Point Serial = 22, PPP = 23, Loopback = 24, EON = 25, Ethernet-3Mbit = 26, NSIP = 27, SLIP = 28, ULTRA = 29, DS3 = 30, SIP = 31, Frame-Relay = 32, RS232 = 33, PARA = 34, ARCNET = 35, ARCNETPlus = 36, ATM = 37, MIOX25 = 38, SONET = 39, X25PLE = 40, ISO88022LLC = 41, Local Talk = 42, SMDS DXI = 43, Frame Relay Service = 44, V35 = 45, HSSI = 46, HIPPI = 47, Modem = 48, AAL5 = 49, SONET Path = 50, SONET VT = 51, SMDS ICIP = 52, Prop Virtual = 53, Prop Multiplexer = 54, IEEE80212 = 55, Fiber Channel = 56, HIPPI Interface = 57, Frame Relay Interconnect = 58, AFlane8023 = 59, AFlane8025 = 60, CCT Emulation = 61, Fast Ether = 62, ISDN = 63, V11 = 64, V36 = 65, G703AT64K = 66, G703AT2MB = 67, QLLC = 68, Fast Ether FX = 69, Channel = 70, IEEE80211 = 71, IBM 370parChan = 72, ESCON = 73, DLSW = 74, ISDNS = 75, ISDNU = 76, LAPD = 77, IP Switch = 78, RSRB = 79, ATM Logical = 80, DS0 = 81, DS0 Bundle = 82, BSC = 83, Async = 84, CNR = 85, ISO88025DTR = 86, EPLRS = 87, ARAP = 88, Prop CNLS = 89, Host Pad = 90, TermPad = 91, Frame Relay MPI = 92, X213 = 93, ADSL = 94, RADSL = 95, SDSL = 96, VDSL = 97, ISO88025 CRFPInt = 98, Myrinet = 99, Voice EM = 100, Voice FXO = 101, Voice FXS = 102, Voice Encapsulation = 103, Voice Over IP = 104, ATM DXI = 105, ATM FUNI = 106, ATM IMA = 107, PPP Multilink Bundle = 108, IP Over CDLC = 109, IP Over Claw = 110, Stack to Stack = 111, Virtual IP Address = 112, MPC = 113, IP Over ATM = 114, ISO88025 Fiber = 115, TDLC = 116, Gigabit Ethernet = 117, HDLC = 118, LAPF = 119, V37 = 120, X25MLP = 121, X25 Hunt Group = 122, Transport HDLC = 123, Interleave = 124, Fast = 125, IP = 126, DOCS Cable MACLayer = 127, DOCS Cable Downstream = 128, DOCS Cable Upstream = 129, A12MPP Switch = 130, Tunnel = 131, COFFEE = 132, CES = 133, ATMSubInterface = 134, L2 VLAN = 135, L3IP VLAN = 136, L3IPX VLAN = 137, Digital Powerline = 138, MediaMail Over IP = 139, DTM = 140, DCN = 141, IP Forward = 142, mSDSL = 143, IEEE1394 = 144, if-GSN = 145, DVBRCC MACLayer = 146, DVBRCC Downstream = 147, DVBRCC Upstream = 148, ATM Virtual = 149, MPLS Tunnel = 150, SRP = 151, Voice Over ATM = 152, Voice Over Frame Relay = 153, IDSL = 154, Composite Link = 155, SS7 SIG Link = 156, Prop Wireless P2P = 157, FR Forward = 158, RFC1483 = 159, USB = 160, IEEE8023 AdLag = 161, BGP Policy Accounting = 162, FRF16 Mfr Bundle = 163, H323 Gatekeeper = 164, H323 Proxy = 165, MPLS = 166, MF SIG Link = 167, HDSL2 = 168, SHDSL = 169, DS1FDL = 170, POS = 171, DVBASI In = 172, DVBASI Out = 173, PLC = 174, NFAS = 175, TR008 = 176, GR303RDT = 177, GR303IDT = 178, ISUP = 179, Prop DOCS Wireless MACLayer = 180, Prop DOCS Wireless Downstream = 181, Prop DOCS Wireless Upstream = 182, HiperLAN2 = 183, Prop BWAP2MP = 184, SONET Overhead Channel = 185, Digital Wrapper Overhead Channel = 186, AAL2 = 187, Radio MAC = 188, ATM Radio = 189, IMT = 190, MVL = 191, Reach DSL = 192, FRDLCI End Point = 193, ATM VCI End Point = 194, Optical Channel = 195, Optical Transport = 196, Prop ATM = 197, Voice Over Cable = 198, InfiniBand = 199, TE Link = 200, Q2931 = 201, Virtual TG = 202, SIP TG = 203, SIP SIG = 204, DOCS Cable Upstream Channel = 205, ECONET = 206, PON155 = 207, PON622 = 208, Bridge = 209, Line Group = 210, Voice EMFGD = 211, Voice FGDEANA = 212, Voice DID = 213, MPEG Transport = 214, Six to Four = 215, GTP = 216, PDN Ether Loop1 = 217, PDN Ether Loop2 = 218, Optical Channel Group = 219, Home PNA = 220, GFP = 221, CISCO ISL VLAN = 222, Actelis Meta LOOP = 223, FCIP Link = 224, RPR = 225, QAM = 226, LMP = 227, CBL VectaStar = 228, DOCS Cable MCMTS Downstream = 229, ADSL2 = 230, MAC SecControlled IF = 231, MAC SecUncontrolled IF = 232, Avici Optical Ether = 233, ATM Bond = 234, Voice FGDOS = 235, MOCA Version1 = 236, IEEE80216 WMAN = 237, ADSL2 Plus = 238, DVBRCS MACLayer = 239, DVB TDM = 240, DVBRCSTDMA = 241, X86Laps = 242, WWANPP = 243, WWANPP2 = 244, Voice EBS = 245, ifPWType = 246, ILAN = 247, PIP = 248, ALUELP = 249, GPON = 250</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ififtype_803 {get { return GetParameter(803); }set { SetParameter(803, value); }}
	/// <summary>PID: 803  | Type: read | DISCREETS: Other = 1, Regular 1822 = 2, HDH 1822 = 3, DDN-X25 = 4, RFC877-X25 = 5, Ethernet-CSMACD = 6, ISO88023-CSMACD = 7, ISO88024-Token Bus = 8, ISO88025-Token Ring = 9, ISO88026-MAN = 10, Star LAN = 11, Proteon-10Mbit = 12, Proteon-80Mbit = 13, HYPER Channel = 14, FDDI = 15, LAPB = 16, SDLC = 17, DS1 = 18, E1 = 19, Basic ISDN = 20, Primary ISDN = 21, Prop Point to Point Serial = 22, PPP = 23, Loopback = 24, EON = 25, Ethernet-3Mbit = 26, NSIP = 27, SLIP = 28, ULTRA = 29, DS3 = 30, SIP = 31, Frame-Relay = 32, RS232 = 33, PARA = 34, ARCNET = 35, ARCNETPlus = 36, ATM = 37, MIOX25 = 38, SONET = 39, X25PLE = 40, ISO88022LLC = 41, Local Talk = 42, SMDS DXI = 43, Frame Relay Service = 44, V35 = 45, HSSI = 46, HIPPI = 47, Modem = 48, AAL5 = 49, SONET Path = 50, SONET VT = 51, SMDS ICIP = 52, Prop Virtual = 53, Prop Multiplexer = 54, IEEE80212 = 55, Fiber Channel = 56, HIPPI Interface = 57, Frame Relay Interconnect = 58, AFlane8023 = 59, AFlane8025 = 60, CCT Emulation = 61, Fast Ether = 62, ISDN = 63, V11 = 64, V36 = 65, G703AT64K = 66, G703AT2MB = 67, QLLC = 68, Fast Ether FX = 69, Channel = 70, IEEE80211 = 71, IBM 370parChan = 72, ESCON = 73, DLSW = 74, ISDNS = 75, ISDNU = 76, LAPD = 77, IP Switch = 78, RSRB = 79, ATM Logical = 80, DS0 = 81, DS0 Bundle = 82, BSC = 83, Async = 84, CNR = 85, ISO88025DTR = 86, EPLRS = 87, ARAP = 88, Prop CNLS = 89, Host Pad = 90, TermPad = 91, Frame Relay MPI = 92, X213 = 93, ADSL = 94, RADSL = 95, SDSL = 96, VDSL = 97, ISO88025 CRFPInt = 98, Myrinet = 99, Voice EM = 100, Voice FXO = 101, Voice FXS = 102, Voice Encapsulation = 103, Voice Over IP = 104, ATM DXI = 105, ATM FUNI = 106, ATM IMA = 107, PPP Multilink Bundle = 108, IP Over CDLC = 109, IP Over Claw = 110, Stack to Stack = 111, Virtual IP Address = 112, MPC = 113, IP Over ATM = 114, ISO88025 Fiber = 115, TDLC = 116, Gigabit Ethernet = 117, HDLC = 118, LAPF = 119, V37 = 120, X25MLP = 121, X25 Hunt Group = 122, Transport HDLC = 123, Interleave = 124, Fast = 125, IP = 126, DOCS Cable MACLayer = 127, DOCS Cable Downstream = 128, DOCS Cable Upstream = 129, A12MPP Switch = 130, Tunnel = 131, COFFEE = 132, CES = 133, ATMSubInterface = 134, L2 VLAN = 135, L3IP VLAN = 136, L3IPX VLAN = 137, Digital Powerline = 138, MediaMail Over IP = 139, DTM = 140, DCN = 141, IP Forward = 142, mSDSL = 143, IEEE1394 = 144, if-GSN = 145, DVBRCC MACLayer = 146, DVBRCC Downstream = 147, DVBRCC Upstream = 148, ATM Virtual = 149, MPLS Tunnel = 150, SRP = 151, Voice Over ATM = 152, Voice Over Frame Relay = 153, IDSL = 154, Composite Link = 155, SS7 SIG Link = 156, Prop Wireless P2P = 157, FR Forward = 158, RFC1483 = 159, USB = 160, IEEE8023 AdLag = 161, BGP Policy Accounting = 162, FRF16 Mfr Bundle = 163, H323 Gatekeeper = 164, H323 Proxy = 165, MPLS = 166, MF SIG Link = 167, HDSL2 = 168, SHDSL = 169, DS1FDL = 170, POS = 171, DVBASI In = 172, DVBASI Out = 173, PLC = 174, NFAS = 175, TR008 = 176, GR303RDT = 177, GR303IDT = 178, ISUP = 179, Prop DOCS Wireless MACLayer = 180, Prop DOCS Wireless Downstream = 181, Prop DOCS Wireless Upstream = 182, HiperLAN2 = 183, Prop BWAP2MP = 184, SONET Overhead Channel = 185, Digital Wrapper Overhead Channel = 186, AAL2 = 187, Radio MAC = 188, ATM Radio = 189, IMT = 190, MVL = 191, Reach DSL = 192, FRDLCI End Point = 193, ATM VCI End Point = 194, Optical Channel = 195, Optical Transport = 196, Prop ATM = 197, Voice Over Cable = 198, InfiniBand = 199, TE Link = 200, Q2931 = 201, Virtual TG = 202, SIP TG = 203, SIP SIG = 204, DOCS Cable Upstream Channel = 205, ECONET = 206, PON155 = 207, PON622 = 208, Bridge = 209, Line Group = 210, Voice EMFGD = 211, Voice FGDEANA = 212, Voice DID = 213, MPEG Transport = 214, Six to Four = 215, GTP = 216, PDN Ether Loop1 = 217, PDN Ether Loop2 = 218, Optical Channel Group = 219, Home PNA = 220, GFP = 221, CISCO ISL VLAN = 222, Actelis Meta LOOP = 223, FCIP Link = 224, RPR = 225, QAM = 226, LMP = 227, CBL VectaStar = 228, DOCS Cable MCMTS Downstream = 229, ADSL2 = 230, MAC SecControlled IF = 231, MAC SecUncontrolled IF = 232, Avici Optical Ether = 233, ATM Bond = 234, Voice FGDOS = 235, MOCA Version1 = 236, IEEE80216 WMAN = 237, ADSL2 Plus = 238, DVBRCS MACLayer = 239, DVB TDM = 240, DVBRCSTDMA = 241, X86Laps = 242, WWANPP = 243, WWANPP2 = 244, Voice EBS = 245, ifPWType = 246, ILAN = 247, PIP = 248, ALUELP = 249, GPON = 250</summary>
	public System.Object Ififtype {get { return GetParameter(803); }set { SetParameter(803, value); }}
	/// <summary>PID: 805  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ifinterfacebandwidth_805 {get { return GetParameter(805); }set { SetParameter(805, value); }}
	/// <summary>PID: 805  | Type: read</summary>
	public System.Object Ifinterfacebandwidth {get { return GetParameter(805); }set { SetParameter(805, value); }}
	/// <summary>PID: 806  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ifphysaddress_806 {get { return GetParameter(806); }set { SetParameter(806, value); }}
	/// <summary>PID: 806  | Type: read</summary>
	public System.Object Ifphysaddress {get { return GetParameter(806); }set { SetParameter(806, value); }}
	/// <summary>PID: 807  | Type: read | DISCREETS: Up = 1, Down = 2, Testing = 3</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ifadminstatus_807 {get { return GetParameter(807); }set { SetParameter(807, value); }}
	/// <summary>PID: 807  | Type: read | DISCREETS: Up = 1, Down = 2, Testing = 3</summary>
	public System.Object Ifadminstatus {get { return GetParameter(807); }set { SetParameter(807, value); }}
	/// <summary>PID: 808  | Type: read | DISCREETS: Up = 1, Down = 2, Testing = 3</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Operationalstatusinterfacetableconfig_808 {get { return GetParameter(808); }set { SetParameter(808, value); }}
	/// <summary>PID: 808  | Type: read | DISCREETS: Up = 1, Down = 2, Testing = 3</summary>
	public System.Object Operationalstatusinterfacetableconfig {get { return GetParameter(808); }set { SetParameter(808, value); }}
	/// <summary>PID: 810  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ififinoctets_810 {get { return GetParameter(810); }set { SetParameter(810, value); }}
	/// <summary>PID: 810  | Type: read</summary>
	public System.Object Ififinoctets {get { return GetParameter(810); }set { SetParameter(810, value); }}
	/// <summary>PID: 811  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ififinucastpkts_811 {get { return GetParameter(811); }set { SetParameter(811, value); }}
	/// <summary>PID: 811  | Type: read</summary>
	public System.Object Ififinucastpkts {get { return GetParameter(811); }set { SetParameter(811, value); }}
	/// <summary>PID: 816  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ififoutoctets_816 {get { return GetParameter(816); }set { SetParameter(816, value); }}
	/// <summary>PID: 816  | Type: read</summary>
	public System.Object Ififoutoctets {get { return GetParameter(816); }set { SetParameter(816, value); }}
	/// <summary>PID: 817  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ififoutucastpkts_817 {get { return GetParameter(817); }set { SetParameter(817, value); }}
	/// <summary>PID: 817  | Type: read</summary>
	public System.Object Ififoutucastpkts {get { return GetParameter(817); }set { SetParameter(817, value); }}
	/// <summary>PID: 818  | Type: read | DISCREETS: Enabled = 1, Disabled = 2</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Monitorinterfacetableconfig_818 {get { return GetParameter(818); }set { SetParameter(818, value); }}
	/// <summary>PID: 818  | Type: read | DISCREETS: Enabled = 1, Disabled = 2</summary>
	public System.Object Monitorinterfacetableconfig {get { return GetParameter(818); }set { SetParameter(818, value); }}
	/// <summary>PID: 828  | Type: write | DISCREETS: Enable = 1, Disable = 2</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Monitorinterfacetableconfig_828 {get { return GetParameter(828); }set { SetParameter(828, value); }}
	/// <summary>PID: 901  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ifinstance_901 {get { return GetParameter(901); }set { SetParameter(901, value); }}
	/// <summary>PID: 901  | Type: read</summary>
	public System.Object Ifinstance {get { return GetParameter(901); }set { SetParameter(901, value); }}
	/// <summary>PID: 902  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ifname_902 {get { return GetParameter(902); }set { SetParameter(902, value); }}
	/// <summary>PID: 902  | Type: read</summary>
	public System.Object Ifname {get { return GetParameter(902); }set { SetParameter(902, value); }}
	/// <summary>PID: 903  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ifinmulticastpkts_903 {get { return GetParameter(903); }set { SetParameter(903, value); }}
	/// <summary>PID: 903  | Type: read</summary>
	public System.Object Ifinmulticastpkts {get { return GetParameter(903); }set { SetParameter(903, value); }}
	/// <summary>PID: 904  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ifinbroadcastpkts_904 {get { return GetParameter(904); }set { SetParameter(904, value); }}
	/// <summary>PID: 904  | Type: read</summary>
	public System.Object Ifinbroadcastpkts {get { return GetParameter(904); }set { SetParameter(904, value); }}
	/// <summary>PID: 905  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ifoutmulticastpkts_905 {get { return GetParameter(905); }set { SetParameter(905, value); }}
	/// <summary>PID: 905  | Type: read</summary>
	public System.Object Ifoutmulticastpkts {get { return GetParameter(905); }set { SetParameter(905, value); }}
	/// <summary>PID: 906  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ifoutbroadcastpkts_906 {get { return GetParameter(906); }set { SetParameter(906, value); }}
	/// <summary>PID: 906  | Type: read</summary>
	public System.Object Ifoutbroadcastpkts {get { return GetParameter(906); }set { SetParameter(906, value); }}
	/// <summary>PID: 907  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ifhcinoctets_907 {get { return GetParameter(907); }set { SetParameter(907, value); }}
	/// <summary>PID: 907  | Type: read</summary>
	public System.Object Ifhcinoctets {get { return GetParameter(907); }set { SetParameter(907, value); }}
	/// <summary>PID: 908  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ifhcinucastpkts_908 {get { return GetParameter(908); }set { SetParameter(908, value); }}
	/// <summary>PID: 908  | Type: read</summary>
	public System.Object Ifhcinucastpkts {get { return GetParameter(908); }set { SetParameter(908, value); }}
	/// <summary>PID: 909  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ifhcinmulticastpkts_909 {get { return GetParameter(909); }set { SetParameter(909, value); }}
	/// <summary>PID: 909  | Type: read</summary>
	public System.Object Ifhcinmulticastpkts {get { return GetParameter(909); }set { SetParameter(909, value); }}
	/// <summary>PID: 910  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ifhcinbroadcastpkts_910 {get { return GetParameter(910); }set { SetParameter(910, value); }}
	/// <summary>PID: 910  | Type: read</summary>
	public System.Object Ifhcinbroadcastpkts {get { return GetParameter(910); }set { SetParameter(910, value); }}
	/// <summary>PID: 911  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ifhcoutoctets_911 {get { return GetParameter(911); }set { SetParameter(911, value); }}
	/// <summary>PID: 911  | Type: read</summary>
	public System.Object Ifhcoutoctets {get { return GetParameter(911); }set { SetParameter(911, value); }}
	/// <summary>PID: 912  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ifhcoutucastpkts_912 {get { return GetParameter(912); }set { SetParameter(912, value); }}
	/// <summary>PID: 912  | Type: read</summary>
	public System.Object Ifhcoutucastpkts {get { return GetParameter(912); }set { SetParameter(912, value); }}
	/// <summary>PID: 913  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ifhcoutmulticastpkts_913 {get { return GetParameter(913); }set { SetParameter(913, value); }}
	/// <summary>PID: 913  | Type: read</summary>
	public System.Object Ifhcoutmulticastpkts {get { return GetParameter(913); }set { SetParameter(913, value); }}
	/// <summary>PID: 914  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ifhcoutbroadcastpkts_914 {get { return GetParameter(914); }set { SetParameter(914, value); }}
	/// <summary>PID: 914  | Type: read</summary>
	public System.Object Ifhcoutbroadcastpkts {get { return GetParameter(914); }set { SetParameter(914, value); }}
	/// <summary>PID: 916  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ifhighspeed_916 {get { return GetParameter(916); }set { SetParameter(916, value); }}
	/// <summary>PID: 916  | Type: read</summary>
	public System.Object Ifhighspeed {get { return GetParameter(916); }set { SetParameter(916, value); }}
	/// <summary>PID: 918  | Type: read | DISCREETS: Enabled = 1, Disabled = 2</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ifconnectorpresent_918 {get { return GetParameter(918); }set { SetParameter(918, value); }}
	/// <summary>PID: 918  | Type: read | DISCREETS: Enabled = 1, Disabled = 2</summary>
	public System.Object Ifconnectorpresent {get { return GetParameter(918); }set { SetParameter(918, value); }}
	/// <summary>PID: 920  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ifcounterdiscontinuitytime_920 {get { return GetParameter(920); }set { SetParameter(920, value); }}
	/// <summary>PID: 920  | Type: read</summary>
	public System.Object Ifcounterdiscontinuitytime {get { return GetParameter(920); }set { SetParameter(920, value); }}
	/// <summary>PID: 980  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ifxtablewriteinstance_980 {get { return GetParameter(980); }set { SetParameter(980, value); }}
	/// <summary>PID: 980  | Type: read</summary>
	public System.Object Ifxtablewriteinstance {get { return GetParameter(980); }set { SetParameter(980, value); }}
	/// <summary>PID: 999  | Type: write | DISCREETS: Memory... = More Memory, Disk IO... = Disk IO</summary>
	public System.Object Morememorybutton_999 {get { return GetParameter(999); }set { SetParameter(999, value); }}
	/// <summary>PID: 999  | Type: write | DISCREETS: Memory... = More Memory, Disk IO... = Disk IO</summary>
	public System.Object Morememorybutton {get { return Write.Morememorybutton; }set { Write.Morememorybutton = value; }}
	/// <summary>PID: 1000  | Type: read | EXCEPTIONS: Not Configured = 0</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Memtotalswap_1000 {get { return GetParameter(1000); }set { SetParameter(1000, value); }}
	/// <summary>PID: 1000  | Type: read | EXCEPTIONS: Not Configured = 0</summary>
	public System.Object Memtotalswap {get { return GetParameter(1000); }set { SetParameter(1000, value); }}
	/// <summary>PID: 1001  | Type: read | EXCEPTIONS: Not Configured = 0</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Memavailswap_1001 {get { return GetParameter(1001); }set { SetParameter(1001, value); }}
	/// <summary>PID: 1001  | Type: read | EXCEPTIONS: Not Configured = 0</summary>
	public System.Object Memavailswap {get { return GetParameter(1001); }set { SetParameter(1001, value); }}
	/// <summary>PID: 1002  | Type: read | EXCEPTIONS: Not Configured = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Memusageswap_1002 {get { return GetParameter(1002); }set { SetParameter(1002, value); }}
	/// <summary>PID: 1002  | Type: read | EXCEPTIONS: Not Configured = -1</summary>
	public System.Object Memusageswap {get { return GetParameter(1002); }set { SetParameter(1002, value); }}
	/// <summary>PID: 1003  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Memtotalreal_1003 {get { return GetParameter(1003); }set { SetParameter(1003, value); }}
	/// <summary>PID: 1003  | Type: read</summary>
	public System.Object Memtotalreal {get { return GetParameter(1003); }set { SetParameter(1003, value); }}
	/// <summary>PID: 1004  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Memavailreal_1004 {get { return GetParameter(1004); }set { SetParameter(1004, value); }}
	/// <summary>PID: 1004  | Type: read</summary>
	public System.Object Memavailreal {get { return GetParameter(1004); }set { SetParameter(1004, value); }}
	/// <summary>PID: 1005  | Type: read | EXCEPTIONS: Not Available = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Memusagereal_1005 {get { return GetParameter(1005); }set { SetParameter(1005, value); }}
	/// <summary>PID: 1005  | Type: read | EXCEPTIONS: Not Available = -1</summary>
	public System.Object Memusagereal {get { return GetParameter(1005); }set { SetParameter(1005, value); }}
	/// <summary>PID: 1006  | Type: read | EXCEPTIONS: Not Available = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Memusedreal_1006 {get { return GetParameter(1006); }set { SetParameter(1006, value); }}
	/// <summary>PID: 1006  | Type: read | EXCEPTIONS: Not Available = -1</summary>
	public System.Object Memusedreal {get { return GetParameter(1006); }set { SetParameter(1006, value); }}
	/// <summary>PID: 1007  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Membuffer_1007 {get { return GetParameter(1007); }set { SetParameter(1007, value); }}
	/// <summary>PID: 1007  | Type: read</summary>
	public System.Object Membuffer {get { return GetParameter(1007); }set { SetParameter(1007, value); }}
	/// <summary>PID: 1008  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Memcached_1008 {get { return GetParameter(1008); }set { SetParameter(1008, value); }}
	/// <summary>PID: 1008  | Type: read</summary>
	public System.Object Memcached {get { return GetParameter(1008); }set { SetParameter(1008, value); }}
	/// <summary>PID: 1009  | Type: read | EXCEPTIONS: Not Available = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Availablephysicalmemory_1009 {get { return GetParameter(1009); }set { SetParameter(1009, value); }}
	/// <summary>PID: 1009  | Type: read | EXCEPTIONS: Not Available = -1</summary>
	public System.Object Availablephysicalmemory {get { return GetParameter(1009); }set { SetParameter(1009, value); }}
	/// <summary>PID: 1010  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Qa1010_1010 {get { return GetParameter(1010); }set { SetParameter(1010, value); }}
	/// <summary>PID: 1010  | Type: read</summary>
	public System.Object Qa1010 {get { return GetParameter(1010); }set { SetParameter(1010, value); }}
	/// <summary>PID: 1011  | Type: read | EXCEPTIONS: Not Available = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Memoryusage_1011 {get { return GetParameter(1011); }set { SetParameter(1011, value); }}
	/// <summary>PID: 1011  | Type: read | EXCEPTIONS: Not Available = -1</summary>
	public System.Object Memoryusage {get { return GetParameter(1011); }set { SetParameter(1011, value); }}
	/// <summary>PID: 1012  | Type: read | EXCEPTIONS: Not Available = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Percentagememoryusage_1012 {get { return GetParameter(1012); }set { SetParameter(1012, value); }}
	/// <summary>PID: 1012  | Type: read | EXCEPTIONS: Not Available = -1</summary>
	public System.Object Percentagememoryusage {get { return GetParameter(1012); }set { SetParameter(1012, value); }}
	/// <summary>PID: 1019  | Type: write | DISCREETS: More... = Linux Monitored Processes, Process Validation... = Process Validation</summary>
	public System.Object Moreprocessbutton_1019 {get { return GetParameter(1019); }set { SetParameter(1019, value); }}
	/// <summary>PID: 1019  | Type: write | DISCREETS: More... = Linux Monitored Processes, Process Validation... = Process Validation</summary>
	public System.Object Moreprocessbutton {get { return Write.Moreprocessbutton; }set { Write.Moreprocessbutton = value; }}
	/// <summary>PID: 1024  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Linuxmonitoredprocesseslistprocess_index_1024 {get { return GetParameter(1024); }set { SetParameter(1024, value); }}
	/// <summary>PID: 1024  | Type: read</summary>
	public System.Object Linuxmonitoredprocesseslistprocess_index {get { return GetParameter(1024); }set { SetParameter(1024, value); }}
	/// <summary>PID: 1025  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Linuxmonitoredprocesseslistprocess_id_1025 {get { return GetParameter(1025); }set { SetParameter(1025, value); }}
	/// <summary>PID: 1025  | Type: read</summary>
	public System.Object Linuxmonitoredprocesseslistprocess_id {get { return GetParameter(1025); }set { SetParameter(1025, value); }}
	/// <summary>PID: 1026  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Linuxmonitoredprocesseslistprocess_name_1026 {get { return GetParameter(1026); }set { SetParameter(1026, value); }}
	/// <summary>PID: 1026  | Type: read</summary>
	public System.Object Linuxmonitoredprocesseslistprocess_name {get { return GetParameter(1026); }set { SetParameter(1026, value); }}
	/// <summary>PID: 1027  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Linuxmonitoredprocesseslistprocess_minimum_1027 {get { return GetParameter(1027); }set { SetParameter(1027, value); }}
	/// <summary>PID: 1027  | Type: read</summary>
	public System.Object Linuxmonitoredprocesseslistprocess_minimum {get { return GetParameter(1027); }set { SetParameter(1027, value); }}
	/// <summary>PID: 1028  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Linuxmonitoredprocesseslistprocess_maximum_1028 {get { return GetParameter(1028); }set { SetParameter(1028, value); }}
	/// <summary>PID: 1028  | Type: read</summary>
	public System.Object Linuxmonitoredprocesseslistprocess_maximum {get { return GetParameter(1028); }set { SetParameter(1028, value); }}
	/// <summary>PID: 1029  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Linuxmonitoredprocesseslistprocess_current_1029 {get { return GetParameter(1029); }set { SetParameter(1029, value); }}
	/// <summary>PID: 1029  | Type: read</summary>
	public System.Object Linuxmonitoredprocesseslistprocess_current {get { return GetParameter(1029); }set { SetParameter(1029, value); }}
	/// <summary>PID: 1030  | Type: read | DISCREETS: No Error = 0, Error = 1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Linuxmonitoredprocesseslistprocess_status_1030 {get { return GetParameter(1030); }set { SetParameter(1030, value); }}
	/// <summary>PID: 1030  | Type: read | DISCREETS: No Error = 0, Error = 1</summary>
	public System.Object Linuxmonitoredprocesseslistprocess_status {get { return GetParameter(1030); }set { SetParameter(1030, value); }}
	/// <summary>PID: 1031  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Linuxmonitoredprocesseslistprocess_errormessage_1031 {get { return GetParameter(1031); }set { SetParameter(1031, value); }}
	/// <summary>PID: 1031  | Type: read</summary>
	public System.Object Linuxmonitoredprocesseslistprocess_errormessage {get { return GetParameter(1031); }set { SetParameter(1031, value); }}
	/// <summary>PID: 1032  | Type: read | DISCREETS: Not Active = 0, Active = 1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Linuxmonitoredprocesseslistprocess_script_1032 {get { return GetParameter(1032); }set { SetParameter(1032, value); }}
	/// <summary>PID: 1032  | Type: read | DISCREETS: Not Active = 0, Active = 1</summary>
	public System.Object Linuxmonitoredprocesseslistprocess_script {get { return GetParameter(1032); }set { SetParameter(1032, value); }}
	/// <summary>PID: 1033  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Linuxmonitoredprocesseslistprocess_command_1033 {get { return GetParameter(1033); }set { SetParameter(1033, value); }}
	/// <summary>PID: 1033  | Type: read</summary>
	public System.Object Linuxmonitoredprocesseslistprocess_command {get { return GetParameter(1033); }set { SetParameter(1033, value); }}
	/// <summary>PID: 1041  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mountavailabilitymountname_1041 {get { return GetParameter(1041); }set { SetParameter(1041, value); }}
	/// <summary>PID: 1041  | Type: read</summary>
	public System.Object Mountavailabilitymountname {get { return GetParameter(1041); }set { SetParameter(1041, value); }}
	/// <summary>PID: 1042  | Type: read | DISCREETS: Not Present = 0, Present = 1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mountavailabilityavailability_1042 {get { return GetParameter(1042); }set { SetParameter(1042, value); }}
	/// <summary>PID: 1042  | Type: read | DISCREETS: Not Present = 0, Present = 1</summary>
	public System.Object Mountavailabilityavailability {get { return GetParameter(1042); }set { SetParameter(1042, value); }}
	/// <summary>PID: 1048  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mountname_1048 {get { return GetParameter(1048); }set { SetParameter(1048, value); }}
	/// <summary>PID: 1048  | Type: read</summary>
	public System.Object Mountname {get { return GetParameter(1048); }set { SetParameter(1048, value); }}
	/// <summary>PID: 1049  | Type: write | DISCREETS: Add Process = add, Remove Process = remove</summary>
	public System.Object Mountavailability_contextmenu_1049 {get { return GetParameter(1049); }set { SetParameter(1049, value); }}
	/// <summary>PID: 1049  | Type: write | DISCREETS: Add Process = add, Remove Process = remove</summary>
	public System.Object Mountavailability_contextmenu {get { return Write.Mountavailability_contextmenu; }set { Write.Mountavailability_contextmenu = value; }}
	/// <summary>PID: 1054  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Linuxmonitoreddisksidentifier_1054 {get { return GetParameter(1054); }set { SetParameter(1054, value); }}
	/// <summary>PID: 1054  | Type: read</summary>
	public System.Object Linuxmonitoreddisksidentifier {get { return GetParameter(1054); }set { SetParameter(1054, value); }}
	/// <summary>PID: 1056  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Linuxmonitoreddisksindex_1056 {get { return GetParameter(1056); }set { SetParameter(1056, value); }}
	/// <summary>PID: 1056  | Type: read</summary>
	public System.Object Linuxmonitoreddisksindex {get { return GetParameter(1056); }set { SetParameter(1056, value); }}
	/// <summary>PID: 1057  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Linuxmonitoreddisksmountpath_1057 {get { return GetParameter(1057); }set { SetParameter(1057, value); }}
	/// <summary>PID: 1057  | Type: read</summary>
	public System.Object Linuxmonitoreddisksmountpath {get { return GetParameter(1057); }set { SetParameter(1057, value); }}
	/// <summary>PID: 1058  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Linuxmonitoreddisksdevicepath_1058 {get { return GetParameter(1058); }set { SetParameter(1058, value); }}
	/// <summary>PID: 1058  | Type: read</summary>
	public System.Object Linuxmonitoreddisksdevicepath {get { return GetParameter(1058); }set { SetParameter(1058, value); }}
	/// <summary>PID: 1059  | Type: read | EXCEPTIONS: 0 = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Linuxmonitoreddisksminimum_1059 {get { return GetParameter(1059); }set { SetParameter(1059, value); }}
	/// <summary>PID: 1059  | Type: read | EXCEPTIONS: 0 = -1</summary>
	public System.Object Linuxmonitoreddisksminimum {get { return GetParameter(1059); }set { SetParameter(1059, value); }}
	/// <summary>PID: 1060  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Linuxmonitoreddiskspercentagediskminimum_1060 {get { return GetParameter(1060); }set { SetParameter(1060, value); }}
	/// <summary>PID: 1060  | Type: read</summary>
	public System.Object Linuxmonitoreddiskspercentagediskminimum {get { return GetParameter(1060); }set { SetParameter(1060, value); }}
	/// <summary>PID: 1061  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Linuxmonitoreddiskstotalsize_1061 {get { return GetParameter(1061); }set { SetParameter(1061, value); }}
	/// <summary>PID: 1061  | Type: read</summary>
	public System.Object Linuxmonitoreddiskstotalsize {get { return GetParameter(1061); }set { SetParameter(1061, value); }}
	/// <summary>PID: 1062  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Linuxmonitoreddisksavailablespace_1062 {get { return GetParameter(1062); }set { SetParameter(1062, value); }}
	/// <summary>PID: 1062  | Type: read</summary>
	public System.Object Linuxmonitoreddisksavailablespace {get { return GetParameter(1062); }set { SetParameter(1062, value); }}
	/// <summary>PID: 1064  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Linuxmonitoreddisksusedspace_1064 {get { return GetParameter(1064); }set { SetParameter(1064, value); }}
	/// <summary>PID: 1064  | Type: read</summary>
	public System.Object Linuxmonitoreddisksusedspace {get { return GetParameter(1064); }set { SetParameter(1064, value); }}
	/// <summary>PID: 1065  | Type: read | DISCREETS: Normal = 0, Low Space = 1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Linuxmonitoreddisksstatus_1065 {get { return GetParameter(1065); }set { SetParameter(1065, value); }}
	/// <summary>PID: 1065  | Type: read | DISCREETS: Normal = 0, Low Space = 1</summary>
	public System.Object Linuxmonitoreddisksstatus {get { return GetParameter(1065); }set { SetParameter(1065, value); }}
	/// <summary>PID: 1066  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Linuxmonitoreddiskswarning_1066 {get { return GetParameter(1066); }set { SetParameter(1066, value); }}
	/// <summary>PID: 1066  | Type: read</summary>
	public System.Object Linuxmonitoreddiskswarning {get { return GetParameter(1066); }set { SetParameter(1066, value); }}
	/// <summary>PID: 1067  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Linuxmonitoreddisksusedspaceabsolute_1067 {get { return GetParameter(1067); }set { SetParameter(1067, value); }}
	/// <summary>PID: 1067  | Type: read</summary>
	public System.Object Linuxmonitoreddisksusedspaceabsolute {get { return GetParameter(1067); }set { SetParameter(1067, value); }}
	/// <summary>PID: 1080  | Type: read | DISCREETS: Enabled = 1, Disabled = 0</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollingstatelinuxmonitoreddisks_1080 {get { return GetParameter(1080); }set { SetParameter(1080, value); }}
	/// <summary>PID: 1080  | Type: read | DISCREETS: Enabled = 1, Disabled = 0</summary>
	public System.Object Pollingstatelinuxmonitoreddisks {get { return GetParameter(1080); }set { SetParameter(1080, value); }}
	/// <summary>PID: 1081  | Type: write | DISCREETS: Enabled = 1, Disabled = 0</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollingstatelinuxmonitoreddisks_1081 {get { return GetParameter(1081); }set { SetParameter(1081, value); }}
	/// <summary>PID: 1098  | Type: write | DISCREETS: Processor... = Processor, Raw CPU... = Raw CPU, Ext Commands... = Ext Commands</summary>
	public System.Object Generalbutton2_1098 {get { return GetParameter(1098); }set { SetParameter(1098, value); }}
	/// <summary>PID: 1098  | Type: write | DISCREETS: Processor... = Processor, Raw CPU... = Raw CPU, Ext Commands... = Ext Commands</summary>
	public System.Object Generalbutton2 {get { return Write.Generalbutton2; }set { Write.Generalbutton2 = value; }}
	/// <summary>PID: 1099  | Type: write | DISCREETS: Load... = Load</summary>
	public System.Object Generalbutton_1099 {get { return GetParameter(1099); }set { SetParameter(1099, value); }}
	/// <summary>PID: 1099  | Type: write | DISCREETS: Load... = Load</summary>
	public System.Object Generalbutton {get { return Write.Generalbutton; }set { Write.Generalbutton = value; }}
	/// <summary>PID: 1105  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Loadaverageinformationindex_1105 {get { return GetParameter(1105); }set { SetParameter(1105, value); }}
	/// <summary>PID: 1105  | Type: read</summary>
	public System.Object Loadaverageinformationindex {get { return GetParameter(1105); }set { SetParameter(1105, value); }}
	/// <summary>PID: 1106  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Loadaverageinformationname_1106 {get { return GetParameter(1106); }set { SetParameter(1106, value); }}
	/// <summary>PID: 1106  | Type: read</summary>
	public System.Object Loadaverageinformationname {get { return GetParameter(1106); }set { SetParameter(1106, value); }}
	/// <summary>PID: 1107  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Loadaverageinformationvalue_1107 {get { return GetParameter(1107); }set { SetParameter(1107, value); }}
	/// <summary>PID: 1107  | Type: read</summary>
	public System.Object Loadaverageinformationvalue {get { return GetParameter(1107); }set { SetParameter(1107, value); }}
	/// <summary>PID: 1200  | Type: write | DISCREETS: Clear Task Manager = Clear Task Manager, Normalize Alarms = Normalize Alarms</summary>
	public System.Object Clearnormalizetm_1200 {get { return GetParameter(1200); }set { SetParameter(1200, value); }}
	/// <summary>PID: 1200  | Type: write | DISCREETS: Clear Task Manager = Clear Task Manager, Normalize Alarms = Normalize Alarms</summary>
	public System.Object Clearnormalizetm {get { return Write.Clearnormalizetm; }set { Write.Clearnormalizetm = value; }}
	/// <summary>PID: 1201  | Type: write | DISCREETS: Nominal Values... = Normalize Task Manager, Process Counters... = Process Counters</summary>
	public System.Object Normalizetm_1201 {get { return GetParameter(1201); }set { SetParameter(1201, value); }}
	/// <summary>PID: 1201  | Type: write | DISCREETS: Nominal Values... = Normalize Task Manager, Process Counters... = Process Counters</summary>
	public System.Object Normalizetm {get { return Write.Normalizetm; }set { Write.Normalizetm = value; }}
	/// <summary>PID: 1202  | Type: write | DISCREETS: Mount Availability... = Mount Availability</summary>
	public System.Object Morediskspagebuttons_1202 {get { return GetParameter(1202); }set { SetParameter(1202, value); }}
	/// <summary>PID: 1202  | Type: write | DISCREETS: Mount Availability... = Mount Availability</summary>
	public System.Object Morediskspagebuttons {get { return Write.Morediskspagebuttons; }set { Write.Morediskspagebuttons = value; }}
	/// <summary>PID: 1221  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Processorinstance_1221 {get { return GetParameter(1221); }set { SetParameter(1221, value); }}
	/// <summary>PID: 1221  | Type: read</summary>
	public System.Object Processorinstance {get { return GetParameter(1221); }set { SetParameter(1221, value); }}
	/// <summary>PID: 1222  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Processorfrwid_1222 {get { return GetParameter(1222); }set { SetParameter(1222, value); }}
	/// <summary>PID: 1222  | Type: read</summary>
	public System.Object Processorfrwid {get { return GetParameter(1222); }set { SetParameter(1222, value); }}
	/// <summary>PID: 1223  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Processorload_1223 {get { return GetParameter(1223); }set { SetParameter(1223, value); }}
	/// <summary>PID: 1223  | Type: read</summary>
	public System.Object Processorload {get { return GetParameter(1223); }set { SetParameter(1223, value); }}
	/// <summary>PID: 1224  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Processordevicedescr_1224 {get { return GetParameter(1224); }set { SetParameter(1224, value); }}
	/// <summary>PID: 1224  | Type: read</summary>
	public System.Object Processordevicedescr {get { return GetParameter(1224); }set { SetParameter(1224, value); }}
	/// <summary>PID: 1225  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Processorindex_1225 {get { return GetParameter(1225); }set { SetParameter(1225, value); }}
	/// <summary>PID: 1225  | Type: read</summary>
	public System.Object Processorindex {get { return GetParameter(1225); }set { SetParameter(1225, value); }}
	/// <summary>PID: 1301  | Type: read | EXCEPTIONS: Not Available = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpurawuser_1301 {get { return GetParameter(1301); }set { SetParameter(1301, value); }}
	/// <summary>PID: 1301  | Type: read | EXCEPTIONS: Not Available = -1</summary>
	public System.Object Cpurawuser {get { return GetParameter(1301); }set { SetParameter(1301, value); }}
	/// <summary>PID: 1302  | Type: read | EXCEPTIONS: Not Available = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpurawnice_1302 {get { return GetParameter(1302); }set { SetParameter(1302, value); }}
	/// <summary>PID: 1302  | Type: read | EXCEPTIONS: Not Available = -1</summary>
	public System.Object Cpurawnice {get { return GetParameter(1302); }set { SetParameter(1302, value); }}
	/// <summary>PID: 1303  | Type: read | EXCEPTIONS: Not Available = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpurawsystem_1303 {get { return GetParameter(1303); }set { SetParameter(1303, value); }}
	/// <summary>PID: 1303  | Type: read | EXCEPTIONS: Not Available = -1</summary>
	public System.Object Cpurawsystem {get { return GetParameter(1303); }set { SetParameter(1303, value); }}
	/// <summary>PID: 1304  | Type: read | EXCEPTIONS: Not Available = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpurawidle_1304 {get { return GetParameter(1304); }set { SetParameter(1304, value); }}
	/// <summary>PID: 1304  | Type: read | EXCEPTIONS: Not Available = -1</summary>
	public System.Object Cpurawidle {get { return GetParameter(1304); }set { SetParameter(1304, value); }}
	/// <summary>PID: 1305  | Type: read | EXCEPTIONS: Not Available = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpurawwait_1305 {get { return GetParameter(1305); }set { SetParameter(1305, value); }}
	/// <summary>PID: 1305  | Type: read | EXCEPTIONS: Not Available = -1</summary>
	public System.Object Cpurawwait {get { return GetParameter(1305); }set { SetParameter(1305, value); }}
	/// <summary>PID: 1306  | Type: read | EXCEPTIONS: Not Available = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpurawkernel_1306 {get { return GetParameter(1306); }set { SetParameter(1306, value); }}
	/// <summary>PID: 1306  | Type: read | EXCEPTIONS: Not Available = -1</summary>
	public System.Object Cpurawkernel {get { return GetParameter(1306); }set { SetParameter(1306, value); }}
	/// <summary>PID: 1307  | Type: read | EXCEPTIONS: Not Available = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpurawinterrupt_1307 {get { return GetParameter(1307); }set { SetParameter(1307, value); }}
	/// <summary>PID: 1307  | Type: read | EXCEPTIONS: Not Available = -1</summary>
	public System.Object Cpurawinterrupt {get { return GetParameter(1307); }set { SetParameter(1307, value); }}
	/// <summary>PID: 1310  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Rawcpuuser_1310 {get { return GetParameter(1310); }set { SetParameter(1310, value); }}
	/// <summary>PID: 1310  | Type: read</summary>
	public System.Object Rawcpuuser {get { return GetParameter(1310); }set { SetParameter(1310, value); }}
	/// <summary>PID: 1311  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Rawcpunice_1311 {get { return GetParameter(1311); }set { SetParameter(1311, value); }}
	/// <summary>PID: 1311  | Type: read</summary>
	public System.Object Rawcpunice {get { return GetParameter(1311); }set { SetParameter(1311, value); }}
	/// <summary>PID: 1312  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Rawcpusystem_1312 {get { return GetParameter(1312); }set { SetParameter(1312, value); }}
	/// <summary>PID: 1312  | Type: read</summary>
	public System.Object Rawcpusystem {get { return GetParameter(1312); }set { SetParameter(1312, value); }}
	/// <summary>PID: 1313  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Rawcpuidle_1313 {get { return GetParameter(1313); }set { SetParameter(1313, value); }}
	/// <summary>PID: 1313  | Type: read</summary>
	public System.Object Rawcpuidle {get { return GetParameter(1313); }set { SetParameter(1313, value); }}
	/// <summary>PID: 1314  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Rawcpuwait_1314 {get { return GetParameter(1314); }set { SetParameter(1314, value); }}
	/// <summary>PID: 1314  | Type: read</summary>
	public System.Object Rawcpuwait {get { return GetParameter(1314); }set { SetParameter(1314, value); }}
	/// <summary>PID: 1315  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Rawcpukernel_1315 {get { return GetParameter(1315); }set { SetParameter(1315, value); }}
	/// <summary>PID: 1315  | Type: read</summary>
	public System.Object Rawcpukernel {get { return GetParameter(1315); }set { SetParameter(1315, value); }}
	/// <summary>PID: 1316  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Rawcpuinterrupt_1316 {get { return GetParameter(1316); }set { SetParameter(1316, value); }}
	/// <summary>PID: 1316  | Type: read</summary>
	public System.Object Rawcpuinterrupt {get { return GetParameter(1316); }set { SetParameter(1316, value); }}
	/// <summary>PID: 1320  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Rawcpuuserbuf_1320 {get { return GetParameter(1320); }set { SetParameter(1320, value); }}
	/// <summary>PID: 1320  | Type: read</summary>
	public System.Object Rawcpuuserbuf {get { return GetParameter(1320); }set { SetParameter(1320, value); }}
	/// <summary>PID: 1321  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Rawcpunicebuf_1321 {get { return GetParameter(1321); }set { SetParameter(1321, value); }}
	/// <summary>PID: 1321  | Type: read</summary>
	public System.Object Rawcpunicebuf {get { return GetParameter(1321); }set { SetParameter(1321, value); }}
	/// <summary>PID: 1322  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Rawcpusystembuf_1322 {get { return GetParameter(1322); }set { SetParameter(1322, value); }}
	/// <summary>PID: 1322  | Type: read</summary>
	public System.Object Rawcpusystembuf {get { return GetParameter(1322); }set { SetParameter(1322, value); }}
	/// <summary>PID: 1323  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Rawcpuidlebuf_1323 {get { return GetParameter(1323); }set { SetParameter(1323, value); }}
	/// <summary>PID: 1323  | Type: read</summary>
	public System.Object Rawcpuidlebuf {get { return GetParameter(1323); }set { SetParameter(1323, value); }}
	/// <summary>PID: 1324  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Rawcpuwaitbuf_1324 {get { return GetParameter(1324); }set { SetParameter(1324, value); }}
	/// <summary>PID: 1324  | Type: read</summary>
	public System.Object Rawcpuwaitbuf {get { return GetParameter(1324); }set { SetParameter(1324, value); }}
	/// <summary>PID: 1325  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Rawcpukernelbuf_1325 {get { return GetParameter(1325); }set { SetParameter(1325, value); }}
	/// <summary>PID: 1325  | Type: read</summary>
	public System.Object Rawcpukernelbuf {get { return GetParameter(1325); }set { SetParameter(1325, value); }}
	/// <summary>PID: 1326  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Rawcpuinterruptbuf_1326 {get { return GetParameter(1326); }set { SetParameter(1326, value); }}
	/// <summary>PID: 1326  | Type: read</summary>
	public System.Object Rawcpuinterruptbuf {get { return GetParameter(1326); }set { SetParameter(1326, value); }}
	/// <summary>PID: 1330  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Rawcputrig_1330 {get { return GetParameter(1330); }set { SetParameter(1330, value); }}
	/// <summary>PID: 1330  | Type: read</summary>
	public System.Object Rawcputrig {get { return GetParameter(1330); }set { SetParameter(1330, value); }}
	/// <summary>PID: 1500  | Type: write | DISCREETS: Service Table... = Service Table, LVS Real Table... = LVS Real Table</summary>
	public System.Object Pgblinuxvirtualserver_1500 {get { return GetParameter(1500); }set { SetParameter(1500, value); }}
	/// <summary>PID: 1500  | Type: write | DISCREETS: Service Table... = Service Table, LVS Real Table... = LVS Real Table</summary>
	public System.Object Pgblinuxvirtualserver {get { return Write.Pgblinuxvirtualserver; }set { Write.Pgblinuxvirtualserver = value; }}
	/// <summary>PID: 1501  | Type: read | DISCREETS: Disabled = 0, Enabled = 1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Polllvsparameters_1501 {get { return GetParameter(1501); }set { SetParameter(1501, value); }}
	/// <summary>PID: 1501  | Type: read | DISCREETS: Disabled = 0, Enabled = 1</summary>
	public System.Object Polllvsparameters {get { return GetParameter(1501); }set { SetParameter(1501, value); }}
	/// <summary>PID: 1502  | Type: write | DISCREETS: Disabled = 0, Enabled = 1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Polllvsparameters_1502 {get { return GetParameter(1502); }set { SetParameter(1502, value); }}
	/// <summary>PID: 1510  | Type: read | EXCEPTIONS: Not Applicable = "-1"</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsversion_1510 {get { return GetParameter(1510); }set { SetParameter(1510, value); }}
	/// <summary>PID: 1510  | Type: read | EXCEPTIONS: Not Applicable = "-1"</summary>
	public System.Object Lvsversion {get { return GetParameter(1510); }set { SetParameter(1510, value); }}
	/// <summary>PID: 1511  | Type: read | EXCEPTIONS: Not Applicable = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsnumservices_1511 {get { return GetParameter(1511); }set { SetParameter(1511, value); }}
	/// <summary>PID: 1511  | Type: read | EXCEPTIONS: Not Applicable = -1</summary>
	public System.Object Lvsnumservices {get { return GetParameter(1511); }set { SetParameter(1511, value); }}
	/// <summary>PID: 1512  | Type: read | EXCEPTIONS: Not Applicable = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvshashtablesize_1512 {get { return GetParameter(1512); }set { SetParameter(1512, value); }}
	/// <summary>PID: 1512  | Type: read | EXCEPTIONS: Not Applicable = -1</summary>
	public System.Object Lvshashtablesize {get { return GetParameter(1512); }set { SetParameter(1512, value); }}
	/// <summary>PID: 1513  | Type: read | EXCEPTIONS: Not Applicable = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvstcptimeout_1513 {get { return GetParameter(1513); }set { SetParameter(1513, value); }}
	/// <summary>PID: 1513  | Type: read | EXCEPTIONS: Not Applicable = -1</summary>
	public System.Object Lvstcptimeout {get { return GetParameter(1513); }set { SetParameter(1513, value); }}
	/// <summary>PID: 1514  | Type: read | EXCEPTIONS: Not Applicable = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvstcpfintimeout_1514 {get { return GetParameter(1514); }set { SetParameter(1514, value); }}
	/// <summary>PID: 1514  | Type: read | EXCEPTIONS: Not Applicable = -1</summary>
	public System.Object Lvstcpfintimeout {get { return GetParameter(1514); }set { SetParameter(1514, value); }}
	/// <summary>PID: 1515  | Type: read | EXCEPTIONS: Not Applicable = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsudptimeout_1515 {get { return GetParameter(1515); }set { SetParameter(1515, value); }}
	/// <summary>PID: 1515  | Type: read | EXCEPTIONS: Not Applicable = -1</summary>
	public System.Object Lvsudptimeout {get { return GetParameter(1515); }set { SetParameter(1515, value); }}
	/// <summary>PID: 1516  | Type: read | DISCREETS: None = 0, Master = 1, Backup = 2 | EXCEPTIONS: Not Applicable = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsdaemonstate_1516 {get { return GetParameter(1516); }set { SetParameter(1516, value); }}
	/// <summary>PID: 1516  | Type: read | DISCREETS: None = 0, Master = 1, Backup = 2 | EXCEPTIONS: Not Applicable = -1</summary>
	public System.Object Lvsdaemonstate {get { return GetParameter(1516); }set { SetParameter(1516, value); }}
	/// <summary>PID: 1517  | Type: read | EXCEPTIONS: Not Applicable = "-1"</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsmcastint_1517 {get { return GetParameter(1517); }set { SetParameter(1517, value); }}
	/// <summary>PID: 1517  | Type: read | EXCEPTIONS: Not Applicable = "-1"</summary>
	public System.Object Lvsmcastint {get { return GetParameter(1517); }set { SetParameter(1517, value); }}
	/// <summary>PID: 1601  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsservicenumber_1601 {get { return GetParameter(1601); }set { SetParameter(1601, value); }}
	/// <summary>PID: 1601  | Type: read</summary>
	public System.Object Lvsservicenumber {get { return GetParameter(1601); }set { SetParameter(1601, value); }}
	/// <summary>PID: 1602  | Type: read | EXCEPTIONS: N/A = "-1"</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsserviceschedtype_1602 {get { return GetParameter(1602); }set { SetParameter(1602, value); }}
	/// <summary>PID: 1602  | Type: read | EXCEPTIONS: N/A = "-1"</summary>
	public System.Object Lvsserviceschedtype {get { return GetParameter(1602); }set { SetParameter(1602, value); }}
	/// <summary>PID: 1603  | Type: read | DISCREETS: Firewall Mark = -1, TCP = 6, UDP = 17 | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsserviceproto_1603 {get { return GetParameter(1603); }set { SetParameter(1603, value); }}
	/// <summary>PID: 1603  | Type: read | DISCREETS: Firewall Mark = -1, TCP = 6, UDP = 17 | EXCEPTIONS: N/A = -1</summary>
	public System.Object Lvsserviceproto {get { return GetParameter(1603); }set { SetParameter(1603, value); }}
	/// <summary>PID: 1604  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsserviceaddr_1604 {get { return GetParameter(1604); }set { SetParameter(1604, value); }}
	/// <summary>PID: 1604  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Lvsserviceaddr {get { return GetParameter(1604); }set { SetParameter(1604, value); }}
	/// <summary>PID: 1605  | Type: read | DISCREETS: Firewall Mark = -1 | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsserviceport_1605 {get { return GetParameter(1605); }set { SetParameter(1605, value); }}
	/// <summary>PID: 1605  | Type: read | DISCREETS: Firewall Mark = -1 | EXCEPTIONS: N/A = -1</summary>
	public System.Object Lvsserviceport {get { return GetParameter(1605); }set { SetParameter(1605, value); }}
	/// <summary>PID: 1606  | Type: read | DISCREETS: Undefined = 0 | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsservicefwmark_1606 {get { return GetParameter(1606); }set { SetParameter(1606, value); }}
	/// <summary>PID: 1606  | Type: read | DISCREETS: Undefined = 0 | EXCEPTIONS: N/A = -1</summary>
	public System.Object Lvsservicefwmark {get { return GetParameter(1606); }set { SetParameter(1606, value); }}
	/// <summary>PID: 1607  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsservicepersisttimeout_1607 {get { return GetParameter(1607); }set { SetParameter(1607, value); }}
	/// <summary>PID: 1607  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Lvsservicepersisttimeout {get { return GetParameter(1607); }set { SetParameter(1607, value); }}
	/// <summary>PID: 1608  | Type: read | EXCEPTIONS: N/A = "-1"</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsservicepersistnetmask_1608 {get { return GetParameter(1608); }set { SetParameter(1608, value); }}
	/// <summary>PID: 1608  | Type: read | EXCEPTIONS: N/A = "-1"</summary>
	public System.Object Lvsservicepersistnetmask {get { return GetParameter(1608); }set { SetParameter(1608, value); }}
	/// <summary>PID: 1609  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsservicenumdests_1609 {get { return GetParameter(1609); }set { SetParameter(1609, value); }}
	/// <summary>PID: 1609  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Lvsservicenumdests {get { return GetParameter(1609); }set { SetParameter(1609, value); }}
	/// <summary>PID: 1610  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsservicestatsconns_1610 {get { return GetParameter(1610); }set { SetParameter(1610, value); }}
	/// <summary>PID: 1610  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Lvsservicestatsconns {get { return GetParameter(1610); }set { SetParameter(1610, value); }}
	/// <summary>PID: 1611  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsservicestatsinpkts_1611 {get { return GetParameter(1611); }set { SetParameter(1611, value); }}
	/// <summary>PID: 1611  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Lvsservicestatsinpkts {get { return GetParameter(1611); }set { SetParameter(1611, value); }}
	/// <summary>PID: 1612  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsservicestatsoutpkts_1612 {get { return GetParameter(1612); }set { SetParameter(1612, value); }}
	/// <summary>PID: 1612  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Lvsservicestatsoutpkts {get { return GetParameter(1612); }set { SetParameter(1612, value); }}
	/// <summary>PID: 1613  | Type: read | EXCEPTIONS: N/A = 1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsservicestatsinbytes_1613 {get { return GetParameter(1613); }set { SetParameter(1613, value); }}
	/// <summary>PID: 1613  | Type: read | EXCEPTIONS: N/A = 1</summary>
	public System.Object Lvsservicestatsinbytes {get { return GetParameter(1613); }set { SetParameter(1613, value); }}
	/// <summary>PID: 1614  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsservicestatsoutbytes_1614 {get { return GetParameter(1614); }set { SetParameter(1614, value); }}
	/// <summary>PID: 1614  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Lvsservicestatsoutbytes {get { return GetParameter(1614); }set { SetParameter(1614, value); }}
	/// <summary>PID: 1615  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsserviceratecps_1615 {get { return GetParameter(1615); }set { SetParameter(1615, value); }}
	/// <summary>PID: 1615  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Lvsserviceratecps {get { return GetParameter(1615); }set { SetParameter(1615, value); }}
	/// <summary>PID: 1616  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsservicerateinpps_1616 {get { return GetParameter(1616); }set { SetParameter(1616, value); }}
	/// <summary>PID: 1616  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Lvsservicerateinpps {get { return GetParameter(1616); }set { SetParameter(1616, value); }}
	/// <summary>PID: 1617  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsservicerateoutpps_1617 {get { return GetParameter(1617); }set { SetParameter(1617, value); }}
	/// <summary>PID: 1617  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Lvsservicerateoutpps {get { return GetParameter(1617); }set { SetParameter(1617, value); }}
	/// <summary>PID: 1618  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsservicerateinbps_1618 {get { return GetParameter(1618); }set { SetParameter(1618, value); }}
	/// <summary>PID: 1618  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Lvsservicerateinbps {get { return GetParameter(1618); }set { SetParameter(1618, value); }}
	/// <summary>PID: 1619  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsservicerateoutbps_1619 {get { return GetParameter(1619); }set { SetParameter(1619, value); }}
	/// <summary>PID: 1619  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Lvsservicerateoutbps {get { return GetParameter(1619); }set { SetParameter(1619, value); }}
	/// <summary>PID: 1701  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsrealservicenumber_1701 {get { return GetParameter(1701); }set { SetParameter(1701, value); }}
	/// <summary>PID: 1701  | Type: read</summary>
	public System.Object Lvsrealservicenumber {get { return GetParameter(1701); }set { SetParameter(1701, value); }}
	/// <summary>PID: 1702  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsrealservernumber_1702 {get { return GetParameter(1702); }set { SetParameter(1702, value); }}
	/// <summary>PID: 1702  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Lvsrealservernumber {get { return GetParameter(1702); }set { SetParameter(1702, value); }}
	/// <summary>PID: 1703  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsrealserveraddr_1703 {get { return GetParameter(1703); }set { SetParameter(1703, value); }}
	/// <summary>PID: 1703  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Lvsrealserveraddr {get { return GetParameter(1703); }set { SetParameter(1703, value); }}
	/// <summary>PID: 1704  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsrealserverport_1704 {get { return GetParameter(1704); }set { SetParameter(1704, value); }}
	/// <summary>PID: 1704  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Lvsrealserverport {get { return GetParameter(1704); }set { SetParameter(1704, value); }}
	/// <summary>PID: 1705  | Type: read | DISCREETS: Masq = 0, Local = 1, Tunnel = 2, Route = 3 | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsrealserverflags_1705 {get { return GetParameter(1705); }set { SetParameter(1705, value); }}
	/// <summary>PID: 1705  | Type: read | DISCREETS: Masq = 0, Local = 1, Tunnel = 2, Route = 3 | EXCEPTIONS: N/A = -1</summary>
	public System.Object Lvsrealserverflags {get { return GetParameter(1705); }set { SetParameter(1705, value); }}
	/// <summary>PID: 1706  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsrealserverweight_1706 {get { return GetParameter(1706); }set { SetParameter(1706, value); }}
	/// <summary>PID: 1706  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Lvsrealserverweight {get { return GetParameter(1706); }set { SetParameter(1706, value); }}
	/// <summary>PID: 1707  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsrealstatsconns_1707 {get { return GetParameter(1707); }set { SetParameter(1707, value); }}
	/// <summary>PID: 1707  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Lvsrealstatsconns {get { return GetParameter(1707); }set { SetParameter(1707, value); }}
	/// <summary>PID: 1708  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsrealstatsinpkts_1708 {get { return GetParameter(1708); }set { SetParameter(1708, value); }}
	/// <summary>PID: 1708  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Lvsrealstatsinpkts {get { return GetParameter(1708); }set { SetParameter(1708, value); }}
	/// <summary>PID: 1709  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsrealstatsoutpkts_1709 {get { return GetParameter(1709); }set { SetParameter(1709, value); }}
	/// <summary>PID: 1709  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Lvsrealstatsoutpkts {get { return GetParameter(1709); }set { SetParameter(1709, value); }}
	/// <summary>PID: 1710  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsrealstatsinbytes_1710 {get { return GetParameter(1710); }set { SetParameter(1710, value); }}
	/// <summary>PID: 1710  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Lvsrealstatsinbytes {get { return GetParameter(1710); }set { SetParameter(1710, value); }}
	/// <summary>PID: 1711  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsrealstatsoutbytes_1711 {get { return GetParameter(1711); }set { SetParameter(1711, value); }}
	/// <summary>PID: 1711  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Lvsrealstatsoutbytes {get { return GetParameter(1711); }set { SetParameter(1711, value); }}
	/// <summary>PID: 1712  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsrealratecps_1712 {get { return GetParameter(1712); }set { SetParameter(1712, value); }}
	/// <summary>PID: 1712  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Lvsrealratecps {get { return GetParameter(1712); }set { SetParameter(1712, value); }}
	/// <summary>PID: 1713  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsrealrateinpps_1713 {get { return GetParameter(1713); }set { SetParameter(1713, value); }}
	/// <summary>PID: 1713  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Lvsrealrateinpps {get { return GetParameter(1713); }set { SetParameter(1713, value); }}
	/// <summary>PID: 1714  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsrealrateoutpps_1714 {get { return GetParameter(1714); }set { SetParameter(1714, value); }}
	/// <summary>PID: 1714  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Lvsrealrateoutpps {get { return GetParameter(1714); }set { SetParameter(1714, value); }}
	/// <summary>PID: 1715  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsrealrateinbps_1715 {get { return GetParameter(1715); }set { SetParameter(1715, value); }}
	/// <summary>PID: 1715  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Lvsrealrateinbps {get { return GetParameter(1715); }set { SetParameter(1715, value); }}
	/// <summary>PID: 1716  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsrealrateoutbps_1716 {get { return GetParameter(1716); }set { SetParameter(1716, value); }}
	/// <summary>PID: 1716  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Lvsrealrateoutbps {get { return GetParameter(1716); }set { SetParameter(1716, value); }}
	/// <summary>PID: 2002  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pathlist_2002 {get { return GetParameter(2002); }set { SetParameter(2002, value); }}
	/// <summary>PID: 2002  | Type: read</summary>
	public System.Object Pathlist {get { return GetParameter(2002); }set { SetParameter(2002, value); }}
	/// <summary>PID: 2003  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Csvfilelist_2003 {get { return GetParameter(2003); }set { SetParameter(2003, value); }}
	/// <summary>PID: 2003  | Type: read</summary>
	public System.Object Csvfilelist {get { return GetParameter(2003); }set { SetParameter(2003, value); }}
	/// <summary>PID: 2011  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pathofthefiles_2011 {get { return GetParameter(2011); }set { SetParameter(2011, value); }}
	/// <summary>PID: 2011  | Type: read</summary>
	public System.Object Pathofthefiles {get { return GetParameter(2011); }set { SetParameter(2011, value); }}
	/// <summary>PID: 2012  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pathofthefiles_2012 {get { return GetParameter(2012); }set { SetParameter(2012, value); }}
	/// <summary>PID: 2013  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Csvfilename_2013 {get { return GetParameter(2013); }set { SetParameter(2013, value); }}
	/// <summary>PID: 2013  | Type: read</summary>
	public System.Object Csvfilename {get { return GetParameter(2013); }set { SetParameter(2013, value); }}
	/// <summary>PID: 2014  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Csvfilename_2014 {get { return GetParameter(2014); }set { SetParameter(2014, value); }}
	/// <summary>PID: 2015  | Type: write | DISCREETS: Import CSV = Import CSV, Export CSV = Export CSV</summary>
	public System.Object Csvbutton_2015 {get { return GetParameter(2015); }set { SetParameter(2015, value); }}
	/// <summary>PID: 2015  | Type: write | DISCREETS: Import CSV = Import CSV, Export CSV = Export CSV</summary>
	public System.Object Csvbutton {get { return Write.Csvbutton; }set { Write.Csvbutton = value; }}
	/// <summary>PID: 8001  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Externaldataoverviewid_idx__8001 {get { return GetParameter(8001); }set { SetParameter(8001, value); }}
	/// <summary>PID: 8001  | Type: read</summary>
	public System.Object Externaldataoverviewid_idx_ {get { return GetParameter(8001); }set { SetParameter(8001, value); }}
	/// <summary>PID: 8002  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Externaldataoverviewvalue_8002 {get { return GetParameter(8002); }set { SetParameter(8002, value); }}
	/// <summary>PID: 8002  | Type: read</summary>
	public System.Object Externaldataoverviewvalue {get { return GetParameter(8002); }set { SetParameter(8002, value); }}
	/// <summary>PID: 8003  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Externaldataoverviewstring_8003 {get { return GetParameter(8003); }set { SetParameter(8003, value); }}
	/// <summary>PID: 8003  | Type: read</summary>
	public System.Object Externaldataoverviewstring {get { return GetParameter(8003); }set { SetParameter(8003, value); }}
	/// <summary>PID: 8004  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Externaldataoverviewfunctionality_8004 {get { return GetParameter(8004); }set { SetParameter(8004, value); }}
	/// <summary>PID: 8004  | Type: read</summary>
	public System.Object Externaldataoverviewfunctionality {get { return GetParameter(8004); }set { SetParameter(8004, value); }}
	/// <summary>PID: 8104  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Externaldataoverviewfunctionality_8104 {get { return GetParameter(8104); }set { SetParameter(8104, value); }}
	/// <summary>PID: 8200  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Addexternaldataentry_8200 {get { return GetParameter(8200); }set { SetParameter(8200, value); }}
	/// <summary>PID: 8200  | Type: read</summary>
	public System.Object Addexternaldataentry {get { return GetParameter(8200); }set { SetParameter(8200, value); }}
	/// <summary>PID: 8201  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Removeexternaldataentry_8201 {get { return GetParameter(8201); }set { SetParameter(8201, value); }}
	/// <summary>PID: 8201  | Type: read</summary>
	public System.Object Removeexternaldataentry {get { return GetParameter(8201); }set { SetParameter(8201, value); }}
	/// <summary>PID: 8300  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Addexternaldataentry_8300 {get { return GetParameter(8300); }set { SetParameter(8300, value); }}
	/// <summary>PID: 8301  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Removeexternaldataentry_8301 {get { return GetParameter(8301); }set { SetParameter(8301, value); }}
	/// <summary>PID: 8400  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Processtovalidate_8400 {get { return GetParameter(8400); }set { SetParameter(8400, value); }}
	/// <summary>PID: 8400  | Type: read</summary>
	public System.Object Processtovalidate {get { return GetParameter(8400); }set { SetParameter(8400, value); }}
	/// <summary>PID: 8402  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Processvalidationlistbuffer_8402 {get { return GetParameter(8402); }set { SetParameter(8402, value); }}
	/// <summary>PID: 8402  | Type: read</summary>
	public System.Object Processvalidationlistbuffer {get { return GetParameter(8402); }set { SetParameter(8402, value); }}
	/// <summary>PID: 8404  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Unlistedprocess_8404 {get { return GetParameter(8404); }set { SetParameter(8404, value); }}
	/// <summary>PID: 8404  | Type: read</summary>
	public System.Object Unlistedprocess {get { return GetParameter(8404); }set { SetParameter(8404, value); }}
	/// <summary>PID: 8500  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Processtovalidate_8500 {get { return GetParameter(8500); }set { SetParameter(8500, value); }}
	/// <summary>PID: 8501  | Type: write | DISCREETS: Update List... = Update List</summary>
	public System.Object Validationbutton_8501 {get { return GetParameter(8501); }set { SetParameter(8501, value); }}
	/// <summary>PID: 8501  | Type: write | DISCREETS: Update List... = Update List</summary>
	public System.Object Validationbutton {get { return Write.Validationbutton; }set { Write.Validationbutton = value; }}
	/// <summary>PID: 8504  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Unlistedprocess_8504 {get { return GetParameter(8504); }set { SetParameter(8504, value); }}
	/// <summary>PID: 8601  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Processvalidationprocesstovalidate_8601 {get { return GetParameter(8601); }set { SetParameter(8601, value); }}
	/// <summary>PID: 8601  | Type: read</summary>
	public System.Object Processvalidationprocesstovalidate {get { return GetParameter(8601); }set { SetParameter(8601, value); }}
	/// <summary>PID: 8602  | Type: read | DISCREETS: OK - Running = Ok - Running, OK - Runnable = Ok - Runnable, Fail - Not Runnable = Fail - Not Runnable, Fail - Invalid = Fail - Invalid, Fail - Not Available = Fail - Not Available, Fail - Not Present = Fail - Not Present | EXCEPTIONS: Not Monitored = Not Monitored</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Processvalidationstatus_8602 {get { return GetParameter(8602); }set { SetParameter(8602, value); }}
	/// <summary>PID: 8602  | Type: read | DISCREETS: OK - Running = Ok - Running, OK - Runnable = Ok - Runnable, Fail - Not Runnable = Fail - Not Runnable, Fail - Invalid = Fail - Invalid, Fail - Not Available = Fail - Not Available, Fail - Not Present = Fail - Not Present | EXCEPTIONS: Not Monitored = Not Monitored</summary>
	public System.Object Processvalidationstatus {get { return GetParameter(8602); }set { SetParameter(8602, value); }}
	/// <summary>PID: 8603  | Type: read | DISCREETS: Monitored = Monitored, Not Monitored = Not Monitored, Delete = Delete</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Processvalidationprocessmonitoring_8603 {get { return GetParameter(8603); }set { SetParameter(8603, value); }}
	/// <summary>PID: 8603  | Type: read | DISCREETS: Monitored = Monitored, Not Monitored = Not Monitored, Delete = Delete</summary>
	public System.Object Processvalidationprocessmonitoring {get { return GetParameter(8603); }set { SetParameter(8603, value); }}
	/// <summary>PID: 8613  | Type: write | DISCREETS: Monitored = Monitored, Not Monitored = Not Monitored, Delete = Delete</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Processvalidationprocessmonitoring_8613 {get { return GetParameter(8613); }set { SetParameter(8613, value); }}
	/// <summary>PID: 10001  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Exttableindex_10001 {get { return GetParameter(10001); }set { SetParameter(10001, value); }}
	/// <summary>PID: 10001  | Type: read</summary>
	public System.Object Exttableindex {get { return GetParameter(10001); }set { SetParameter(10001, value); }}
	/// <summary>PID: 10002  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Extnames_10002 {get { return GetParameter(10002); }set { SetParameter(10002, value); }}
	/// <summary>PID: 10002  | Type: read</summary>
	public System.Object Extnames {get { return GetParameter(10002); }set { SetParameter(10002, value); }}
	/// <summary>PID: 10003  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Extcommand_10003 {get { return GetParameter(10003); }set { SetParameter(10003, value); }}
	/// <summary>PID: 10003  | Type: read</summary>
	public System.Object Extcommand {get { return GetParameter(10003); }set { SetParameter(10003, value); }}
	/// <summary>PID: 10004  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Extresult_10004 {get { return GetParameter(10004); }set { SetParameter(10004, value); }}
	/// <summary>PID: 10004  | Type: read</summary>
	public System.Object Extresult {get { return GetParameter(10004); }set { SetParameter(10004, value); }}
	/// <summary>PID: 10005  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Extoutput_10005 {get { return GetParameter(10005); }set { SetParameter(10005, value); }}
	/// <summary>PID: 10005  | Type: read</summary>
	public System.Object Extoutput {get { return GetParameter(10005); }set { SetParameter(10005, value); }}
	/// <summary>PID: 10006  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Exterrfix_10006 {get { return GetParameter(10006); }set { SetParameter(10006, value); }}
	/// <summary>PID: 10006  | Type: read</summary>
	public System.Object Exterrfix {get { return GetParameter(10006); }set { SetParameter(10006, value); }}
	/// <summary>PID: 10007  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Exterrfixcmd_10007 {get { return GetParameter(10007); }set { SetParameter(10007, value); }}
	/// <summary>PID: 10007  | Type: read</summary>
	public System.Object Exterrfixcmd {get { return GetParameter(10007); }set { SetParameter(10007, value); }}
	/// <summary>PID: 10016  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Exterrfix_10016 {get { return GetParameter(10016); }set { SetParameter(10016, value); }}
	/// <summary>PID: 10026  | Type: write</summary>
	public System.Object Exterrfixoid_10026 {get { return GetParameter(10026); }set { SetParameter(10026, value); }}
	/// <summary>PID: 10026  | Type: write</summary>
	public System.Object Exterrfixoid {get { return Write.Exterrfixoid; }set { Write.Exterrfixoid = value; }}
	/// <summary>PID: 10101  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Diskioindex_10101 {get { return GetParameter(10101); }set { SetParameter(10101, value); }}
	/// <summary>PID: 10101  | Type: read</summary>
	public System.Object Diskioindex {get { return GetParameter(10101); }set { SetParameter(10101, value); }}
	/// <summary>PID: 10102  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Diskiodevice_10102 {get { return GetParameter(10102); }set { SetParameter(10102, value); }}
	/// <summary>PID: 10102  | Type: read</summary>
	public System.Object Diskiodevice {get { return GetParameter(10102); }set { SetParameter(10102, value); }}
	/// <summary>PID: 10103  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Diskionread_10103 {get { return GetParameter(10103); }set { SetParameter(10103, value); }}
	/// <summary>PID: 10103  | Type: read</summary>
	public System.Object Diskionread {get { return GetParameter(10103); }set { SetParameter(10103, value); }}
	/// <summary>PID: 10104  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Diskionreadrate_10104 {get { return GetParameter(10104); }set { SetParameter(10104, value); }}
	/// <summary>PID: 10104  | Type: read</summary>
	public System.Object Diskionreadrate {get { return GetParameter(10104); }set { SetParameter(10104, value); }}
	/// <summary>PID: 10105  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Diskionreadbefore_10105 {get { return GetParameter(10105); }set { SetParameter(10105, value); }}
	/// <summary>PID: 10105  | Type: read</summary>
	public System.Object Diskionreadbefore {get { return GetParameter(10105); }set { SetParameter(10105, value); }}
	/// <summary>PID: 10106  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Diskionwritten_10106 {get { return GetParameter(10106); }set { SetParameter(10106, value); }}
	/// <summary>PID: 10106  | Type: read</summary>
	public System.Object Diskionwritten {get { return GetParameter(10106); }set { SetParameter(10106, value); }}
	/// <summary>PID: 10107  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Diskionwrittenrate_10107 {get { return GetParameter(10107); }set { SetParameter(10107, value); }}
	/// <summary>PID: 10107  | Type: read</summary>
	public System.Object Diskionwrittenrate {get { return GetParameter(10107); }set { SetParameter(10107, value); }}
	/// <summary>PID: 10108  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Diskionwrittenbefore_10108 {get { return GetParameter(10108); }set { SetParameter(10108, value); }}
	/// <summary>PID: 10108  | Type: read</summary>
	public System.Object Diskionwrittenbefore {get { return GetParameter(10108); }set { SetParameter(10108, value); }}
	/// <summary>PID: 10109  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Diskioreads_10109 {get { return GetParameter(10109); }set { SetParameter(10109, value); }}
	/// <summary>PID: 10109  | Type: read</summary>
	public System.Object Diskioreads {get { return GetParameter(10109); }set { SetParameter(10109, value); }}
	/// <summary>PID: 10110  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Diskiowrites_10110 {get { return GetParameter(10110); }set { SetParameter(10110, value); }}
	/// <summary>PID: 10110  | Type: read</summary>
	public System.Object Diskiowrites {get { return GetParameter(10110); }set { SetParameter(10110, value); }}
	/// <summary>PID: 10111  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Diskioreadsrate_10111 {get { return GetParameter(10111); }set { SetParameter(10111, value); }}
	/// <summary>PID: 10111  | Type: read</summary>
	public System.Object Diskioreadsrate {get { return GetParameter(10111); }set { SetParameter(10111, value); }}
	/// <summary>PID: 10112  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Diskioreadsbefore_10112 {get { return GetParameter(10112); }set { SetParameter(10112, value); }}
	/// <summary>PID: 10112  | Type: read</summary>
	public System.Object Diskioreadsbefore {get { return GetParameter(10112); }set { SetParameter(10112, value); }}
	/// <summary>PID: 10113  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Diskiowritesrate_10113 {get { return GetParameter(10113); }set { SetParameter(10113, value); }}
	/// <summary>PID: 10113  | Type: read</summary>
	public System.Object Diskiowritesrate {get { return GetParameter(10113); }set { SetParameter(10113, value); }}
	/// <summary>PID: 10114  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Diskiowritesbefore_10114 {get { return GetParameter(10114); }set { SetParameter(10114, value); }}
	/// <summary>PID: 10114  | Type: read</summary>
	public System.Object Diskiowritesbefore {get { return GetParameter(10114); }set { SetParameter(10114, value); }}
	/// <summary>PID: 10115  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Diskioaveragesecondread_10115 {get { return GetParameter(10115); }set { SetParameter(10115, value); }}
	/// <summary>PID: 10115  | Type: read</summary>
	public System.Object Diskioaveragesecondread {get { return GetParameter(10115); }set { SetParameter(10115, value); }}
	/// <summary>PID: 10116  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Diskioaveragesecondwrite_10116 {get { return GetParameter(10116); }set { SetParameter(10116, value); }}
	/// <summary>PID: 10116  | Type: read</summary>
	public System.Object Diskioaveragesecondwrite {get { return GetParameter(10116); }set { SetParameter(10116, value); }}
	/// <summary>PID: 10150  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Diskiotablereadfinished_10150 {get { return GetParameter(10150); }set { SetParameter(10150, value); }}
	/// <summary>PID: 10150  | Type: read</summary>
	public System.Object Diskiotablereadfinished {get { return GetParameter(10150); }set { SetParameter(10150, value); }}
	/// <summary>PID: 10151  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Tickcounter_10151 {get { return GetParameter(10151); }set { SetParameter(10151, value); }}
	/// <summary>PID: 10151  | Type: read</summary>
	public System.Object Tickcounter {get { return GetParameter(10151); }set { SetParameter(10151, value); }}
	/// <summary>PID: 11000  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Readinstance_11000 {get { return GetParameter(11000); }set { SetParameter(11000, value); }}
	/// <summary>PID: 11000  | Type: read</summary>
	public System.Object Readinstance {get { return GetParameter(11000); }set { SetParameter(11000, value); }}
	/// <summary>PID: 11111  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Linuxplatformprotocoldriver_11111 {get { return GetParameter(11111); }set { SetParameter(11111, value); }}
	/// <summary>PID: 11111  | Type: read</summary>
	public System.Object Linuxplatformprotocoldriver {get { return GetParameter(11111); }set { SetParameter(11111, value); }}
	/// <summary>PID: 22001  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsipversion_22001 {get { return GetParameter(22001); }set { SetParameter(22001, value); }}
	/// <summary>PID: 22001  | Type: read</summary>
	public System.Object Ipsystemstatsipversion {get { return GetParameter(22001); }set { SetParameter(22001, value); }}
	/// <summary>PID: 22002  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsinreceives_22002 {get { return GetParameter(22002); }set { SetParameter(22002, value); }}
	/// <summary>PID: 22002  | Type: read</summary>
	public System.Object Ipsystemstatsinreceives {get { return GetParameter(22002); }set { SetParameter(22002, value); }}
	/// <summary>PID: 22003  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatshcinreceives_22003 {get { return GetParameter(22003); }set { SetParameter(22003, value); }}
	/// <summary>PID: 22003  | Type: read</summary>
	public System.Object Ipsystemstatshcinreceives {get { return GetParameter(22003); }set { SetParameter(22003, value); }}
	/// <summary>PID: 22004  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsinoctets_22004 {get { return GetParameter(22004); }set { SetParameter(22004, value); }}
	/// <summary>PID: 22004  | Type: read</summary>
	public System.Object Ipsystemstatsinoctets {get { return GetParameter(22004); }set { SetParameter(22004, value); }}
	/// <summary>PID: 22005  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatshcinoctets_22005 {get { return GetParameter(22005); }set { SetParameter(22005, value); }}
	/// <summary>PID: 22005  | Type: read</summary>
	public System.Object Ipsystemstatshcinoctets {get { return GetParameter(22005); }set { SetParameter(22005, value); }}
	/// <summary>PID: 22006  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsinhdrerrors_22006 {get { return GetParameter(22006); }set { SetParameter(22006, value); }}
	/// <summary>PID: 22006  | Type: read</summary>
	public System.Object Ipsystemstatsinhdrerrors {get { return GetParameter(22006); }set { SetParameter(22006, value); }}
	/// <summary>PID: 22007  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsinnoroutes_22007 {get { return GetParameter(22007); }set { SetParameter(22007, value); }}
	/// <summary>PID: 22007  | Type: read</summary>
	public System.Object Ipsystemstatsinnoroutes {get { return GetParameter(22007); }set { SetParameter(22007, value); }}
	/// <summary>PID: 22008  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsinaddrerrors_22008 {get { return GetParameter(22008); }set { SetParameter(22008, value); }}
	/// <summary>PID: 22008  | Type: read</summary>
	public System.Object Ipsystemstatsinaddrerrors {get { return GetParameter(22008); }set { SetParameter(22008, value); }}
	/// <summary>PID: 22009  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsinunknownprotos_22009 {get { return GetParameter(22009); }set { SetParameter(22009, value); }}
	/// <summary>PID: 22009  | Type: read</summary>
	public System.Object Ipsystemstatsinunknownprotos {get { return GetParameter(22009); }set { SetParameter(22009, value); }}
	/// <summary>PID: 22010  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsintruncatedpkts_22010 {get { return GetParameter(22010); }set { SetParameter(22010, value); }}
	/// <summary>PID: 22010  | Type: read</summary>
	public System.Object Ipsystemstatsintruncatedpkts {get { return GetParameter(22010); }set { SetParameter(22010, value); }}
	/// <summary>PID: 22011  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsinforwdatagrams_22011 {get { return GetParameter(22011); }set { SetParameter(22011, value); }}
	/// <summary>PID: 22011  | Type: read</summary>
	public System.Object Ipsystemstatsinforwdatagrams {get { return GetParameter(22011); }set { SetParameter(22011, value); }}
	/// <summary>PID: 22012  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatshcinforwdatagrams_22012 {get { return GetParameter(22012); }set { SetParameter(22012, value); }}
	/// <summary>PID: 22012  | Type: read</summary>
	public System.Object Ipsystemstatshcinforwdatagrams {get { return GetParameter(22012); }set { SetParameter(22012, value); }}
	/// <summary>PID: 22013  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsreasmreqds_22013 {get { return GetParameter(22013); }set { SetParameter(22013, value); }}
	/// <summary>PID: 22013  | Type: read</summary>
	public System.Object Ipsystemstatsreasmreqds {get { return GetParameter(22013); }set { SetParameter(22013, value); }}
	/// <summary>PID: 22014  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsreasmoks_22014 {get { return GetParameter(22014); }set { SetParameter(22014, value); }}
	/// <summary>PID: 22014  | Type: read</summary>
	public System.Object Ipsystemstatsreasmoks {get { return GetParameter(22014); }set { SetParameter(22014, value); }}
	/// <summary>PID: 22015  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsreasmfails_22015 {get { return GetParameter(22015); }set { SetParameter(22015, value); }}
	/// <summary>PID: 22015  | Type: read</summary>
	public System.Object Ipsystemstatsreasmfails {get { return GetParameter(22015); }set { SetParameter(22015, value); }}
	/// <summary>PID: 22016  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsindiscards_22016 {get { return GetParameter(22016); }set { SetParameter(22016, value); }}
	/// <summary>PID: 22016  | Type: read</summary>
	public System.Object Ipsystemstatsindiscards {get { return GetParameter(22016); }set { SetParameter(22016, value); }}
	/// <summary>PID: 22017  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsindelivers_22017 {get { return GetParameter(22017); }set { SetParameter(22017, value); }}
	/// <summary>PID: 22017  | Type: read</summary>
	public System.Object Ipsystemstatsindelivers {get { return GetParameter(22017); }set { SetParameter(22017, value); }}
	/// <summary>PID: 22018  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatshcindelivers_22018 {get { return GetParameter(22018); }set { SetParameter(22018, value); }}
	/// <summary>PID: 22018  | Type: read</summary>
	public System.Object Ipsystemstatshcindelivers {get { return GetParameter(22018); }set { SetParameter(22018, value); }}
	/// <summary>PID: 22019  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsoutrequests_22019 {get { return GetParameter(22019); }set { SetParameter(22019, value); }}
	/// <summary>PID: 22019  | Type: read</summary>
	public System.Object Ipsystemstatsoutrequests {get { return GetParameter(22019); }set { SetParameter(22019, value); }}
	/// <summary>PID: 22020  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatshcoutrequests_22020 {get { return GetParameter(22020); }set { SetParameter(22020, value); }}
	/// <summary>PID: 22020  | Type: read</summary>
	public System.Object Ipsystemstatshcoutrequests {get { return GetParameter(22020); }set { SetParameter(22020, value); }}
	/// <summary>PID: 22021  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsoutnoroutes_22021 {get { return GetParameter(22021); }set { SetParameter(22021, value); }}
	/// <summary>PID: 22021  | Type: read</summary>
	public System.Object Ipsystemstatsoutnoroutes {get { return GetParameter(22021); }set { SetParameter(22021, value); }}
	/// <summary>PID: 22022  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsoutforwdatagrams_22022 {get { return GetParameter(22022); }set { SetParameter(22022, value); }}
	/// <summary>PID: 22022  | Type: read</summary>
	public System.Object Ipsystemstatsoutforwdatagrams {get { return GetParameter(22022); }set { SetParameter(22022, value); }}
	/// <summary>PID: 22023  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatshcoutforwdatagrams_22023 {get { return GetParameter(22023); }set { SetParameter(22023, value); }}
	/// <summary>PID: 22023  | Type: read</summary>
	public System.Object Ipsystemstatshcoutforwdatagrams {get { return GetParameter(22023); }set { SetParameter(22023, value); }}
	/// <summary>PID: 22024  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsoutdiscards_22024 {get { return GetParameter(22024); }set { SetParameter(22024, value); }}
	/// <summary>PID: 22024  | Type: read</summary>
	public System.Object Ipsystemstatsoutdiscards {get { return GetParameter(22024); }set { SetParameter(22024, value); }}
	/// <summary>PID: 22025  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsoutfragreqds_22025 {get { return GetParameter(22025); }set { SetParameter(22025, value); }}
	/// <summary>PID: 22025  | Type: read</summary>
	public System.Object Ipsystemstatsoutfragreqds {get { return GetParameter(22025); }set { SetParameter(22025, value); }}
	/// <summary>PID: 22026  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsoutfragoks_22026 {get { return GetParameter(22026); }set { SetParameter(22026, value); }}
	/// <summary>PID: 22026  | Type: read</summary>
	public System.Object Ipsystemstatsoutfragoks {get { return GetParameter(22026); }set { SetParameter(22026, value); }}
	/// <summary>PID: 22027  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsoutfragfails_22027 {get { return GetParameter(22027); }set { SetParameter(22027, value); }}
	/// <summary>PID: 22027  | Type: read</summary>
	public System.Object Ipsystemstatsoutfragfails {get { return GetParameter(22027); }set { SetParameter(22027, value); }}
	/// <summary>PID: 22028  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsoutfragcreates_22028 {get { return GetParameter(22028); }set { SetParameter(22028, value); }}
	/// <summary>PID: 22028  | Type: read</summary>
	public System.Object Ipsystemstatsoutfragcreates {get { return GetParameter(22028); }set { SetParameter(22028, value); }}
	/// <summary>PID: 22029  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsouttransmits_22029 {get { return GetParameter(22029); }set { SetParameter(22029, value); }}
	/// <summary>PID: 22029  | Type: read</summary>
	public System.Object Ipsystemstatsouttransmits {get { return GetParameter(22029); }set { SetParameter(22029, value); }}
	/// <summary>PID: 22030  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatshcouttransmits_22030 {get { return GetParameter(22030); }set { SetParameter(22030, value); }}
	/// <summary>PID: 22030  | Type: read</summary>
	public System.Object Ipsystemstatshcouttransmits {get { return GetParameter(22030); }set { SetParameter(22030, value); }}
	/// <summary>PID: 22031  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsoutoctets_22031 {get { return GetParameter(22031); }set { SetParameter(22031, value); }}
	/// <summary>PID: 22031  | Type: read</summary>
	public System.Object Ipsystemstatsoutoctets {get { return GetParameter(22031); }set { SetParameter(22031, value); }}
	/// <summary>PID: 22032  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatshcoutoctets_22032 {get { return GetParameter(22032); }set { SetParameter(22032, value); }}
	/// <summary>PID: 22032  | Type: read</summary>
	public System.Object Ipsystemstatshcoutoctets {get { return GetParameter(22032); }set { SetParameter(22032, value); }}
	/// <summary>PID: 22033  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsinmcastpkts_22033 {get { return GetParameter(22033); }set { SetParameter(22033, value); }}
	/// <summary>PID: 22033  | Type: read</summary>
	public System.Object Ipsystemstatsinmcastpkts {get { return GetParameter(22033); }set { SetParameter(22033, value); }}
	/// <summary>PID: 22034  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatshcinmcastpkts_22034 {get { return GetParameter(22034); }set { SetParameter(22034, value); }}
	/// <summary>PID: 22034  | Type: read</summary>
	public System.Object Ipsystemstatshcinmcastpkts {get { return GetParameter(22034); }set { SetParameter(22034, value); }}
	/// <summary>PID: 22035  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsinmcastoctets_22035 {get { return GetParameter(22035); }set { SetParameter(22035, value); }}
	/// <summary>PID: 22035  | Type: read</summary>
	public System.Object Ipsystemstatsinmcastoctets {get { return GetParameter(22035); }set { SetParameter(22035, value); }}
	/// <summary>PID: 22036  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatshcinmcastoctets_22036 {get { return GetParameter(22036); }set { SetParameter(22036, value); }}
	/// <summary>PID: 22036  | Type: read</summary>
	public System.Object Ipsystemstatshcinmcastoctets {get { return GetParameter(22036); }set { SetParameter(22036, value); }}
	/// <summary>PID: 22037  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsoutmcastpkts_22037 {get { return GetParameter(22037); }set { SetParameter(22037, value); }}
	/// <summary>PID: 22037  | Type: read</summary>
	public System.Object Ipsystemstatsoutmcastpkts {get { return GetParameter(22037); }set { SetParameter(22037, value); }}
	/// <summary>PID: 22038  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatshcoutmcastpkts_22038 {get { return GetParameter(22038); }set { SetParameter(22038, value); }}
	/// <summary>PID: 22038  | Type: read</summary>
	public System.Object Ipsystemstatshcoutmcastpkts {get { return GetParameter(22038); }set { SetParameter(22038, value); }}
	/// <summary>PID: 22039  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsoutmcastoctets_22039 {get { return GetParameter(22039); }set { SetParameter(22039, value); }}
	/// <summary>PID: 22039  | Type: read</summary>
	public System.Object Ipsystemstatsoutmcastoctets {get { return GetParameter(22039); }set { SetParameter(22039, value); }}
	/// <summary>PID: 22040  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatshcoutmcastoctets_22040 {get { return GetParameter(22040); }set { SetParameter(22040, value); }}
	/// <summary>PID: 22040  | Type: read</summary>
	public System.Object Ipsystemstatshcoutmcastoctets {get { return GetParameter(22040); }set { SetParameter(22040, value); }}
	/// <summary>PID: 22041  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsinbcastpkts_22041 {get { return GetParameter(22041); }set { SetParameter(22041, value); }}
	/// <summary>PID: 22041  | Type: read</summary>
	public System.Object Ipsystemstatsinbcastpkts {get { return GetParameter(22041); }set { SetParameter(22041, value); }}
	/// <summary>PID: 22042  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatshcinbcastpkts_22042 {get { return GetParameter(22042); }set { SetParameter(22042, value); }}
	/// <summary>PID: 22042  | Type: read</summary>
	public System.Object Ipsystemstatshcinbcastpkts {get { return GetParameter(22042); }set { SetParameter(22042, value); }}
	/// <summary>PID: 22043  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsoutbcastpkts_22043 {get { return GetParameter(22043); }set { SetParameter(22043, value); }}
	/// <summary>PID: 22043  | Type: read</summary>
	public System.Object Ipsystemstatsoutbcastpkts {get { return GetParameter(22043); }set { SetParameter(22043, value); }}
	/// <summary>PID: 22044  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatshcoutbcastpkts_22044 {get { return GetParameter(22044); }set { SetParameter(22044, value); }}
	/// <summary>PID: 22044  | Type: read</summary>
	public System.Object Ipsystemstatshcoutbcastpkts {get { return GetParameter(22044); }set { SetParameter(22044, value); }}
	/// <summary>PID: 22045  | Type: read | EXCEPTIONS: N/A = 0</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsdiscontinuitytime_22045 {get { return GetParameter(22045); }set { SetParameter(22045, value); }}
	/// <summary>PID: 22045  | Type: read | EXCEPTIONS: N/A = 0</summary>
	public System.Object Ipsystemstatsdiscontinuitytime {get { return GetParameter(22045); }set { SetParameter(22045, value); }}
	/// <summary>PID: 22046  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsrefreshrate_22046 {get { return GetParameter(22046); }set { SetParameter(22046, value); }}
	/// <summary>PID: 22046  | Type: read</summary>
	public System.Object Ipsystemstatsrefreshrate {get { return GetParameter(22046); }set { SetParameter(22046, value); }}
	/// <summary>PID: 22200  | Type: read | DISCREETS: Other = 1, Constant = 2, RSRE = 3, VANJ = 4, RFC 2988 = 5</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Tcprtoalgorithm_22200 {get { return GetParameter(22200); }set { SetParameter(22200, value); }}
	/// <summary>PID: 22200  | Type: read | DISCREETS: Other = 1, Constant = 2, RSRE = 3, VANJ = 4, RFC 2988 = 5</summary>
	public System.Object Tcprtoalgorithm {get { return GetParameter(22200); }set { SetParameter(22200, value); }}
	/// <summary>PID: 22201  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Tcprtomin_22201 {get { return GetParameter(22201); }set { SetParameter(22201, value); }}
	/// <summary>PID: 22201  | Type: read</summary>
	public System.Object Tcprtomin {get { return GetParameter(22201); }set { SetParameter(22201, value); }}
	/// <summary>PID: 22202  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Tcprtomax_22202 {get { return GetParameter(22202); }set { SetParameter(22202, value); }}
	/// <summary>PID: 22202  | Type: read</summary>
	public System.Object Tcprtomax {get { return GetParameter(22202); }set { SetParameter(22202, value); }}
	/// <summary>PID: 22203  | Type: read | EXCEPTIONS: Dynamic = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Tcpmaxconn_22203 {get { return GetParameter(22203); }set { SetParameter(22203, value); }}
	/// <summary>PID: 22203  | Type: read | EXCEPTIONS: Dynamic = -1</summary>
	public System.Object Tcpmaxconn {get { return GetParameter(22203); }set { SetParameter(22203, value); }}
	/// <summary>PID: 22204  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Tcpactiveopens_22204 {get { return GetParameter(22204); }set { SetParameter(22204, value); }}
	/// <summary>PID: 22204  | Type: read</summary>
	public System.Object Tcpactiveopens {get { return GetParameter(22204); }set { SetParameter(22204, value); }}
	/// <summary>PID: 22205  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Tcppassiveopens_22205 {get { return GetParameter(22205); }set { SetParameter(22205, value); }}
	/// <summary>PID: 22205  | Type: read</summary>
	public System.Object Tcppassiveopens {get { return GetParameter(22205); }set { SetParameter(22205, value); }}
	/// <summary>PID: 22206  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Tcpattemptfails_22206 {get { return GetParameter(22206); }set { SetParameter(22206, value); }}
	/// <summary>PID: 22206  | Type: read</summary>
	public System.Object Tcpattemptfails {get { return GetParameter(22206); }set { SetParameter(22206, value); }}
	/// <summary>PID: 22207  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Tcpestabresets_22207 {get { return GetParameter(22207); }set { SetParameter(22207, value); }}
	/// <summary>PID: 22207  | Type: read</summary>
	public System.Object Tcpestabresets {get { return GetParameter(22207); }set { SetParameter(22207, value); }}
	/// <summary>PID: 22208  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Tcpcurrestab_22208 {get { return GetParameter(22208); }set { SetParameter(22208, value); }}
	/// <summary>PID: 22208  | Type: read</summary>
	public System.Object Tcpcurrestab {get { return GetParameter(22208); }set { SetParameter(22208, value); }}
	/// <summary>PID: 22209  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Tcpinsegs_22209 {get { return GetParameter(22209); }set { SetParameter(22209, value); }}
	/// <summary>PID: 22209  | Type: read</summary>
	public System.Object Tcpinsegs {get { return GetParameter(22209); }set { SetParameter(22209, value); }}
	/// <summary>PID: 22210  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Tcpoutsegs_22210 {get { return GetParameter(22210); }set { SetParameter(22210, value); }}
	/// <summary>PID: 22210  | Type: read</summary>
	public System.Object Tcpoutsegs {get { return GetParameter(22210); }set { SetParameter(22210, value); }}
	/// <summary>PID: 22211  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Tcpretranssegs_22211 {get { return GetParameter(22211); }set { SetParameter(22211, value); }}
	/// <summary>PID: 22211  | Type: read</summary>
	public System.Object Tcpretranssegs {get { return GetParameter(22211); }set { SetParameter(22211, value); }}
	/// <summary>PID: 22212  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Tcpinerrs_22212 {get { return GetParameter(22212); }set { SetParameter(22212, value); }}
	/// <summary>PID: 22212  | Type: read</summary>
	public System.Object Tcpinerrs {get { return GetParameter(22212); }set { SetParameter(22212, value); }}
	/// <summary>PID: 22213  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Tcpoutrsts_22213 {get { return GetParameter(22213); }set { SetParameter(22213, value); }}
	/// <summary>PID: 22213  | Type: read</summary>
	public System.Object Tcpoutrsts {get { return GetParameter(22213); }set { SetParameter(22213, value); }}
	/// <summary>PID: 22299  | Type: write | DISCREETS: TCP Connection... = TCP Connection</summary>
	public System.Object Pagebuttontcp_22299 {get { return GetParameter(22299); }set { SetParameter(22299, value); }}
	/// <summary>PID: 22299  | Type: write | DISCREETS: TCP Connection... = TCP Connection</summary>
	public System.Object Pagebuttontcp {get { return Write.Pagebuttontcp; }set { Write.Pagebuttontcp = value; }}
	/// <summary>PID: 22401  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Tcpconnectiontableinstance_22401 {get { return GetParameter(22401); }set { SetParameter(22401, value); }}
	/// <summary>PID: 22401  | Type: read</summary>
	public System.Object Tcpconnectiontableinstance {get { return GetParameter(22401); }set { SetParameter(22401, value); }}
	/// <summary>PID: 22402  | Type: read | DISCREETS: Closed = 1, Listen = 2, Sync Sent = 3, Sync Received = 4, Established = 5, Fin Wait 1 = 6, Fin Wait 2 = 7, Close Wait = 8, Last ACK = 9, Closing = 10, Time Wait = 11, Delete TCB = 12</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Tcpconnectionstate_22402 {get { return GetParameter(22402); }set { SetParameter(22402, value); }}
	/// <summary>PID: 22402  | Type: read | DISCREETS: Closed = 1, Listen = 2, Sync Sent = 3, Sync Received = 4, Established = 5, Fin Wait 1 = 6, Fin Wait 2 = 7, Close Wait = 8, Last ACK = 9, Closing = 10, Time Wait = 11, Delete TCB = 12</summary>
	public System.Object Tcpconnectionstate {get { return GetParameter(22402); }set { SetParameter(22402, value); }}
	/// <summary>PID: 22403  | Type: read | EXCEPTIONS: N/A = 0</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Tcpconnectionprocess_22403 {get { return GetParameter(22403); }set { SetParameter(22403, value); }}
	/// <summary>PID: 22403  | Type: read | EXCEPTIONS: N/A = 0</summary>
	public System.Object Tcpconnectionprocess {get { return GetParameter(22403); }set { SetParameter(22403, value); }}
	/// <summary>PID: 22404  | Type: read | DISCREETS: Unknown = 0, IPv4 = 1, IPv6 = 2, IPv4z = 3, IPv6z = 4, DNS = 16</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Tcpconnectionlocalipaddresstype_22404 {get { return GetParameter(22404); }set { SetParameter(22404, value); }}
	/// <summary>PID: 22404  | Type: read | DISCREETS: Unknown = 0, IPv4 = 1, IPv6 = 2, IPv4z = 3, IPv6z = 4, DNS = 16</summary>
	public System.Object Tcpconnectionlocalipaddresstype {get { return GetParameter(22404); }set { SetParameter(22404, value); }}
	/// <summary>PID: 22405  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Tcpconnectionlocalipaddress_22405 {get { return GetParameter(22405); }set { SetParameter(22405, value); }}
	/// <summary>PID: 22405  | Type: read</summary>
	public System.Object Tcpconnectionlocalipaddress {get { return GetParameter(22405); }set { SetParameter(22405, value); }}
	/// <summary>PID: 22406  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Tcpconnectionlocalipaddressport_22406 {get { return GetParameter(22406); }set { SetParameter(22406, value); }}
	/// <summary>PID: 22406  | Type: read</summary>
	public System.Object Tcpconnectionlocalipaddressport {get { return GetParameter(22406); }set { SetParameter(22406, value); }}
	/// <summary>PID: 22407  | Type: read | DISCREETS: Unknown = 0, IPv4 = 1, IPv6 = 2, IPv4z = 3, IPv6z = 4, DNS = 16</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Tcpconnectionremoteipaddresstype_22407 {get { return GetParameter(22407); }set { SetParameter(22407, value); }}
	/// <summary>PID: 22407  | Type: read | DISCREETS: Unknown = 0, IPv4 = 1, IPv6 = 2, IPv4z = 3, IPv6z = 4, DNS = 16</summary>
	public System.Object Tcpconnectionremoteipaddresstype {get { return GetParameter(22407); }set { SetParameter(22407, value); }}
	/// <summary>PID: 22408  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Tcpconnectionremoteipaddress_22408 {get { return GetParameter(22408); }set { SetParameter(22408, value); }}
	/// <summary>PID: 22408  | Type: read</summary>
	public System.Object Tcpconnectionremoteipaddress {get { return GetParameter(22408); }set { SetParameter(22408, value); }}
	/// <summary>PID: 22409  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Tcpconnectionremoteipaddressport_22409 {get { return GetParameter(22409); }set { SetParameter(22409, value); }}
	/// <summary>PID: 22409  | Type: read</summary>
	public System.Object Tcpconnectionremoteipaddressport {get { return GetParameter(22409); }set { SetParameter(22409, value); }}
	/// <summary>PID: 22502  | Type: write | DISCREETS: Closed = 1, Listen = 2, Sync Sent = 3, Sync Received = 4, Established = 5, Fin Wait 1 = 6, Fin Wait 2 = 7, Close Wait = 8, Last ACK = 9, Closing = 10, Time Wait = 11, Delete TCB = 12</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Tcpconnectionstate_22502 {get { return GetParameter(22502); }set { SetParameter(22502, value); }}
	/// <summary>PID: 40000  | Type: pollingip</summary>
	public System.Object Deviceaddress_pollingip {get { return GetParameter(40000); }set { SetParameter(40000, value); }}
	/// <summary>PID: 40001  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollingipaddress_40001 {get { return GetParameter(40001); }set { SetParameter(40001, value); }}
	/// <summary>PID: 40001  | Type: read</summary>
	public System.Object Pollingipaddress {get { return GetParameter(40001); }set { SetParameter(40001, value); }}
	/// <summary>PID: 40003  | Type: write</summary>
	public System.Object Triggerupdateaddress_40003 {get { return GetParameter(40003); }set { SetParameter(40003, value); }}
	/// <summary>PID: 40003  | Type: write</summary>
	public System.Object Triggerupdateaddress {get { return Write.Triggerupdateaddress; }set { Write.Triggerupdateaddress = value; }}
	/// <summary>PID: 40004  | Type: write</summary>
	public System.Object Triggerrowdisabled_40004 {get { return GetParameter(40004); }set { SetParameter(40004, value); }}
	/// <summary>PID: 40004  | Type: write</summary>
	public System.Object Triggerrowdisabled {get { return Write.Triggerrowdisabled; }set { Write.Triggerrowdisabled = value; }}
	/// <summary>PID: 40005  | Type: write</summary>
	public System.Object Triggerrowundefined_40005 {get { return GetParameter(40005); }set { SetParameter(40005, value); }}
	/// <summary>PID: 40005  | Type: write</summary>
	public System.Object Triggerrowundefined {get { return Write.Triggerrowundefined; }set { Write.Triggerrowundefined = value; }}
	/// <summary>PID: 40010  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Portlistportnumber_40010 {get { return GetParameter(40010); }set { SetParameter(40010, value); }}
	/// <summary>PID: 40010  | Type: read</summary>
	public System.Object Portlistportnumber {get { return GetParameter(40010); }set { SetParameter(40010, value); }}
	/// <summary>PID: 40011  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Portlisttimeoutport_40011 {get { return GetParameter(40011); }set { SetParameter(40011, value); }}
	/// <summary>PID: 40011  | Type: read</summary>
	public System.Object Portlisttimeoutport {get { return GetParameter(40011); }set { SetParameter(40011, value); }}
	/// <summary>PID: 40012  | Type: read | DISCREETS: Disabled = 0, Enabled = 1, Remove = 2</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Portliststatus_40012 {get { return GetParameter(40012); }set { SetParameter(40012, value); }}
	/// <summary>PID: 40012  | Type: read | DISCREETS: Disabled = 0, Enabled = 1, Remove = 2</summary>
	public System.Object Portliststatus {get { return GetParameter(40012); }set { SetParameter(40012, value); }}
	/// <summary>PID: 40013  | Type: read | EXCEPTIONS: Disabled = -1, Undefined = -2</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Portlistportresult_40013 {get { return GetParameter(40013); }set { SetParameter(40013, value); }}
	/// <summary>PID: 40013  | Type: read | EXCEPTIONS: Disabled = -1, Undefined = -2</summary>
	public System.Object Portlistportresult {get { return GetParameter(40013); }set { SetParameter(40013, value); }}
	/// <summary>PID: 40014  | Type: read | EXCEPTIONS: Disabled = -1, Undefined = -2</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Portlistdelay_40014 {get { return GetParameter(40014); }set { SetParameter(40014, value); }}
	/// <summary>PID: 40014  | Type: read | EXCEPTIONS: Disabled = -1, Undefined = -2</summary>
	public System.Object Portlistdelay {get { return GetParameter(40014); }set { SetParameter(40014, value); }}
	/// <summary>PID: 40015  | Type: read | EXCEPTIONS: Disabled = -1, Undefined = -2</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Portlistpreviousexecution_40015 {get { return GetParameter(40015); }set { SetParameter(40015, value); }}
	/// <summary>PID: 40015  | Type: read | EXCEPTIONS: Disabled = -1, Undefined = -2</summary>
	public System.Object Portlistpreviousexecution {get { return GetParameter(40015); }set { SetParameter(40015, value); }}
	/// <summary>PID: 40016  | Type: read | EXCEPTIONS: Disabled = -1, Undefined = -2</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Portlistcomment_40016 {get { return GetParameter(40016); }set { SetParameter(40016, value); }}
	/// <summary>PID: 40016  | Type: read | EXCEPTIONS: Disabled = -1, Undefined = -2</summary>
	public System.Object Portlistcomment {get { return GetParameter(40016); }set { SetParameter(40016, value); }}
	/// <summary>PID: 40017  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Portlistpreviousexecutionbackup_40017 {get { return GetParameter(40017); }set { SetParameter(40017, value); }}
	/// <summary>PID: 40017  | Type: read</summary>
	public System.Object Portlistpreviousexecutionbackup {get { return GetParameter(40017); }set { SetParameter(40017, value); }}
	/// <summary>PID: 40018  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Portlistretries_40018 {get { return GetParameter(40018); }set { SetParameter(40018, value); }}
	/// <summary>PID: 40018  | Type: read</summary>
	public System.Object Portlistretries {get { return GetParameter(40018); }set { SetParameter(40018, value); }}
	/// <summary>PID: 40019  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Portlisttimeuntilnextpoll_40019 {get { return GetParameter(40019); }set { SetParameter(40019, value); }}
	/// <summary>PID: 40019  | Type: read</summary>
	public System.Object Portlisttimeuntilnextpoll {get { return GetParameter(40019); }set { SetParameter(40019, value); }}
	/// <summary>PID: 40021  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Portlisttimeoutport_40021 {get { return GetParameter(40021); }set { SetParameter(40021, value); }}
	/// <summary>PID: 40022  | Type: write | DISCREETS: Disabled = 0, Enabled = 1, Remove = 2</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Portliststatus_40022 {get { return GetParameter(40022); }set { SetParameter(40022, value); }}
	/// <summary>PID: 40028  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Portlistretries_40028 {get { return GetParameter(40028); }set { SetParameter(40028, value); }}
	/// <summary>PID: 40031  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollingperiod_40031 {get { return GetParameter(40031); }set { SetParameter(40031, value); }}
	/// <summary>PID: 40031  | Type: read</summary>
	public System.Object Pollingperiod {get { return GetParameter(40031); }set { SetParameter(40031, value); }}
	/// <summary>PID: 40032  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollingperiod_40032 {get { return GetParameter(40032); }set { SetParameter(40032, value); }}
	/// <summary>PID: 40033  | Type: read | DISCREETS: Disabled = 0, Enabled = 1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollingexecution_40033 {get { return GetParameter(40033); }set { SetParameter(40033, value); }}
	/// <summary>PID: 40033  | Type: read | DISCREETS: Disabled = 0, Enabled = 1</summary>
	public System.Object Pollingexecution {get { return GetParameter(40033); }set { SetParameter(40033, value); }}
	/// <summary>PID: 40034  | Type: write | DISCREETS: Disabled = 0, Enabled = 1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollingexecution_40034 {get { return GetParameter(40034); }set { SetParameter(40034, value); }}
	/// <summary>PID: 40043  | Type: write</summary>
	public System.Object Addport_40043 {get { return GetParameter(40043); }set { SetParameter(40043, value); }}
	/// <summary>PID: 40043  | Type: write</summary>
	public System.Object Addport {get { return Write.Addport; }set { Write.Addport = value; }}
	/// <summary>PID: 40045  | Type: write</summary>
	public System.Object Removeport_40045 {get { return GetParameter(40045); }set { SetParameter(40045, value); }}
	/// <summary>PID: 40045  | Type: write</summary>
	public System.Object Removeport {get { return Write.Removeport; }set { Write.Removeport = value; }}
	/// <summary>PID: 49998  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Remotedcfinterfaceid_49998 {get { return GetParameter(49998); }set { SetParameter(49998, value); }}
	/// <summary>PID: 49998  | Type: read</summary>
	public System.Object Remotedcfinterfaceid {get { return GetParameter(49998); }set { SetParameter(49998, value); }}
	/// <summary>PID: 49999  | Type: dummy</summary>
	public System.Object Runqactionpingfunction_dummy {get { return GetParameter(49999); }set { SetParameter(49999, value); }}
	/// <summary>PID: 50000  | Type: read | DISCREETS: Disabled = 0, Enabled = 1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pingactive_50000 {get { return GetParameter(50000); }set { SetParameter(50000, value); }}
	/// <summary>PID: 50000  | Type: read | DISCREETS: Disabled = 0, Enabled = 1</summary>
	public System.Object Pingactive {get { return GetParameter(50000); }set { SetParameter(50000, value); }}
	/// <summary>PID: 50001  | Type: write | DISCREETS: Disabled = 0, Enabled = 1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pingactive_50001 {get { return GetParameter(50001); }set { SetParameter(50001, value); }}
	/// <summary>PID: 50002  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pingcycle_50002 {get { return GetParameter(50002); }set { SetParameter(50002, value); }}
	/// <summary>PID: 50002  | Type: read</summary>
	public System.Object Pingcycle {get { return GetParameter(50002); }set { SetParameter(50002, value); }}
	/// <summary>PID: 50003  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pingcycle_50003 {get { return GetParameter(50003); }set { SetParameter(50003, value); }}
	/// <summary>PID: 50004  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pingtimeout_50004 {get { return GetParameter(50004); }set { SetParameter(50004, value); }}
	/// <summary>PID: 50004  | Type: read</summary>
	public System.Object Pingtimeout {get { return GetParameter(50004); }set { SetParameter(50004, value); }}
	/// <summary>PID: 50005  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pingtimeout_50005 {get { return GetParameter(50005); }set { SetParameter(50005, value); }}
	/// <summary>PID: 50006  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pingnumber_50006 {get { return GetParameter(50006); }set { SetParameter(50006, value); }}
	/// <summary>PID: 50006  | Type: read</summary>
	public System.Object Pingnumber {get { return GetParameter(50006); }set { SetParameter(50006, value); }}
	/// <summary>PID: 50007  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pingnumber_50007 {get { return GetParameter(50007); }set { SetParameter(50007, value); }}
	/// <summary>PID: 50009  | Type: fixed</summary>
	public System.Object Val0__fixed {get { return GetParameter(50009); }set { SetParameter(50009, value); }}
	/// <summary>PID: 50010  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pingpreviousexecution_50010 {get { return GetParameter(50010); }set { SetParameter(50010, value); }}
	/// <summary>PID: 50010  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Pingpreviousexecution {get { return GetParameter(50010); }set { SetParameter(50010, value); }}
	/// <summary>PID: 50012  | Type: read | DISCREETS: Failed = 0, Success = 1 | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pingresult_50012 {get { return GetParameter(50012); }set { SetParameter(50012, value); }}
	/// <summary>PID: 50012  | Type: read | DISCREETS: Failed = 0, Success = 1 | EXCEPTIONS: N/A = -1</summary>
	public System.Object Pingresult {get { return GetParameter(50012); }set { SetParameter(50012, value); }}
	/// <summary>PID: 50014  | Type: read | EXCEPTIONS: N/A = -1, Timeout = -2</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pingmeanrtt_50014 {get { return GetParameter(50014); }set { SetParameter(50014, value); }}
	/// <summary>PID: 50014  | Type: read | EXCEPTIONS: N/A = -1, Timeout = -2</summary>
	public System.Object Pingmeanrtt {get { return GetParameter(50014); }set { SetParameter(50014, value); }}
	/// <summary>PID: 50016  | Type: read | EXCEPTIONS: N/A = -1, Timeout = -2</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pingminrtt_50016 {get { return GetParameter(50016); }set { SetParameter(50016, value); }}
	/// <summary>PID: 50016  | Type: read | EXCEPTIONS: N/A = -1, Timeout = -2</summary>
	public System.Object Pingminrtt {get { return GetParameter(50016); }set { SetParameter(50016, value); }}
	/// <summary>PID: 50017  | Type: read | EXCEPTIONS: N/A = -1, Timeout = -2</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pingmaxrtt_50017 {get { return GetParameter(50017); }set { SetParameter(50017, value); }}
	/// <summary>PID: 50017  | Type: read | EXCEPTIONS: N/A = -1, Timeout = -2</summary>
	public System.Object Pingmaxrtt {get { return GetParameter(50017); }set { SetParameter(50017, value); }}
	/// <summary>PID: 50018  | Type: read | EXCEPTIONS: N/A = -1, Timeout = -2</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pingavgsuccess_50018 {get { return GetParameter(50018); }set { SetParameter(50018, value); }}
	/// <summary>PID: 50018  | Type: read | EXCEPTIONS: N/A = -1, Timeout = -2</summary>
	public System.Object Pingavgsuccess {get { return GetParameter(50018); }set { SetParameter(50018, value); }}
	/// <summary>PID: 50021  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pingexecutioncounter_50021 {get { return GetParameter(50021); }set { SetParameter(50021, value); }}
	/// <summary>PID: 50021  | Type: read</summary>
	public System.Object Pingexecutioncounter {get { return GetParameter(50021); }set { SetParameter(50021, value); }}
	/// <summary>PID: 50022  | Type: pollingip</summary>
	public System.Object Pingpollingipaddress_pollingip {get { return GetParameter(50022); }set { SetParameter(50022, value); }}
	/// <summary>PID: 50023  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pingstartstoptimer_50023 {get { return GetParameter(50023); }set { SetParameter(50023, value); }}
	/// <summary>PID: 50023  | Type: read</summary>
	public System.Object Pingstartstoptimer {get { return GetParameter(50023); }set { SetParameter(50023, value); }}
	/// <summary>PID: 50024  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pingcyclerttcounter_50024 {get { return GetParameter(50024); }set { SetParameter(50024, value); }}
	/// <summary>PID: 50024  | Type: read</summary>
	public System.Object Pingcyclerttcounter {get { return GetParameter(50024); }set { SetParameter(50024, value); }}
	/// <summary>PID: 50025  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pingcyclerequestscounter_50025 {get { return GetParameter(50025); }set { SetParameter(50025, value); }}
	/// <summary>PID: 50025  | Type: read</summary>
	public System.Object Pingcyclerequestscounter {get { return GetParameter(50025); }set { SetParameter(50025, value); }}
	/// <summary>PID: 50026  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pingcyclesuccesscounter_50026 {get { return GetParameter(50026); }set { SetParameter(50026, value); }}
	/// <summary>PID: 50026  | Type: read</summary>
	public System.Object Pingcyclesuccesscounter {get { return GetParameter(50026); }set { SetParameter(50026, value); }}
	/// <summary>PID: 50027  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pingcycleminrtt_50027 {get { return GetParameter(50027); }set { SetParameter(50027, value); }}
	/// <summary>PID: 50027  | Type: read</summary>
	public System.Object Pingcycleminrtt {get { return GetParameter(50027); }set { SetParameter(50027, value); }}
	/// <summary>PID: 50028  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pingcyclemaxrtt_50028 {get { return GetParameter(50028); }set { SetParameter(50028, value); }}
	/// <summary>PID: 50028  | Type: read</summary>
	public System.Object Pingcyclemaxrtt {get { return GetParameter(50028); }set { SetParameter(50028, value); }}
	/// <summary>PID: 50029  | Type: fixed</summary>
	public System.Object Localhost__fixed {get { return GetParameter(50029); }set { SetParameter(50029, value); }}
	/// <summary>PID: 50039  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pingfirstdailyupdatetime_50039 {get { return GetParameter(50039); }set { SetParameter(50039, value); }}
	/// <summary>PID: 50039  | Type: read</summary>
	public System.Object Pingfirstdailyupdatetime {get { return GetParameter(50039); }set { SetParameter(50039, value); }}
	/// <summary>PID: 50040  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ping_dailyavailability_50040 {get { return GetParameter(50040); }set { SetParameter(50040, value); }}
	/// <summary>PID: 50040  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Ping_dailyavailability {get { return GetParameter(50040); }set { SetParameter(50040, value); }}
	/// <summary>PID: 50041  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ping_weeklyavailability_50041 {get { return GetParameter(50041); }set { SetParameter(50041, value); }}
	/// <summary>PID: 50041  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Ping_weeklyavailability {get { return GetParameter(50041); }set { SetParameter(50041, value); }}
	/// <summary>PID: 50042  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ping_monthlyavailability_50042 {get { return GetParameter(50042); }set { SetParameter(50042, value); }}
	/// <summary>PID: 50042  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Ping_monthlyavailability {get { return GetParameter(50042); }set { SetParameter(50042, value); }}
	/// <summary>PID: 50043  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ping_packetlossrequests_50043 {get { return GetParameter(50043); }set { SetParameter(50043, value); }}
	/// <summary>PID: 50043  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Ping_packetlossrequests {get { return GetParameter(50043); }set { SetParameter(50043, value); }}
	/// <summary>PID: 50044  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ping_packetlosscycles_50044 {get { return GetParameter(50044); }set { SetParameter(50044, value); }}
	/// <summary>PID: 50044  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Ping_packetlosscycles {get { return GetParameter(50044); }set { SetParameter(50044, value); }}
	/// <summary>PID: 50045  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ping_lastrequestsbuffer_50045 {get { return GetParameter(50045); }set { SetParameter(50045, value); }}
	/// <summary>PID: 50045  | Type: read</summary>
	public System.Object Ping_lastrequestsbuffer {get { return GetParameter(50045); }set { SetParameter(50045, value); }}
	/// <summary>PID: 50046  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ping_lastcyclesbuffer_50046 {get { return GetParameter(50046); }set { SetParameter(50046, value); }}
	/// <summary>PID: 50046  | Type: read</summary>
	public System.Object Ping_lastcyclesbuffer {get { return GetParameter(50046); }set { SetParameter(50046, value); }}
	/// <summary>PID: 50047  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pingrequestshistory_50047 {get { return GetParameter(50047); }set { SetParameter(50047, value); }}
	/// <summary>PID: 50047  | Type: read</summary>
	public System.Object Pingrequestshistory {get { return GetParameter(50047); }set { SetParameter(50047, value); }}
	/// <summary>PID: 50048  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pingrequestshistory_50048 {get { return GetParameter(50048); }set { SetParameter(50048, value); }}
	/// <summary>PID: 50050  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Refdailydate_50050 {get { return GetParameter(50050); }set { SetParameter(50050, value); }}
	/// <summary>PID: 50050  | Type: read</summary>
	public System.Object Refdailydate {get { return GetParameter(50050); }set { SetParameter(50050, value); }}
	/// <summary>PID: 50051  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Dailytotalcounter_50051 {get { return GetParameter(50051); }set { SetParameter(50051, value); }}
	/// <summary>PID: 50051  | Type: read</summary>
	public System.Object Dailytotalcounter {get { return GetParameter(50051); }set { SetParameter(50051, value); }}
	/// <summary>PID: 50052  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Dailysuccesscounter_50052 {get { return GetParameter(50052); }set { SetParameter(50052, value); }}
	/// <summary>PID: 50052  | Type: read</summary>
	public System.Object Dailysuccesscounter {get { return GetParameter(50052); }set { SetParameter(50052, value); }}
	/// <summary>PID: 50053  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Refweeklydate_50053 {get { return GetParameter(50053); }set { SetParameter(50053, value); }}
	/// <summary>PID: 50053  | Type: read</summary>
	public System.Object Refweeklydate {get { return GetParameter(50053); }set { SetParameter(50053, value); }}
	/// <summary>PID: 50054  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Weeklytotalcounter_50054 {get { return GetParameter(50054); }set { SetParameter(50054, value); }}
	/// <summary>PID: 50054  | Type: read</summary>
	public System.Object Weeklytotalcounter {get { return GetParameter(50054); }set { SetParameter(50054, value); }}
	/// <summary>PID: 50055  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Weeklysuccesscounter_50055 {get { return GetParameter(50055); }set { SetParameter(50055, value); }}
	/// <summary>PID: 50055  | Type: read</summary>
	public System.Object Weeklysuccesscounter {get { return GetParameter(50055); }set { SetParameter(50055, value); }}
	/// <summary>PID: 50056  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Refmonthlydate_50056 {get { return GetParameter(50056); }set { SetParameter(50056, value); }}
	/// <summary>PID: 50056  | Type: read</summary>
	public System.Object Refmonthlydate {get { return GetParameter(50056); }set { SetParameter(50056, value); }}
	/// <summary>PID: 50057  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Monthlytotalcounter_50057 {get { return GetParameter(50057); }set { SetParameter(50057, value); }}
	/// <summary>PID: 50057  | Type: read</summary>
	public System.Object Monthlytotalcounter {get { return GetParameter(50057); }set { SetParameter(50057, value); }}
	/// <summary>PID: 50058  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Monthlysuccesscounter_50058 {get { return GetParameter(50058); }set { SetParameter(50058, value); }}
	/// <summary>PID: 50058  | Type: read</summary>
	public System.Object Monthlysuccesscounter {get { return GetParameter(50058); }set { SetParameter(50058, value); }}
	/// <summary>PID: 50100  | Type: read | DISCREETS: Disabled = 0, Enabled = 1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollhpparameters_50100 {get { return GetParameter(50100); }set { SetParameter(50100, value); }}
	/// <summary>PID: 50100  | Type: read | DISCREETS: Disabled = 0, Enabled = 1</summary>
	public System.Object Pollhpparameters {get { return GetParameter(50100); }set { SetParameter(50100, value); }}
	/// <summary>PID: 50101  | Type: read | EXCEPTIONS: Not Applicable = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqhoname_50101 {get { return GetParameter(50101); }set { SetParameter(50101, value); }}
	/// <summary>PID: 50101  | Type: read | EXCEPTIONS: Not Applicable = -1</summary>
	public System.Object Cpqhoname {get { return GetParameter(50101); }set { SetParameter(50101, value); }}
	/// <summary>PID: 50102  | Type: read | EXCEPTIONS: Not Applicable = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqhoversion_50102 {get { return GetParameter(50102); }set { SetParameter(50102, value); }}
	/// <summary>PID: 50102  | Type: read | EXCEPTIONS: Not Applicable = -1</summary>
	public System.Object Cpqhoversion {get { return GetParameter(50102); }set { SetParameter(50102, value); }}
	/// <summary>PID: 50103  | Type: read | EXCEPTIONS: Not Applicable = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqhodesc_50103 {get { return GetParameter(50103); }set { SetParameter(50103, value); }}
	/// <summary>PID: 50103  | Type: read | EXCEPTIONS: Not Applicable = -1</summary>
	public System.Object Cpqhodesc {get { return GetParameter(50103); }set { SetParameter(50103, value); }}
	/// <summary>PID: 50104  | Type: read | EXCEPTIONS: Not Applicable = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqsiproductname_50104 {get { return GetParameter(50104); }set { SetParameter(50104, value); }}
	/// <summary>PID: 50104  | Type: read | EXCEPTIONS: Not Applicable = -1</summary>
	public System.Object Cpqsiproductname {get { return GetParameter(50104); }set { SetParameter(50104, value); }}
	/// <summary>PID: 50105  | Type: read | EXCEPTIONS: Not Applicable = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqsisysserialnum_50105 {get { return GetParameter(50105); }set { SetParameter(50105, value); }}
	/// <summary>PID: 50105  | Type: read | EXCEPTIONS: Not Applicable = -1</summary>
	public System.Object Cpqsisysserialnum {get { return GetParameter(50105); }set { SetParameter(50105, value); }}
	/// <summary>PID: 50106  | Type: read | EXCEPTIONS: Not Applicable = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqsesysromver_50106 {get { return GetParameter(50106); }set { SetParameter(50106, value); }}
	/// <summary>PID: 50106  | Type: read | EXCEPTIONS: Not Applicable = -1</summary>
	public System.Object Cpqsesysromver {get { return GetParameter(50106); }set { SetParameter(50106, value); }}
	/// <summary>PID: 50110  | Type: read | DISCREETS: Other = 1, OK = 2, Degraded = 3, Failed = 4 | EXCEPTIONS: Not Applicable = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqhethermaltempstatus_50110 {get { return GetParameter(50110); }set { SetParameter(50110, value); }}
	/// <summary>PID: 50110  | Type: read | DISCREETS: Other = 1, OK = 2, Degraded = 3, Failed = 4 | EXCEPTIONS: Not Applicable = -1</summary>
	public System.Object Cpqhethermaltempstatus {get { return GetParameter(50110); }set { SetParameter(50110, value); }}
	/// <summary>PID: 50111  | Type: read | DISCREETS: Other = 1, OK = 2, Degraded = 3, Failed = 4 | EXCEPTIONS: Not Applicable = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqhethermalsystemfanstatus_50111 {get { return GetParameter(50111); }set { SetParameter(50111, value); }}
	/// <summary>PID: 50111  | Type: read | DISCREETS: Other = 1, OK = 2, Degraded = 3, Failed = 4 | EXCEPTIONS: Not Applicable = -1</summary>
	public System.Object Cpqhethermalsystemfanstatus {get { return GetParameter(50111); }set { SetParameter(50111, value); }}
	/// <summary>PID: 50112  | Type: read | DISCREETS: Other = 1, OK = 2, Failed = 4 | EXCEPTIONS: Not Applicable = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqhethermalcpufanstatus_50112 {get { return GetParameter(50112); }set { SetParameter(50112, value); }}
	/// <summary>PID: 50112  | Type: read | DISCREETS: Other = 1, OK = 2, Failed = 4 | EXCEPTIONS: Not Applicable = -1</summary>
	public System.Object Cpqhethermalcpufanstatus {get { return GetParameter(50112); }set { SetParameter(50112, value); }}
	/// <summary>PID: 50113  | Type: read | DISCREETS: Other = 1, OK = 2, Degraded = 3, Failed = 4 | EXCEPTIONS: Not Applicable = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hppwrsupplycondition_50113 {get { return GetParameter(50113); }set { SetParameter(50113, value); }}
	/// <summary>PID: 50113  | Type: read | DISCREETS: Other = 1, OK = 2, Degraded = 3, Failed = 4 | EXCEPTIONS: Not Applicable = -1</summary>
	public System.Object Hppwrsupplycondition {get { return GetParameter(50113); }set { SetParameter(50113, value); }}
	/// <summary>PID: 50114  | Type: read | DISCREETS: Other = 1, OK = 2, Degraded = 3, Failed = 4 | EXCEPTIONS: Not Applicable = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqhemibcondition_50114 {get { return GetParameter(50114); }set { SetParameter(50114, value); }}
	/// <summary>PID: 50114  | Type: read | DISCREETS: Other = 1, OK = 2, Degraded = 3, Failed = 4 | EXCEPTIONS: Not Applicable = -1</summary>
	public System.Object Cpqhemibcondition {get { return GetParameter(50114); }set { SetParameter(50114, value); }}
	/// <summary>PID: 50150  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hppollingip_50150 {get { return GetParameter(50150); }set { SetParameter(50150, value); }}
	/// <summary>PID: 50150  | Type: read</summary>
	public System.Object Hppollingip {get { return GetParameter(50150); }set { SetParameter(50150, value); }}
	/// <summary>PID: 50160  | Type: read | DISCREETS: Disabled = 0, Enabled = 1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hppollingipstatus_50160 {get { return GetParameter(50160); }set { SetParameter(50160, value); }}
	/// <summary>PID: 50160  | Type: read | DISCREETS: Disabled = 0, Enabled = 1</summary>
	public System.Object Hppollingipstatus {get { return GetParameter(50160); }set { SetParameter(50160, value); }}
	/// <summary>PID: 50200  | Type: write | DISCREETS: Disabled = 0, Enabled = 1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Pollhpparameters_50200 {get { return GetParameter(50200); }set { SetParameter(50200, value); }}
	/// <summary>PID: 50250  | Type: write</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hppollingip_50250 {get { return GetParameter(50250); }set { SetParameter(50250, value); }}
	/// <summary>PID: 50260  | Type: write | DISCREETS: Disabled = 0, Enabled = 1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hppollingipstatus_50260 {get { return GetParameter(50260); }set { SetParameter(50260, value); }}
	/// <summary>PID: 50311  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hptemptable_instance_50311 {get { return GetParameter(50311); }set { SetParameter(50311, value); }}
	/// <summary>PID: 50311  | Type: read</summary>
	public System.Object Hptemptable_instance {get { return GetParameter(50311); }set { SetParameter(50311, value); }}
	/// <summary>PID: 50312  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqhetemperaturechassis_50312 {get { return GetParameter(50312); }set { SetParameter(50312, value); }}
	/// <summary>PID: 50312  | Type: read</summary>
	public System.Object Cpqhetemperaturechassis {get { return GetParameter(50312); }set { SetParameter(50312, value); }}
	/// <summary>PID: 50313  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqhetemperatureindex_50313 {get { return GetParameter(50313); }set { SetParameter(50313, value); }}
	/// <summary>PID: 50313  | Type: read</summary>
	public System.Object Cpqhetemperatureindex {get { return GetParameter(50313); }set { SetParameter(50313, value); }}
	/// <summary>PID: 50314  | Type: read | DISCREETS: Other = 1, Unknown = 2, System = 3, System Board = 4, IO Board = 5, CPU = 6, Memory = 7, Storage = 8, Removable Media = 9, Power Supply = 10, Ambient = 11, Chassis = 12, Bridge Card = 13</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqhetemperaturelocale_50314 {get { return GetParameter(50314); }set { SetParameter(50314, value); }}
	/// <summary>PID: 50314  | Type: read | DISCREETS: Other = 1, Unknown = 2, System = 3, System Board = 4, IO Board = 5, CPU = 6, Memory = 7, Storage = 8, Removable Media = 9, Power Supply = 10, Ambient = 11, Chassis = 12, Bridge Card = 13</summary>
	public System.Object Cpqhetemperaturelocale {get { return GetParameter(50314); }set { SetParameter(50314, value); }}
	/// <summary>PID: 50315  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqhetemperaturecelsius_50315 {get { return GetParameter(50315); }set { SetParameter(50315, value); }}
	/// <summary>PID: 50315  | Type: read</summary>
	public System.Object Cpqhetemperaturecelsius {get { return GetParameter(50315); }set { SetParameter(50315, value); }}
	/// <summary>PID: 50316  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqhetemperaturethreshold_50316 {get { return GetParameter(50316); }set { SetParameter(50316, value); }}
	/// <summary>PID: 50316  | Type: read</summary>
	public System.Object Cpqhetemperaturethreshold {get { return GetParameter(50316); }set { SetParameter(50316, value); }}
	/// <summary>PID: 50317  | Type: read | DISCREETS: Other = 1, OK = 2, Degraded = 3, Failed = 4</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqhetemperaturecondition_50317 {get { return GetParameter(50317); }set { SetParameter(50317, value); }}
	/// <summary>PID: 50317  | Type: read | DISCREETS: Other = 1, OK = 2, Degraded = 3, Failed = 4</summary>
	public System.Object Cpqhetemperaturecondition {get { return GetParameter(50317); }set { SetParameter(50317, value); }}
	/// <summary>PID: 50318  | Type: read | DISCREETS: Other = 1, Blowout = 5, Caution = 9, Critical = 15</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqhetemperaturethresholdtype_50318 {get { return GetParameter(50318); }set { SetParameter(50318, value); }}
	/// <summary>PID: 50318  | Type: read | DISCREETS: Other = 1, Blowout = 5, Caution = 9, Critical = 15</summary>
	public System.Object Cpqhetemperaturethresholdtype {get { return GetParameter(50318); }set { SetParameter(50318, value); }}
	/// <summary>PID: 50319  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqhetemperaturehwlocation_50319 {get { return GetParameter(50319); }set { SetParameter(50319, value); }}
	/// <summary>PID: 50319  | Type: read</summary>
	public System.Object Cpqhetemperaturehwlocation {get { return GetParameter(50319); }set { SetParameter(50319, value); }}
	/// <summary>PID: 50320  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hptempidx_50320 {get { return GetParameter(50320); }set { SetParameter(50320, value); }}
	/// <summary>PID: 50320  | Type: read</summary>
	public System.Object Hptempidx {get { return GetParameter(50320); }set { SetParameter(50320, value); }}
	/// <summary>PID: 50401  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hppowersupplyinstance_50401 {get { return GetParameter(50401); }set { SetParameter(50401, value); }}
	/// <summary>PID: 50401  | Type: read</summary>
	public System.Object Hppowersupplyinstance {get { return GetParameter(50401); }set { SetParameter(50401, value); }}
	/// <summary>PID: 50402  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hppowersupplychassis_50402 {get { return GetParameter(50402); }set { SetParameter(50402, value); }}
	/// <summary>PID: 50402  | Type: read</summary>
	public System.Object Hppowersupplychassis {get { return GetParameter(50402); }set { SetParameter(50402, value); }}
	/// <summary>PID: 50404  | Type: read | DISCREETS: Other = 1, Absent = 2, Present = 3</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hppowersupplypresent_50404 {get { return GetParameter(50404); }set { SetParameter(50404, value); }}
	/// <summary>PID: 50404  | Type: read | DISCREETS: Other = 1, Absent = 2, Present = 3</summary>
	public System.Object Hppowersupplypresent {get { return GetParameter(50404); }set { SetParameter(50404, value); }}
	/// <summary>PID: 50405  | Type: read | DISCREETS: Other = 1, OK = 2, Degraded = 3, Failed = 4</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hppowersupplycondition_50405 {get { return GetParameter(50405); }set { SetParameter(50405, value); }}
	/// <summary>PID: 50405  | Type: read | DISCREETS: Other = 1, OK = 2, Degraded = 3, Failed = 4</summary>
	public System.Object Hppowersupplycondition {get { return GetParameter(50405); }set { SetParameter(50405, value); }}
	/// <summary>PID: 50406  | Type: read | DISCREETS: No Error = 1, General Failure = 2, BIST Failure = 3, Fan Failure = 4, Temp Failure = 5, Interlock Open = 6, EPROM Failed = 7, Vref Failed = 8, DAC Failed = 9, RAM Test Failed = 10, Voltage Channel Failed = 11, ORing Diode Failed = 12, Brown Out = 13, Give up On Startup = 14, NVRAM Invalid = 15, Calibration Table Invalid = 16</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hppowersupplystatus_50406 {get { return GetParameter(50406); }set { SetParameter(50406, value); }}
	/// <summary>PID: 50406  | Type: read | DISCREETS: No Error = 1, General Failure = 2, BIST Failure = 3, Fan Failure = 4, Temp Failure = 5, Interlock Open = 6, EPROM Failed = 7, Vref Failed = 8, DAC Failed = 9, RAM Test Failed = 10, Voltage Channel Failed = 11, ORing Diode Failed = 12, Brown Out = 13, Give up On Startup = 14, NVRAM Invalid = 15, Calibration Table Invalid = 16</summary>
	public System.Object Hppowersupplystatus {get { return GetParameter(50406); }set { SetParameter(50406, value); }}
	/// <summary>PID: 50407  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hppowersupplymainvoltage_50407 {get { return GetParameter(50407); }set { SetParameter(50407, value); }}
	/// <summary>PID: 50407  | Type: read</summary>
	public System.Object Hppowersupplymainvoltage {get { return GetParameter(50407); }set { SetParameter(50407, value); }}
	/// <summary>PID: 50408  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hppowersupplycapacityused_50408 {get { return GetParameter(50408); }set { SetParameter(50408, value); }}
	/// <summary>PID: 50408  | Type: read</summary>
	public System.Object Hppowersupplycapacityused {get { return GetParameter(50408); }set { SetParameter(50408, value); }}
	/// <summary>PID: 50409  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hppowersupplycapacitymaximum_50409 {get { return GetParameter(50409); }set { SetParameter(50409, value); }}
	/// <summary>PID: 50409  | Type: read</summary>
	public System.Object Hppowersupplycapacitymaximum {get { return GetParameter(50409); }set { SetParameter(50409, value); }}
	/// <summary>PID: 50410  | Type: read | DISCREETS: Other = 1, Not Redundant = 2, Redundant = 3</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hppowersupplyredundant_50410 {get { return GetParameter(50410); }set { SetParameter(50410, value); }}
	/// <summary>PID: 50410  | Type: read | DISCREETS: Other = 1, Not Redundant = 2, Redundant = 3</summary>
	public System.Object Hppowersupplyredundant {get { return GetParameter(50410); }set { SetParameter(50410, value); }}
	/// <summary>PID: 50414  | Type: read | DISCREETS: Other = 1, Non Hot Pluggable = 2, Hot Pluggable = 3</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hppowersupplyhotplug_50414 {get { return GetParameter(50414); }set { SetParameter(50414, value); }}
	/// <summary>PID: 50414  | Type: read | DISCREETS: Other = 1, Non Hot Pluggable = 2, Hot Pluggable = 3</summary>
	public System.Object Hppowersupplyhotplug {get { return GetParameter(50414); }set { SetParameter(50414, value); }}
	/// <summary>PID: 50501  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hpfantable_instance_50501 {get { return GetParameter(50501); }set { SetParameter(50501, value); }}
	/// <summary>PID: 50501  | Type: read</summary>
	public System.Object Hpfantable_instance {get { return GetParameter(50501); }set { SetParameter(50501, value); }}
	/// <summary>PID: 50502  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hpfanchassis_50502 {get { return GetParameter(50502); }set { SetParameter(50502, value); }}
	/// <summary>PID: 50502  | Type: read</summary>
	public System.Object Hpfanchassis {get { return GetParameter(50502); }set { SetParameter(50502, value); }}
	/// <summary>PID: 50503  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqheflttolfanindex_50503 {get { return GetParameter(50503); }set { SetParameter(50503, value); }}
	/// <summary>PID: 50503  | Type: read</summary>
	public System.Object Cpqheflttolfanindex {get { return GetParameter(50503); }set { SetParameter(50503, value); }}
	/// <summary>PID: 50504  | Type: read | DISCREETS: Other = 1, Unknown = 2, System = 3, System Board = 4, IO Board = 5, CPU = 6, Memory = 7, Storage = 8, Removable Media = 9, Power Supply = 10, Ambient = 11, Chassis = 12, Bridge Card = 13, Management Board = 14, Backplane = 15, Network Slot = 16, Blade Slot = 17, Virtual = 18</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqheflttolfanlocale_50504 {get { return GetParameter(50504); }set { SetParameter(50504, value); }}
	/// <summary>PID: 50504  | Type: read | DISCREETS: Other = 1, Unknown = 2, System = 3, System Board = 4, IO Board = 5, CPU = 6, Memory = 7, Storage = 8, Removable Media = 9, Power Supply = 10, Ambient = 11, Chassis = 12, Bridge Card = 13, Management Board = 14, Backplane = 15, Network Slot = 16, Blade Slot = 17, Virtual = 18</summary>
	public System.Object Cpqheflttolfanlocale {get { return GetParameter(50504); }set { SetParameter(50504, value); }}
	/// <summary>PID: 50505  | Type: read | DISCREETS: Other = 1, Absent = 2, Present = 3</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqheflttolfanpresent_50505 {get { return GetParameter(50505); }set { SetParameter(50505, value); }}
	/// <summary>PID: 50505  | Type: read | DISCREETS: Other = 1, Absent = 2, Present = 3</summary>
	public System.Object Cpqheflttolfanpresent {get { return GetParameter(50505); }set { SetParameter(50505, value); }}
	/// <summary>PID: 50506  | Type: read | DISCREETS: Other = 1, Tach Output = 2, Spin Detect = 3</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqheflttolfantype_50506 {get { return GetParameter(50506); }set { SetParameter(50506, value); }}
	/// <summary>PID: 50506  | Type: read | DISCREETS: Other = 1, Tach Output = 2, Spin Detect = 3</summary>
	public System.Object Cpqheflttolfantype {get { return GetParameter(50506); }set { SetParameter(50506, value); }}
	/// <summary>PID: 50507  | Type: read | DISCREETS: Other = 1, Normal = 2, High = 3</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqheflttolfanspeed_50507 {get { return GetParameter(50507); }set { SetParameter(50507, value); }}
	/// <summary>PID: 50507  | Type: read | DISCREETS: Other = 1, Normal = 2, High = 3</summary>
	public System.Object Cpqheflttolfanspeed {get { return GetParameter(50507); }set { SetParameter(50507, value); }}
	/// <summary>PID: 50508  | Type: read | DISCREETS: Other = 1, Not Redundant = 2, Redundant = 3</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqheflttolfanredundant_50508 {get { return GetParameter(50508); }set { SetParameter(50508, value); }}
	/// <summary>PID: 50508  | Type: read | DISCREETS: Other = 1, Not Redundant = 2, Redundant = 3</summary>
	public System.Object Cpqheflttolfanredundant {get { return GetParameter(50508); }set { SetParameter(50508, value); }}
	/// <summary>PID: 50510  | Type: read | DISCREETS: Other = 1, OK = 2, Degraded = 3, Failed = 4</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqheflttolfancondition_50510 {get { return GetParameter(50510); }set { SetParameter(50510, value); }}
	/// <summary>PID: 50510  | Type: read | DISCREETS: Other = 1, OK = 2, Degraded = 3, Failed = 4</summary>
	public System.Object Cpqheflttolfancondition {get { return GetParameter(50510); }set { SetParameter(50510, value); }}
	/// <summary>PID: 50511  | Type: read | DISCREETS: Other = 1, Non Hot Pluggable = 2, Hot Pluggable = 3</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqheflttolfanhotplug_50511 {get { return GetParameter(50511); }set { SetParameter(50511, value); }}
	/// <summary>PID: 50511  | Type: read | DISCREETS: Other = 1, Non Hot Pluggable = 2, Hot Pluggable = 3</summary>
	public System.Object Cpqheflttolfanhotplug {get { return GetParameter(50511); }set { SetParameter(50511, value); }}
	/// <summary>PID: 50513  | Type: read | EXCEPTIONS: N/A = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqheflttolfancurrentspeed_50513 {get { return GetParameter(50513); }set { SetParameter(50513, value); }}
	/// <summary>PID: 50513  | Type: read | EXCEPTIONS: N/A = -1</summary>
	public System.Object Cpqheflttolfancurrentspeed {get { return GetParameter(50513); }set { SetParameter(50513, value); }}
	/// <summary>PID: 50520  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hpfanidx_50520 {get { return GetParameter(50520); }set { SetParameter(50520, value); }}
	/// <summary>PID: 50520  | Type: read</summary>
	public System.Object Hpfanidx {get { return GetParameter(50520); }set { SetParameter(50520, value); }}
	/// <summary>PID: 50601  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqdacntlrindex_50601 {get { return GetParameter(50601); }set { SetParameter(50601, value); }}
	/// <summary>PID: 50601  | Type: read</summary>
	public System.Object Cpqdacntlrindex {get { return GetParameter(50601); }set { SetParameter(50601, value); }}
	/// <summary>PID: 50602  | Type: read | DISCREETS: Other = 1, Ida = 2, Ida Expansion = 3, Ida-2 = 4, Smart = 5, Smart-2 E = 6, Smart-2 P = 7, Smart-2 SL = 8, Smart-3100 ES = 9, Smart-3200 = 10, Smart-2 DH = 11, Smart-221 = 12, SA-4250 Es = 13, SA-4200 = 14, SA-Integrated = 15, SA-431 = 16, SA-5300 = 17, RAID Lc2 = 18, SA-5 I = 19, SA-532 = 20, SA-5312 = 21, SA-641 = 22, SA-642 = 23, SA-6400 = 24, SA-6400 Em = 25, SA-6 I = 26, SA-Generic = 27, SA-P600 = 29, SA-P400 = 30, SA-E200 = 31, SA-E200 I = 32, SA-P400 I = 33, SA-P800 = 34, SA-E500 = 35, SA-P700 M = 36, SA-P212 = 37, SA-P410 = 38, SA-P410 I = 39, SA-P411 = 40, SA-B110 I = 41, SA-P712 M = 42, SA-P711 M = 43, SA-P812 = 44, SW-1210 M = 45</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqdacntlrmodel_50602 {get { return GetParameter(50602); }set { SetParameter(50602, value); }}
	/// <summary>PID: 50602  | Type: read | DISCREETS: Other = 1, Ida = 2, Ida Expansion = 3, Ida-2 = 4, Smart = 5, Smart-2 E = 6, Smart-2 P = 7, Smart-2 SL = 8, Smart-3100 ES = 9, Smart-3200 = 10, Smart-2 DH = 11, Smart-221 = 12, SA-4250 Es = 13, SA-4200 = 14, SA-Integrated = 15, SA-431 = 16, SA-5300 = 17, RAID Lc2 = 18, SA-5 I = 19, SA-532 = 20, SA-5312 = 21, SA-641 = 22, SA-642 = 23, SA-6400 = 24, SA-6400 Em = 25, SA-6 I = 26, SA-Generic = 27, SA-P600 = 29, SA-P400 = 30, SA-E200 = 31, SA-E200 I = 32, SA-P400 I = 33, SA-P800 = 34, SA-E500 = 35, SA-P700 M = 36, SA-P212 = 37, SA-P410 = 38, SA-P410 I = 39, SA-P411 = 40, SA-B110 I = 41, SA-P712 M = 42, SA-P711 M = 43, SA-P812 = 44, SW-1210 M = 45</summary>
	public System.Object Cpqdacntlrmodel {get { return GetParameter(50602); }set { SetParameter(50602, value); }}
	/// <summary>PID: 50606  | Type: read | DISCREETS: Other = 1, OK = 2, Degraded = 3, Failed = 4</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqdacntlrcondition_50606 {get { return GetParameter(50606); }set { SetParameter(50606, value); }}
	/// <summary>PID: 50606  | Type: read | DISCREETS: Other = 1, OK = 2, Degraded = 3, Failed = 4</summary>
	public System.Object Cpqdacntlrcondition {get { return GetParameter(50606); }set { SetParameter(50606, value); }}
	/// <summary>PID: 50610  | Type: read | DISCREETS: Other = 1, OK = 2, General Failure = 3, Cable Problem = 4, Powered Off = 5</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqdacntlrboardstatus_50610 {get { return GetParameter(50610); }set { SetParameter(50610, value); }}
	/// <summary>PID: 50610  | Type: read | DISCREETS: Other = 1, OK = 2, General Failure = 3, Cable Problem = 4, Powered Off = 5</summary>
	public System.Object Cpqdacntlrboardstatus {get { return GetParameter(50610); }set { SetParameter(50610, value); }}
	/// <summary>PID: 50612  | Type: read | DISCREETS: Other = 1, OK = 2, Degraded = 3, Failed = 4</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqdacntlrboardcondition_50612 {get { return GetParameter(50612); }set { SetParameter(50612, value); }}
	/// <summary>PID: 50612  | Type: read | DISCREETS: Other = 1, OK = 2, Degraded = 3, Failed = 4</summary>
	public System.Object Cpqdacntlrboardcondition {get { return GetParameter(50612); }set { SetParameter(50612, value); }}
	/// <summary>PID: 50616  | Type: read | DISCREETS: Other = 1, Not Redundant = 2, Driver Duplexing = 3, Fw Active Standby = 4, Fw Primary Secondary = 5, Fw Active = 6</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqdacntlrredundancytype_50616 {get { return GetParameter(50616); }set { SetParameter(50616, value); }}
	/// <summary>PID: 50616  | Type: read | DISCREETS: Other = 1, Not Redundant = 2, Driver Duplexing = 3, Fw Active Standby = 4, Fw Primary Secondary = 5, Fw Active = 6</summary>
	public System.Object Cpqdacntlrredundancytype {get { return GetParameter(50616); }set { SetParameter(50616, value); }}
	/// <summary>PID: 50617  | Type: read | DISCREETS: Other = 1, No Failure = 2, No Redundant Controller = 3, Different Hardware = 4, No Link = 5, Different Firmware = 6, Different Cache = 7, Other Cache Failure = 8, No Drives = 9, Other No Drives = 10, Unsupported Drives = 11, Expand In Progress = 12</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqdacntlrredundancyerror_50617 {get { return GetParameter(50617); }set { SetParameter(50617, value); }}
	/// <summary>PID: 50617  | Type: read | DISCREETS: Other = 1, No Failure = 2, No Redundant Controller = 3, Different Hardware = 4, No Link = 5, Different Firmware = 6, Different Cache = 7, Other Cache Failure = 8, No Drives = 9, Other No Drives = 10, Unsupported Drives = 11, Expand In Progress = 12</summary>
	public System.Object Cpqdacntlrredundancyerror {get { return GetParameter(50617); }set { SetParameter(50617, value); }}
	/// <summary>PID: 50618  | Type: read | DISCREETS: Other = 1, Not Supported = 2, Not Present = 3, Bad Signature = 4, Bad Checksum = 5, Fully Functional = 6, Upgrade Firmware = 7</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqdacntlraccessmodulestatus_50618 {get { return GetParameter(50618); }set { SetParameter(50618, value); }}
	/// <summary>PID: 50618  | Type: read | DISCREETS: Other = 1, Not Supported = 2, Not Present = 3, Bad Signature = 4, Bad Checksum = 5, Fully Functional = 6, Upgrade Firmware = 7</summary>
	public System.Object Cpqdacntlraccessmodulestatus {get { return GetParameter(50618); }set { SetParameter(50618, value); }}
	/// <summary>PID: 50701  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqdaaccelcntlrindex_50701 {get { return GetParameter(50701); }set { SetParameter(50701, value); }}
	/// <summary>PID: 50701  | Type: read</summary>
	public System.Object Cpqdaaccelcntlrindex {get { return GetParameter(50701); }set { SetParameter(50701, value); }}
	/// <summary>PID: 50702  | Type: read | DISCREETS: Other = 1, Invalid = 2, Enabled = 3, TMP Disabled = 4, Perm Disabled = 5</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqdaaccelstatus_50702 {get { return GetParameter(50702); }set { SetParameter(50702, value); }}
	/// <summary>PID: 50702  | Type: read | DISCREETS: Other = 1, Invalid = 2, Enabled = 3, TMP Disabled = 4, Perm Disabled = 5</summary>
	public System.Object Cpqdaaccelstatus {get { return GetParameter(50702); }set { SetParameter(50702, value); }}
	/// <summary>PID: 50704  | Type: read | DISCREETS: Other = 1, None = 2, Possible = 3</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqdaaccelbaddata_50704 {get { return GetParameter(50704); }set { SetParameter(50704, value); }}
	/// <summary>PID: 50704  | Type: read | DISCREETS: Other = 1, None = 2, Possible = 3</summary>
	public System.Object Cpqdaaccelbaddata {get { return GetParameter(50704); }set { SetParameter(50704, value); }}
	/// <summary>PID: 50705  | Type: read | DISCREETS: Other = 1, Invalid = 2, Bad Config = 3, Low Battery = 4, Disable Command = 5, No Resources = 6, Not Connected = 7, Bad Mirror Data = 8, Read Error = 9, Write Error = 10, Config Command = 11, Expand In Progress = 12, Snapshot In Progress = 13, Redundant Low Battery = 14, Redundant Size Mismatch = 15, Redundant Cache Failure = 16, Excessive ECC Errors = 17, ADG Enabler Missing = 18, Post ECC Errors = 19, Battery Hot Removed = 20, Capacitor Charge Low = 21, Not Enough Batteries = 22, Cache Module Not Supported = 23, Battery Not Supported = 24, No Capacitor Attached = 25, Cap Based Backup Failed = 26, Cap Based Restore Failed = 27, Cap Based Module HWFailure = 28, Capacitor Failed to Charge = 29</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqdaaccelerrcode_50705 {get { return GetParameter(50705); }set { SetParameter(50705, value); }}
	/// <summary>PID: 50705  | Type: read | DISCREETS: Other = 1, Invalid = 2, Bad Config = 3, Low Battery = 4, Disable Command = 5, No Resources = 6, Not Connected = 7, Bad Mirror Data = 8, Read Error = 9, Write Error = 10, Config Command = 11, Expand In Progress = 12, Snapshot In Progress = 13, Redundant Low Battery = 14, Redundant Size Mismatch = 15, Redundant Cache Failure = 16, Excessive ECC Errors = 17, ADG Enabler Missing = 18, Post ECC Errors = 19, Battery Hot Removed = 20, Capacitor Charge Low = 21, Not Enough Batteries = 22, Cache Module Not Supported = 23, Battery Not Supported = 24, No Capacitor Attached = 25, Cap Based Backup Failed = 26, Cap Based Restore Failed = 27, Cap Based Module HWFailure = 28, Capacitor Failed to Charge = 29</summary>
	public System.Object Cpqdaaccelerrcode {get { return GetParameter(50705); }set { SetParameter(50705, value); }}
	/// <summary>PID: 50706  | Type: read | DISCREETS: Other = 1, OK = 2, Recharging = 3, Failed = 4, Degraded = 5, Not Present = 6, Capacitor Failed = 7</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqdaaccelbattery_50706 {get { return GetParameter(50706); }set { SetParameter(50706, value); }}
	/// <summary>PID: 50706  | Type: read | DISCREETS: Other = 1, OK = 2, Recharging = 3, Failed = 4, Degraded = 5, Not Present = 6, Capacitor Failed = 7</summary>
	public System.Object Cpqdaaccelbattery {get { return GetParameter(50706); }set { SetParameter(50706, value); }}
	/// <summary>PID: 50709  | Type: read | DISCREETS: Other = 1, OK = 2, Degraded = 3, Failed = 4</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqdaaccelcondition_50709 {get { return GetParameter(50709); }set { SetParameter(50709, value); }}
	/// <summary>PID: 50709  | Type: read | DISCREETS: Other = 1, OK = 2, Degraded = 3, Failed = 4</summary>
	public System.Object Cpqdaaccelcondition {get { return GetParameter(50709); }set { SetParameter(50709, value); }}
	/// <summary>PID: 50751  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqheresmem2module_50751 {get { return GetParameter(50751); }set { SetParameter(50751, value); }}
	/// <summary>PID: 50751  | Type: read</summary>
	public System.Object Cpqheresmem2module {get { return GetParameter(50751); }set { SetParameter(50751, value); }}
	/// <summary>PID: 50752  | Type: read | EXCEPTIONS: On System Board = 0</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqheresmem2boardnum_50752 {get { return GetParameter(50752); }set { SetParameter(50752, value); }}
	/// <summary>PID: 50752  | Type: read | EXCEPTIONS: On System Board = 0</summary>
	public System.Object Cpqheresmem2boardnum {get { return GetParameter(50752); }set { SetParameter(50752, value); }}
	/// <summary>PID: 50753  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqheresmem2cpunum_50753 {get { return GetParameter(50753); }set { SetParameter(50753, value); }}
	/// <summary>PID: 50753  | Type: read</summary>
	public System.Object Cpqheresmem2cpunum {get { return GetParameter(50753); }set { SetParameter(50753, value); }}
	/// <summary>PID: 50754  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqheresmem2modulenum_50754 {get { return GetParameter(50754); }set { SetParameter(50754, value); }}
	/// <summary>PID: 50754  | Type: read</summary>
	public System.Object Cpqheresmem2modulenum {get { return GetParameter(50754); }set { SetParameter(50754, value); }}
	/// <summary>PID: 50755  | Type: read | EXCEPTIONS: Module Not Present = 0</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqheresmem2modulesize_50755 {get { return GetParameter(50755); }set { SetParameter(50755, value); }}
	/// <summary>PID: 50755  | Type: read | EXCEPTIONS: Module Not Present = 0</summary>
	public System.Object Cpqheresmem2modulesize {get { return GetParameter(50755); }set { SetParameter(50755, value); }}
	/// <summary>PID: 50756  | Type: read | DISCREETS: Other = 1, Board = 2, CPQ Single Width Module = 3, CPQ Double Width Module = 4, SIMM = 5, PCMCIA = 6, Compaq-Specific = 7, DIMM = 8, Small Outline DIMM = 9, RIMM = 10, SRIMM = 11, FB-DIMM = 12, DIMMDDR = 13, DIMMDDR2 = 14, DIMMDDR3 = 15, DIMMFBD2 = 16, FB-DIMMDDR2 = 17, FB-DIMMDDR3 = 18</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqheresmem2moduletype_50756 {get { return GetParameter(50756); }set { SetParameter(50756, value); }}
	/// <summary>PID: 50756  | Type: read | DISCREETS: Other = 1, Board = 2, CPQ Single Width Module = 3, CPQ Double Width Module = 4, SIMM = 5, PCMCIA = 6, Compaq-Specific = 7, DIMM = 8, Small Outline DIMM = 9, RIMM = 10, SRIMM = 11, FB-DIMM = 12, DIMMDDR = 13, DIMMDDR2 = 14, DIMMDDR3 = 15, DIMMFBD2 = 16, FB-DIMMDDR2 = 17, FB-DIMMDDR3 = 18</summary>
	public System.Object Cpqheresmem2moduletype {get { return GetParameter(50756); }set { SetParameter(50756, value); }}
	/// <summary>PID: 50757  | Type: read | EXCEPTIONS: Not Available = 0</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqheresmem2modulefrequency_50757 {get { return GetParameter(50757); }set { SetParameter(50757, value); }}
	/// <summary>PID: 50757  | Type: read | EXCEPTIONS: Not Available = 0</summary>
	public System.Object Cpqheresmem2modulefrequency {get { return GetParameter(50757); }set { SetParameter(50757, value); }}
	/// <summary>PID: 50758  | Type: read | DISCREETS: Other = 1, Not Present = 2, Present = 3, Good = 4, Add = 5, Upgrade = 6, Missing = 7, Does Not Match = 8, Not Supported = 9, Bad Config = 10, Degraded = 11</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqheresmem2modulestatus_50758 {get { return GetParameter(50758); }set { SetParameter(50758, value); }}
	/// <summary>PID: 50758  | Type: read | DISCREETS: Other = 1, Not Present = 2, Present = 3, Good = 4, Add = 5, Upgrade = 6, Missing = 7, Does Not Match = 8, Not Supported = 9, Bad Config = 10, Degraded = 11</summary>
	public System.Object Cpqheresmem2modulestatus {get { return GetParameter(50758); }set { SetParameter(50758, value); }}
	/// <summary>PID: 50759  | Type: read | DISCREETS: Other = 1, OK = 2, Degraded = 3, Degraded Module Index Unknown = 4</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqheresmem2modulecondition_50759 {get { return GetParameter(50759); }set { SetParameter(50759, value); }}
	/// <summary>PID: 50759  | Type: read | DISCREETS: Other = 1, OK = 2, Degraded = 3, Degraded Module Index Unknown = 4</summary>
	public System.Object Cpqheresmem2modulecondition {get { return GetParameter(50759); }set { SetParameter(50759, value); }}
	/// <summary>PID: 50801  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hpphysicaldrivetable_instance_50801 {get { return GetParameter(50801); }set { SetParameter(50801, value); }}
	/// <summary>PID: 50801  | Type: read</summary>
	public System.Object Hpphysicaldrivetable_instance {get { return GetParameter(50801); }set { SetParameter(50801, value); }}
	/// <summary>PID: 50803  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqdaphydrvmodel_50803 {get { return GetParameter(50803); }set { SetParameter(50803, value); }}
	/// <summary>PID: 50803  | Type: read</summary>
	public System.Object Cpqdaphydrvmodel {get { return GetParameter(50803); }set { SetParameter(50803, value); }}
	/// <summary>PID: 50806  | Type: read | DISCREETS: Other = 1, OK = 2, Failed = 3, Predictive Failure = 4, Erasing = 5, Erase Done = 6, Erase Queued = 7</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqdaphydrvstatus_50806 {get { return GetParameter(50806); }set { SetParameter(50806, value); }}
	/// <summary>PID: 50806  | Type: read | DISCREETS: Other = 1, OK = 2, Failed = 3, Predictive Failure = 4, Erasing = 5, Erase Done = 6, Erase Queued = 7</summary>
	public System.Object Cpqdaphydrvstatus {get { return GetParameter(50806); }set { SetParameter(50806, value); }}
	/// <summary>PID: 50837  | Type: read | DISCREETS: Other = 1, OK = 2, Degraded = 3, Failed = 4</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqdaphydrvcondition_50837 {get { return GetParameter(50837); }set { SetParameter(50837, value); }}
	/// <summary>PID: 50837  | Type: read | DISCREETS: Other = 1, OK = 2, Degraded = 3, Failed = 4</summary>
	public System.Object Cpqdaphydrvcondition {get { return GetParameter(50837); }set { SetParameter(50837, value); }}
	/// <summary>PID: 50845  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqdaphydrvsize_50845 {get { return GetParameter(50845); }set { SetParameter(50845, value); }}
	/// <summary>PID: 50845  | Type: read</summary>
	public System.Object Cpqdaphydrvsize {get { return GetParameter(50845); }set { SetParameter(50845, value); }}
	/// <summary>PID: 50855  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqdaphydrvfailurecode_50855 {get { return GetParameter(50855); }set { SetParameter(50855, value); }}
	/// <summary>PID: 50855  | Type: read</summary>
	public System.Object Cpqdaphydrvfailurecode {get { return GetParameter(50855); }set { SetParameter(50855, value); }}
	/// <summary>PID: 50857  | Type: read | DISCREETS: Other = 1, OK = 2, Replace Drive = 3</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqdaphydrvsmartstatus_50857 {get { return GetParameter(50857); }set { SetParameter(50857, value); }}
	/// <summary>PID: 50857  | Type: read | DISCREETS: Other = 1, OK = 2, Replace Drive = 3</summary>
	public System.Object Cpqdaphydrvsmartstatus {get { return GetParameter(50857); }set { SetParameter(50857, value); }}
	/// <summary>PID: 50858  | Type: read | DISCREETS: Other = 1, Configured = 2, Not Configured = 3</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqdaphydrvconfigurationstatus_50858 {get { return GetParameter(50858); }set { SetParameter(50858, value); }}
	/// <summary>PID: 50858  | Type: read | DISCREETS: Other = 1, Configured = 2, Not Configured = 3</summary>
	public System.Object Cpqdaphydrvconfigurationstatus {get { return GetParameter(50858); }set { SetParameter(50858, value); }}
	/// <summary>PID: 50859  | Type: read | DISCREETS: Other = 1, RPM7200 = 2, RPM10 K = 3, RPM15 K = 4, RPM SSD = 5</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqdaphydrvrotationalspeed_50859 {get { return GetParameter(50859); }set { SetParameter(50859, value); }}
	/// <summary>PID: 50859  | Type: read | DISCREETS: Other = 1, RPM7200 = 2, RPM10 K = 3, RPM15 K = 4, RPM SSD = 5</summary>
	public System.Object Cpqdaphydrvrotationalspeed {get { return GetParameter(50859); }set { SetParameter(50859, value); }}
	/// <summary>PID: 50860  | Type: read | DISCREETS: Other = 1, Parallel SCSI = 2, SATA = 3, SAS = 4</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqdaphydrvtype_50860 {get { return GetParameter(50860); }set { SetParameter(50860, value); }}
	/// <summary>PID: 50860  | Type: read | DISCREETS: Other = 1, Parallel SCSI = 2, SATA = 3, SAS = 4</summary>
	public System.Object Cpqdaphydrvtype {get { return GetParameter(50860); }set { SetParameter(50860, value); }}
	/// <summary>PID: 50864  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqdaphydrvlocationstring_50864 {get { return GetParameter(50864); }set { SetParameter(50864, value); }}
	/// <summary>PID: 50864  | Type: read</summary>
	public System.Object Cpqdaphydrvlocationstring {get { return GetParameter(50864); }set { SetParameter(50864, value); }}
	/// <summary>PID: 50865  | Type: read | DISCREETS: Other = 1, Rate-1 -5 = 2, Rate-3 -0 = 3, Rate-6 -0 = 4</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqdaphydrvnegotiatedlinkrate_50865 {get { return GetParameter(50865); }set { SetParameter(50865, value); }}
	/// <summary>PID: 50865  | Type: read | DISCREETS: Other = 1, Rate-1 -5 = 2, Rate-3 -0 = 3, Rate-6 -0 = 4</summary>
	public System.Object Cpqdaphydrvnegotiatedlinkrate {get { return GetParameter(50865); }set { SetParameter(50865, value); }}
	/// <summary>PID: 50901  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hplogicaldrivetable_instance_50901 {get { return GetParameter(50901); }set { SetParameter(50901, value); }}
	/// <summary>PID: 50901  | Type: read</summary>
	public System.Object Hplogicaldrivetable_instance {get { return GetParameter(50901); }set { SetParameter(50901, value); }}
	/// <summary>PID: 50902  | Type: read | DISCREETS: Other = 1, None = 2, Mirroring = 3, Data Guard = 4, Distributed Data Guard = 5, Advanced Data Guard = 7, RAID50 = 8, RAID60 = 9, RAID1 Adm = 10, RAID10 Adm = 11</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqdalogdrvfaulttol_50902 {get { return GetParameter(50902); }set { SetParameter(50902, value); }}
	/// <summary>PID: 50902  | Type: read | DISCREETS: Other = 1, None = 2, Mirroring = 3, Data Guard = 4, Distributed Data Guard = 5, Advanced Data Guard = 7, RAID50 = 8, RAID60 = 9, RAID1 Adm = 10, RAID10 Adm = 11</summary>
	public System.Object Cpqdalogdrvfaulttol {get { return GetParameter(50902); }set { SetParameter(50902, value); }}
	/// <summary>PID: 50903  | Type: read | DISCREETS: Other = 1, OK = 2, Failed = 3, Unconfigured = 4, Recovering = 5, Ready for Rebuild = 6, Rebuilding = 7, Wrong Drive = 8, Bad Connect = 9, Overheating = 10, Shutdown = 11, Expanding = 12, Not Available = 13, Queued for Expansion = 14, Multipath Access Degraded = 15, Erasing = 16</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqdalogdrvstatus_50903 {get { return GetParameter(50903); }set { SetParameter(50903, value); }}
	/// <summary>PID: 50903  | Type: read | DISCREETS: Other = 1, OK = 2, Failed = 3, Unconfigured = 4, Recovering = 5, Ready for Rebuild = 6, Rebuilding = 7, Wrong Drive = 8, Bad Connect = 9, Overheating = 10, Shutdown = 11, Expanding = 12, Not Available = 13, Queued for Expansion = 14, Multipath Access Degraded = 15, Erasing = 16</summary>
	public System.Object Cpqdalogdrvstatus {get { return GetParameter(50903); }set { SetParameter(50903, value); }}
	/// <summary>PID: 50904  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqdalogdrvsize_50904 {get { return GetParameter(50904); }set { SetParameter(50904, value); }}
	/// <summary>PID: 50904  | Type: read</summary>
	public System.Object Cpqdalogdrvsize {get { return GetParameter(50904); }set { SetParameter(50904, value); }}
	/// <summary>PID: 50905  | Type: read | DISCREETS: Other = 1, OK = 2, Degraded = 3, Failed = 4</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqdalogdrvcondition_50905 {get { return GetParameter(50905); }set { SetParameter(50905, value); }}
	/// <summary>PID: 50905  | Type: read | DISCREETS: Other = 1, OK = 2, Degraded = 3, Failed = 4</summary>
	public System.Object Cpqdalogdrvcondition {get { return GetParameter(50905); }set { SetParameter(50905, value); }}
	/// <summary>PID: 50949  | Type: write | DISCREETS: Temperature... = HP Temperature Table, Power Supply... = HP Power Supply Table, Fan... = HP Fan Table</summary>
	public System.Object Pagebuttonhp_50949 {get { return GetParameter(50949); }set { SetParameter(50949, value); }}
	/// <summary>PID: 50949  | Type: write | DISCREETS: Temperature... = HP Temperature Table, Power Supply... = HP Power Supply Table, Fan... = HP Fan Table</summary>
	public System.Object Pagebuttonhp {get { return Write.Pagebuttonhp; }set { Write.Pagebuttonhp = value; }}
	/// <summary>PID: 50950  | Type: write | DISCREETS: Disk... = HP Disk, CPU... = HP CPU, Memory... = HP Memory</summary>
	public System.Object Pagebuttonhp2_50950 {get { return GetParameter(50950); }set { SetParameter(50950, value); }}
	/// <summary>PID: 50950  | Type: write | DISCREETS: Disk... = HP Disk, CPU... = HP CPU, Memory... = HP Memory</summary>
	public System.Object Pagebuttonhp2 {get { return Write.Pagebuttonhp2; }set { Write.Pagebuttonhp2 = value; }}
	/// <summary>PID: 50951  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqsm2cntlrromdatesnmp_50951 {get { return GetParameter(50951); }set { SetParameter(50951, value); }}
	/// <summary>PID: 50951  | Type: read</summary>
	public System.Object Cpqsm2cntlrromdatesnmp {get { return GetParameter(50951); }set { SetParameter(50951, value); }}
	/// <summary>PID: 50952  | Type: read | EXCEPTIONS: Not Applicable = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqsm2cntlrromrevision_50952 {get { return GetParameter(50952); }set { SetParameter(50952, value); }}
	/// <summary>PID: 50952  | Type: read | EXCEPTIONS: Not Applicable = -1</summary>
	public System.Object Cpqsm2cntlrromrevision {get { return GetParameter(50952); }set { SetParameter(50952, value); }}
	/// <summary>PID: 50953  | Type: read | EXCEPTIONS: Not Applicable = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqsm2cntlrromdate_50953 {get { return GetParameter(50953); }set { SetParameter(50953, value); }}
	/// <summary>PID: 50953  | Type: read | EXCEPTIONS: Not Applicable = -1</summary>
	public System.Object Cpqsm2cntlrromdate {get { return GetParameter(50953); }set { SetParameter(50953, value); }}
	/// <summary>PID: 51001  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqsecpuunitindex_51001 {get { return GetParameter(51001); }set { SetParameter(51001, value); }}
	/// <summary>PID: 51001  | Type: read</summary>
	public System.Object Cpqsecpuunitindex {get { return GetParameter(51001); }set { SetParameter(51001, value); }}
	/// <summary>PID: 51002  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqsecpuname_51002 {get { return GetParameter(51002); }set { SetParameter(51002, value); }}
	/// <summary>PID: 51002  | Type: read</summary>
	public System.Object Cpqsecpuname {get { return GetParameter(51002); }set { SetParameter(51002, value); }}
	/// <summary>PID: 51003  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqsecpuspeed_51003 {get { return GetParameter(51003); }set { SetParameter(51003, value); }}
	/// <summary>PID: 51003  | Type: read</summary>
	public System.Object Cpqsecpuspeed {get { return GetParameter(51003); }set { SetParameter(51003, value); }}
	/// <summary>PID: 51004  | Type: read | DISCREETS: Unknown = 1, OK = 2, Degraded = 3, Failed = 4, Disabled = 5</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqsecpustatus_51004 {get { return GetParameter(51004); }set { SetParameter(51004, value); }}
	/// <summary>PID: 51004  | Type: read | DISCREETS: Unknown = 1, OK = 2, Degraded = 3, Failed = 4, Disabled = 5</summary>
	public System.Object Cpqsecpustatus {get { return GetParameter(51004); }set { SetParameter(51004, value); }}
	/// <summary>PID: 51005  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqsecpucore_51005 {get { return GetParameter(51005); }set { SetParameter(51005, value); }}
	/// <summary>PID: 51005  | Type: read</summary>
	public System.Object Cpqsecpucore {get { return GetParameter(51005); }set { SetParameter(51005, value); }}
	/// <summary>PID: 51100  | Type: read | DISCREETS: Disabled = 0, Enabled = 1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Polldellparameters_51100 {get { return GetParameter(51100); }set { SetParameter(51100, value); }}
	/// <summary>PID: 51100  | Type: read | DISCREETS: Disabled = 0, Enabled = 1</summary>
	public System.Object Polldellparameters {get { return GetParameter(51100); }set { SetParameter(51100, value); }}
	/// <summary>PID: 51101  | Type: read | EXCEPTIONS: Not Applicable = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Operatingsystemoperatingsystemname_51101 {get { return GetParameter(51101); }set { SetParameter(51101, value); }}
	/// <summary>PID: 51101  | Type: read | EXCEPTIONS: Not Applicable = -1</summary>
	public System.Object Operatingsystemoperatingsystemname {get { return GetParameter(51101); }set { SetParameter(51101, value); }}
	/// <summary>PID: 51102  | Type: read | EXCEPTIONS: Not Applicable = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Operatingsystemoperatingsystemversionname_51102 {get { return GetParameter(51102); }set { SetParameter(51102, value); }}
	/// <summary>PID: 51102  | Type: read | EXCEPTIONS: Not Applicable = -1</summary>
	public System.Object Operatingsystemoperatingsystemversionname {get { return GetParameter(51102); }set { SetParameter(51102, value); }}
	/// <summary>PID: 51103  | Type: read | EXCEPTIONS: Not Applicable = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Chassismodelname_51103 {get { return GetParameter(51103); }set { SetParameter(51103, value); }}
	/// <summary>PID: 51103  | Type: read | EXCEPTIONS: Not Applicable = -1</summary>
	public System.Object Chassismodelname {get { return GetParameter(51103); }set { SetParameter(51103, value); }}
	/// <summary>PID: 51104  | Type: read | EXCEPTIONS: Not Applicable = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Chassisservicetagname_51104 {get { return GetParameter(51104); }set { SetParameter(51104, value); }}
	/// <summary>PID: 51104  | Type: read | EXCEPTIONS: Not Applicable = -1</summary>
	public System.Object Chassisservicetagname {get { return GetParameter(51104); }set { SetParameter(51104, value); }}
	/// <summary>PID: 51105  | Type: read | EXCEPTIONS: Not Applicable = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Systembiosversionname_51105 {get { return GetParameter(51105); }set { SetParameter(51105, value); }}
	/// <summary>PID: 51105  | Type: read | EXCEPTIONS: Not Applicable = -1</summary>
	public System.Object Systembiosversionname {get { return GetParameter(51105); }set { SetParameter(51105, value); }}
	/// <summary>PID: 51106  | Type: read | EXCEPTIONS: Not Applicable = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Systemmanagementsoftwareversionnumbername_51106 {get { return GetParameter(51106); }set { SetParameter(51106, value); }}
	/// <summary>PID: 51106  | Type: read | EXCEPTIONS: Not Applicable = -1</summary>
	public System.Object Systemmanagementsoftwareversionnumbername {get { return GetParameter(51106); }set { SetParameter(51106, value); }}
	/// <summary>PID: 51200  | Type: write | DISCREETS: Disabled = 0, Enabled = 1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Polldellparameters_51200 {get { return GetParameter(51200); }set { SetParameter(51200, value); }}
	/// <summary>PID: 51900  | Type: write | DISCREETS: Temperature... = Dell Temperature, Power Supply... = Dell Power Supply, Fan... = Dell Fan</summary>
	public System.Object Dellpagebutton_51900 {get { return GetParameter(51900); }set { SetParameter(51900, value); }}
	/// <summary>PID: 51900  | Type: write | DISCREETS: Temperature... = Dell Temperature, Power Supply... = Dell Power Supply, Fan... = Dell Fan</summary>
	public System.Object Dellpagebutton {get { return Write.Dellpagebutton; }set { Write.Dellpagebutton = value; }}
	/// <summary>PID: 51901  | Type: write | DISCREETS: Disk... = Dell Disk, CPU... = Dell CPU, Memory... = Dell Memory</summary>
	public System.Object Dellpagebutton2_51901 {get { return GetParameter(51901); }set { SetParameter(51901, value); }}
	/// <summary>PID: 51901  | Type: write | DISCREETS: Disk... = Dell Disk, CPU... = Dell CPU, Memory... = Dell Memory</summary>
	public System.Object Dellpagebutton2 {get { return Write.Dellpagebutton2; }set { Write.Dellpagebutton2 = value; }}
	/// <summary>PID: 52110  | Type: read | DISCREETS: Other = 1, Unknown = 2, OK = 3, Non Critical = 4, Critical = 5, Non Recoverable = 6 | EXCEPTIONS: Not Applicable = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Systemstatepowersupplystatuscombined_52110 {get { return GetParameter(52110); }set { SetParameter(52110, value); }}
	/// <summary>PID: 52110  | Type: read | DISCREETS: Other = 1, Unknown = 2, OK = 3, Non Critical = 4, Critical = 5, Non Recoverable = 6 | EXCEPTIONS: Not Applicable = -1</summary>
	public System.Object Systemstatepowersupplystatuscombined {get { return GetParameter(52110); }set { SetParameter(52110, value); }}
	/// <summary>PID: 52111  | Type: read | DISCREETS: Other = 1, Unknown = 2, OK = 3, Non Critical = 4, Critical = 5, Non Recoverable = 6 | EXCEPTIONS: Not Applicable = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Systemstatetemperaturestatuscombined_52111 {get { return GetParameter(52111); }set { SetParameter(52111, value); }}
	/// <summary>PID: 52111  | Type: read | DISCREETS: Other = 1, Unknown = 2, OK = 3, Non Critical = 4, Critical = 5, Non Recoverable = 6 | EXCEPTIONS: Not Applicable = -1</summary>
	public System.Object Systemstatetemperaturestatuscombined {get { return GetParameter(52111); }set { SetParameter(52111, value); }}
	/// <summary>PID: 52112  | Type: read | DISCREETS: Other = 1, Unknown = 2, OK = 3, Non Critical = 4, Critical = 5, Non Recoverable = 6 | EXCEPTIONS: Not Applicable = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Systemstatecoolingdevicestatuscombined_52112 {get { return GetParameter(52112); }set { SetParameter(52112, value); }}
	/// <summary>PID: 52112  | Type: read | DISCREETS: Other = 1, Unknown = 2, OK = 3, Non Critical = 4, Critical = 5, Non Recoverable = 6 | EXCEPTIONS: Not Applicable = -1</summary>
	public System.Object Systemstatecoolingdevicestatuscombined {get { return GetParameter(52112); }set { SetParameter(52112, value); }}
	/// <summary>PID: 52113  | Type: read | DISCREETS: Other = 1, Unknown = 2, OK = 3, Non Critical = 4, Critical = 5, Non Recoverable = 6 | EXCEPTIONS: Not Applicable = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Systemstateglobalsystemstatus_52113 {get { return GetParameter(52113); }set { SetParameter(52113, value); }}
	/// <summary>PID: 52113  | Type: read | DISCREETS: Other = 1, Unknown = 2, OK = 3, Non Critical = 4, Critical = 5, Non Recoverable = 6 | EXCEPTIONS: Not Applicable = -1</summary>
	public System.Object Systemstateglobalsystemstatus {get { return GetParameter(52113); }set { SetParameter(52113, value); }}
	/// <summary>PID: 52114  | Type: read | DISCREETS: Other = 1, Unknown = 2, OK = 3, Non Critical = 4, Critical = 5, Non Recoverable = 6 | EXCEPTIONS: Not Applicable = -1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Systemstatechassisstatus_52114 {get { return GetParameter(52114); }set { SetParameter(52114, value); }}
	/// <summary>PID: 52114  | Type: read | DISCREETS: Other = 1, Unknown = 2, OK = 3, Non Critical = 4, Critical = 5, Non Recoverable = 6 | EXCEPTIONS: Not Applicable = -1</summary>
	public System.Object Systemstatechassisstatus {get { return GetParameter(52114); }set { SetParameter(52114, value); }}
	/// <summary>PID: 52201  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Dellpowersupply_52201 {get { return GetParameter(52201); }set { SetParameter(52201, value); }}
	/// <summary>PID: 52201  | Type: read</summary>
	public System.Object Dellpowersupply {get { return GetParameter(52201); }set { SetParameter(52201, value); }}
	/// <summary>PID: 52202  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Powersupplylocationname_52202 {get { return GetParameter(52202); }set { SetParameter(52202, value); }}
	/// <summary>PID: 52202  | Type: read</summary>
	public System.Object Powersupplylocationname {get { return GetParameter(52202); }set { SetParameter(52202, value); }}
	/// <summary>PID: 52203  | Type: read | DISCREETS: Other = 1, Unknown = 2, OK = 3, Non Critical = 4, Critical = 5, Non Recoverable = 6</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Powersupplystatus_52203 {get { return GetParameter(52203); }set { SetParameter(52203, value); }}
	/// <summary>PID: 52203  | Type: read | DISCREETS: Other = 1, Unknown = 2, OK = 3, Non Critical = 4, Critical = 5, Non Recoverable = 6</summary>
	public System.Object Powersupplystatus {get { return GetParameter(52203); }set { SetParameter(52203, value); }}
	/// <summary>PID: 52204  | Type: read | DISCREETS: Other = 1, Unknown = 2, Lineair = 3, Switching = 4, Battery = 5, UPS = 6, Converter = 7, Regulator = 8, AC = 9, DC = 10, VRM = 11</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Powersupplytype_52204 {get { return GetParameter(52204); }set { SetParameter(52204, value); }}
	/// <summary>PID: 52204  | Type: read | DISCREETS: Other = 1, Unknown = 2, Lineair = 3, Switching = 4, Battery = 5, UPS = 6, Converter = 7, Regulator = 8, AC = 9, DC = 10, VRM = 11</summary>
	public System.Object Powersupplytype {get { return GetParameter(52204); }set { SetParameter(52204, value); }}
	/// <summary>PID: 52301  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Instancetemperatureprobetable_52301 {get { return GetParameter(52301); }set { SetParameter(52301, value); }}
	/// <summary>PID: 52301  | Type: read</summary>
	public System.Object Instancetemperatureprobetable {get { return GetParameter(52301); }set { SetParameter(52301, value); }}
	/// <summary>PID: 52302  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Temperatureprobelocationname_52302 {get { return GetParameter(52302); }set { SetParameter(52302, value); }}
	/// <summary>PID: 52302  | Type: read</summary>
	public System.Object Temperatureprobelocationname {get { return GetParameter(52302); }set { SetParameter(52302, value); }}
	/// <summary>PID: 52303  | Type: read | DISCREETS: Unknown = 1, Enabled = 2, Not Ready = 4, Enabled and Not Ready = 6</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Temperatureprobestatesettings_52303 {get { return GetParameter(52303); }set { SetParameter(52303, value); }}
	/// <summary>PID: 52303  | Type: read | DISCREETS: Unknown = 1, Enabled = 2, Not Ready = 4, Enabled and Not Ready = 6</summary>
	public System.Object Temperatureprobestatesettings {get { return GetParameter(52303); }set { SetParameter(52303, value); }}
	/// <summary>PID: 52304  | Type: read | DISCREETS: Other = 1, Unknown = 2, OK = 3, Non Critical Upper = 4, Critical Upper = 5, Non Recoverable Upper = 6, Non Critical Lower = 7, Critical Lower = 8, Non Recoverable Lower = 9, Failed = 10</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Temperatureprobestatus_52304 {get { return GetParameter(52304); }set { SetParameter(52304, value); }}
	/// <summary>PID: 52304  | Type: read | DISCREETS: Other = 1, Unknown = 2, OK = 3, Non Critical Upper = 4, Critical Upper = 5, Non Recoverable Upper = 6, Non Critical Lower = 7, Critical Lower = 8, Non Recoverable Lower = 9, Failed = 10</summary>
	public System.Object Temperatureprobestatus {get { return GetParameter(52304); }set { SetParameter(52304, value); }}
	/// <summary>PID: 52305  | Type: read | DISCREETS: Other = 1, Unknown = 2, Ambient ESM = 3, Discrete = 16</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Temperatureprobetype_52305 {get { return GetParameter(52305); }set { SetParameter(52305, value); }}
	/// <summary>PID: 52305  | Type: read | DISCREETS: Other = 1, Unknown = 2, Ambient ESM = 3, Discrete = 16</summary>
	public System.Object Temperatureprobetype {get { return GetParameter(52305); }set { SetParameter(52305, value); }}
	/// <summary>PID: 52306  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Temperatureprobereading_52306 {get { return GetParameter(52306); }set { SetParameter(52306, value); }}
	/// <summary>PID: 52306  | Type: read</summary>
	public System.Object Temperatureprobereading {get { return GetParameter(52306); }set { SetParameter(52306, value); }}
	/// <summary>PID: 52307  | Type: read | DISCREETS: Bad = 2, Good = 1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Temperatureprobediscretereading_52307 {get { return GetParameter(52307); }set { SetParameter(52307, value); }}
	/// <summary>PID: 52307  | Type: read | DISCREETS: Bad = 2, Good = 1</summary>
	public System.Object Temperatureprobediscretereading {get { return GetParameter(52307); }set { SetParameter(52307, value); }}
	/// <summary>PID: 52401  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Instancecoolingdevicetable_52401 {get { return GetParameter(52401); }set { SetParameter(52401, value); }}
	/// <summary>PID: 52401  | Type: read</summary>
	public System.Object Instancecoolingdevicetable {get { return GetParameter(52401); }set { SetParameter(52401, value); }}
	/// <summary>PID: 52402  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Coolingdevicelocationname_52402 {get { return GetParameter(52402); }set { SetParameter(52402, value); }}
	/// <summary>PID: 52402  | Type: read</summary>
	public System.Object Coolingdevicelocationname {get { return GetParameter(52402); }set { SetParameter(52402, value); }}
	/// <summary>PID: 52403  | Type: read | DISCREETS: Unknown = 1, Enabled = 2, Not Ready = 4, Enabled and Not Ready = 6</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Coolingdevicestatesettings_52403 {get { return GetParameter(52403); }set { SetParameter(52403, value); }}
	/// <summary>PID: 52403  | Type: read | DISCREETS: Unknown = 1, Enabled = 2, Not Ready = 4, Enabled and Not Ready = 6</summary>
	public System.Object Coolingdevicestatesettings {get { return GetParameter(52403); }set { SetParameter(52403, value); }}
	/// <summary>PID: 52404  | Type: read | DISCREETS: Other = 1, Unknown = 2, OK = 3, Non Critical Upper = 4, Critical Upper = 5, Non Recoverable Upper = 6, Non Critical Lower = 7, Critical Lower = 8, Non Recoverable Lower = 9, Failed = 10</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Coolingdevicestatus_52404 {get { return GetParameter(52404); }set { SetParameter(52404, value); }}
	/// <summary>PID: 52404  | Type: read | DISCREETS: Other = 1, Unknown = 2, OK = 3, Non Critical Upper = 4, Critical Upper = 5, Non Recoverable Upper = 6, Non Critical Lower = 7, Critical Lower = 8, Non Recoverable Lower = 9, Failed = 10</summary>
	public System.Object Coolingdevicestatus {get { return GetParameter(52404); }set { SetParameter(52404, value); }}
	/// <summary>PID: 52405  | Type: read | DISCREETS: Other = 1, Unknown = 2, Fan = 3, Blower = 4, Chip Fan = 5, Cabinet Fan = 6, Power Supply Fan = 7, Heat Pipe = 8, Refrigeration = 9, Active Cooling = 10, Passive Cooling = 11</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Coolingdevicetype_52405 {get { return GetParameter(52405); }set { SetParameter(52405, value); }}
	/// <summary>PID: 52405  | Type: read | DISCREETS: Other = 1, Unknown = 2, Fan = 3, Blower = 4, Chip Fan = 5, Cabinet Fan = 6, Power Supply Fan = 7, Heat Pipe = 8, Refrigeration = 9, Active Cooling = 10, Passive Cooling = 11</summary>
	public System.Object Coolingdevicetype {get { return GetParameter(52405); }set { SetParameter(52405, value); }}
	/// <summary>PID: 52406  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Coolingdevicereading_52406 {get { return GetParameter(52406); }set { SetParameter(52406, value); }}
	/// <summary>PID: 52406  | Type: read</summary>
	public System.Object Coolingdevicereading {get { return GetParameter(52406); }set { SetParameter(52406, value); }}
	/// <summary>PID: 52407  | Type: read | DISCREETS: Bad = 2, Good = 1</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Coolingdevicediscretereading_52407 {get { return GetParameter(52407); }set { SetParameter(52407, value); }}
	/// <summary>PID: 52407  | Type: read | DISCREETS: Bad = 2, Good = 1</summary>
	public System.Object Coolingdevicediscretereading {get { return GetParameter(52407); }set { SetParameter(52407, value); }}
	/// <summary>PID: 52801  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Controllernumber_52801 {get { return GetParameter(52801); }set { SetParameter(52801, value); }}
	/// <summary>PID: 52801  | Type: read</summary>
	public System.Object Controllernumber {get { return GetParameter(52801); }set { SetParameter(52801, value); }}
	/// <summary>PID: 52802  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Controllername_52802 {get { return GetParameter(52802); }set { SetParameter(52802, value); }}
	/// <summary>PID: 52802  | Type: read</summary>
	public System.Object Controllername {get { return GetParameter(52802); }set { SetParameter(52802, value); }}
	/// <summary>PID: 52803  | Type: read | DISCREETS: SCSI = 1, PV660F = 2, PV662F = 3, IDE = 4, SATA = 5, SAS = 6</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Controllertype_52803 {get { return GetParameter(52803); }set { SetParameter(52803, value); }}
	/// <summary>PID: 52803  | Type: read | DISCREETS: SCSI = 1, PV660F = 2, PV662F = 3, IDE = 4, SATA = 5, SAS = 6</summary>
	public System.Object Controllertype {get { return GetParameter(52803); }set { SetParameter(52803, value); }}
	/// <summary>PID: 52804  | Type: read | DISCREETS: Ready = 1, Failed = 2, Online = 3, Offline = 4, Degraded = 6</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Controllerstate_52804 {get { return GetParameter(52804); }set { SetParameter(52804, value); }}
	/// <summary>PID: 52804  | Type: read | DISCREETS: Ready = 1, Failed = 2, Online = 3, Offline = 4, Degraded = 6</summary>
	public System.Object Controllerstate {get { return GetParameter(52804); }set { SetParameter(52804, value); }}
	/// <summary>PID: 52805  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Controllerfwversion_52805 {get { return GetParameter(52805); }set { SetParameter(52805, value); }}
	/// <summary>PID: 52805  | Type: read</summary>
	public System.Object Controllerfwversion {get { return GetParameter(52805); }set { SetParameter(52805, value); }}
	/// <summary>PID: 52806  | Type: read | DISCREETS: Other = 1, Unknown = 2, OK = 3, Non Critical = 4, Critical = 5, Non Recoverable = 6</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Controllerrollupstatus_52806 {get { return GetParameter(52806); }set { SetParameter(52806, value); }}
	/// <summary>PID: 52806  | Type: read | DISCREETS: Other = 1, Unknown = 2, OK = 3, Non Critical = 4, Critical = 5, Non Recoverable = 6</summary>
	public System.Object Controllerrollupstatus {get { return GetParameter(52806); }set { SetParameter(52806, value); }}
	/// <summary>PID: 52807  | Type: read | DISCREETS: Other = 1, Unknown = 2, OK = 3, Non Critical = 4, Critical = 5, Non Recoverable = 6</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Controllercomponentstatus_52807 {get { return GetParameter(52807); }set { SetParameter(52807, value); }}
	/// <summary>PID: 52807  | Type: read | DISCREETS: Other = 1, Unknown = 2, OK = 3, Non Critical = 4, Critical = 5, Non Recoverable = 6</summary>
	public System.Object Controllercomponentstatus {get { return GetParameter(52807); }set { SetParameter(52807, value); }}
	/// <summary>PID: 52808  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Controllernexusid_52808 {get { return GetParameter(52808); }set { SetParameter(52808, value); }}
	/// <summary>PID: 52808  | Type: read</summary>
	public System.Object Controllernexusid {get { return GetParameter(52808); }set { SetParameter(52808, value); }}
	/// <summary>PID: 52809  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Controllerdriverversion_52809 {get { return GetParameter(52809); }set { SetParameter(52809, value); }}
	/// <summary>PID: 52809  | Type: read</summary>
	public System.Object Controllerdriverversion {get { return GetParameter(52809); }set { SetParameter(52809, value); }}
	/// <summary>PID: 52901  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Channelnumber_52901 {get { return GetParameter(52901); }set { SetParameter(52901, value); }}
	/// <summary>PID: 52901  | Type: read</summary>
	public System.Object Channelnumber {get { return GetParameter(52901); }set { SetParameter(52901, value); }}
	/// <summary>PID: 52902  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Channelname_52902 {get { return GetParameter(52902); }set { SetParameter(52902, value); }}
	/// <summary>PID: 52902  | Type: read</summary>
	public System.Object Channelname {get { return GetParameter(52902); }set { SetParameter(52902, value); }}
	/// <summary>PID: 52903  | Type: read | DISCREETS: Ready = 1, Failed = 2, Online = 3, Offline = 4, Degraded = 6</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Channelstate_52903 {get { return GetParameter(52903); }set { SetParameter(52903, value); }}
	/// <summary>PID: 52903  | Type: read | DISCREETS: Ready = 1, Failed = 2, Online = 3, Offline = 4, Degraded = 6</summary>
	public System.Object Channelstate {get { return GetParameter(52903); }set { SetParameter(52903, value); }}
	/// <summary>PID: 52904  | Type: read | DISCREETS: Other = 1, Unknown = 2, OK = 3, Non Critical = 4, Critical = 5, Non Recoverable = 6</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Channelrollupstatus_52904 {get { return GetParameter(52904); }set { SetParameter(52904, value); }}
	/// <summary>PID: 52904  | Type: read | DISCREETS: Other = 1, Unknown = 2, OK = 3, Non Critical = 4, Critical = 5, Non Recoverable = 6</summary>
	public System.Object Channelrollupstatus {get { return GetParameter(52904); }set { SetParameter(52904, value); }}
	/// <summary>PID: 52905  | Type: read | DISCREETS: Other = 1, Unknown = 2, OK = 3, Non Critical = 4, Critical = 5, Non Recoverable = 6</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Channelcomponentstatus_52905 {get { return GetParameter(52905); }set { SetParameter(52905, value); }}
	/// <summary>PID: 52905  | Type: read | DISCREETS: Other = 1, Unknown = 2, OK = 3, Non Critical = 4, Critical = 5, Non Recoverable = 6</summary>
	public System.Object Channelcomponentstatus {get { return GetParameter(52905); }set { SetParameter(52905, value); }}
	/// <summary>PID: 52906  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Channelnexusid_52906 {get { return GetParameter(52906); }set { SetParameter(52906, value); }}
	/// <summary>PID: 52906  | Type: read</summary>
	public System.Object Channelnexusid {get { return GetParameter(52906); }set { SetParameter(52906, value); }}
	/// <summary>PID: 52907  | Type: read | DISCREETS: SCSI = 1, IDE = 2, Fiber Channel = 3, SSA = 4, USB = 6, SATA = 7, SAS = 8</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Channelbustype_52907 {get { return GetParameter(52907); }set { SetParameter(52907, value); }}
	/// <summary>PID: 52907  | Type: read | DISCREETS: SCSI = 1, IDE = 2, Fiber Channel = 3, SSA = 4, USB = 6, SATA = 7, SAS = 8</summary>
	public System.Object Channelbustype {get { return GetParameter(52907); }set { SetParameter(52907, value); }}
	/// <summary>PID: 53001  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Enclosurenumber_53001 {get { return GetParameter(53001); }set { SetParameter(53001, value); }}
	/// <summary>PID: 53001  | Type: read</summary>
	public System.Object Enclosurenumber {get { return GetParameter(53001); }set { SetParameter(53001, value); }}
	/// <summary>PID: 53002  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Enclosurename_53002 {get { return GetParameter(53002); }set { SetParameter(53002, value); }}
	/// <summary>PID: 53002  | Type: read</summary>
	public System.Object Enclosurename {get { return GetParameter(53002); }set { SetParameter(53002, value); }}
	/// <summary>PID: 53003  | Type: read | DISCREETS: Ready = 1, Failed = 2, Online = 3, Offline = 4, Degraded = 6</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Enclosurestate_53003 {get { return GetParameter(53003); }set { SetParameter(53003, value); }}
	/// <summary>PID: 53003  | Type: read | DISCREETS: Ready = 1, Failed = 2, Online = 3, Offline = 4, Degraded = 6</summary>
	public System.Object Enclosurestate {get { return GetParameter(53003); }set { SetParameter(53003, value); }}
	/// <summary>PID: 53004  | Type: read | DISCREETS: Internal = 1, Dell PV200S (PV201S) = 2, Dell PV210S (PV211S) = 3, Dell PV220S (PV221S) = 4, Dell PV660F = 5, Dell PV224F = 6, Dell PV660F / PV224F = 7, Dell MD1000 = 8, Dell MD1120 = 9</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Enclosuretype_53004 {get { return GetParameter(53004); }set { SetParameter(53004, value); }}
	/// <summary>PID: 53004  | Type: read | DISCREETS: Internal = 1, Dell PV200S (PV201S) = 2, Dell PV210S (PV211S) = 3, Dell PV220S (PV221S) = 4, Dell PV660F = 5, Dell PV224F = 6, Dell PV660F / PV224F = 7, Dell MD1000 = 8, Dell MD1120 = 9</summary>
	public System.Object Enclosuretype {get { return GetParameter(53004); }set { SetParameter(53004, value); }}
	/// <summary>PID: 53005  | Type: read | DISCREETS: Other = 1, Unknown = 2, OK = 3, Non Critical = 4, Critical = 5, Non Recoverable = 6</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Enclosurerollupstatus_53005 {get { return GetParameter(53005); }set { SetParameter(53005, value); }}
	/// <summary>PID: 53005  | Type: read | DISCREETS: Other = 1, Unknown = 2, OK = 3, Non Critical = 4, Critical = 5, Non Recoverable = 6</summary>
	public System.Object Enclosurerollupstatus {get { return GetParameter(53005); }set { SetParameter(53005, value); }}
	/// <summary>PID: 53006  | Type: read | DISCREETS: Other = 1, Unknown = 2, OK = 3, Non Critical = 4, Critical = 5, Non Recoverable = 6</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Enclosurecomponentstatus_53006 {get { return GetParameter(53006); }set { SetParameter(53006, value); }}
	/// <summary>PID: 53006  | Type: read | DISCREETS: Other = 1, Unknown = 2, OK = 3, Non Critical = 4, Critical = 5, Non Recoverable = 6</summary>
	public System.Object Enclosurecomponentstatus {get { return GetParameter(53006); }set { SetParameter(53006, value); }}
	/// <summary>PID: 53007  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Enclosurenexusid_53007 {get { return GetParameter(53007); }set { SetParameter(53007, value); }}
	/// <summary>PID: 53007  | Type: read</summary>
	public System.Object Enclosurenexusid {get { return GetParameter(53007); }set { SetParameter(53007, value); }}
	/// <summary>PID: 53008  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Enclosurefirmwareversion_53008 {get { return GetParameter(53008); }set { SetParameter(53008, value); }}
	/// <summary>PID: 53008  | Type: read</summary>
	public System.Object Enclosurefirmwareversion {get { return GetParameter(53008); }set { SetParameter(53008, value); }}
	/// <summary>PID: 53101  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Arraydisknumber_53101 {get { return GetParameter(53101); }set { SetParameter(53101, value); }}
	/// <summary>PID: 53101  | Type: read</summary>
	public System.Object Arraydisknumber {get { return GetParameter(53101); }set { SetParameter(53101, value); }}
	/// <summary>PID: 53102  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Arraydiskname_53102 {get { return GetParameter(53102); }set { SetParameter(53102, value); }}
	/// <summary>PID: 53102  | Type: read</summary>
	public System.Object Arraydiskname {get { return GetParameter(53102); }set { SetParameter(53102, value); }}
	/// <summary>PID: 53103  | Type: read | DISCREETS: Ready = 1, Failed = 2, Online = 3, Offline = 4, Degraded = 6, Recovering = 7, Removed = 11, Resynching = 15, Rebuild = 24, No Media = 25, Formatting = 26, Diagnostics = 28, Predictive Failure = 34, Initializing = 35, Foreign = 39, Clear = 40, Unsupported = 41, Incompatible = 53</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Arraydiskstate_53103 {get { return GetParameter(53103); }set { SetParameter(53103, value); }}
	/// <summary>PID: 53103  | Type: read | DISCREETS: Ready = 1, Failed = 2, Online = 3, Offline = 4, Degraded = 6, Recovering = 7, Removed = 11, Resynching = 15, Rebuild = 24, No Media = 25, Formatting = 26, Diagnostics = 28, Predictive Failure = 34, Initializing = 35, Foreign = 39, Clear = 40, Unsupported = 41, Incompatible = 53</summary>
	public System.Object Arraydiskstate {get { return GetParameter(53103); }set { SetParameter(53103, value); }}
	/// <summary>PID: 53104  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Arraydiskproductid_53104 {get { return GetParameter(53104); }set { SetParameter(53104, value); }}
	/// <summary>PID: 53104  | Type: read</summary>
	public System.Object Arraydiskproductid {get { return GetParameter(53104); }set { SetParameter(53104, value); }}
	/// <summary>PID: 53105  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Arraydiskserialno_53105 {get { return GetParameter(53105); }set { SetParameter(53105, value); }}
	/// <summary>PID: 53105  | Type: read</summary>
	public System.Object Arraydiskserialno {get { return GetParameter(53105); }set { SetParameter(53105, value); }}
	/// <summary>PID: 53106  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Arraydiskrevision_53106 {get { return GetParameter(53106); }set { SetParameter(53106, value); }}
	/// <summary>PID: 53106  | Type: read</summary>
	public System.Object Arraydiskrevision {get { return GetParameter(53106); }set { SetParameter(53106, value); }}
	/// <summary>PID: 53107  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Arraydisklengthinmb_53107 {get { return GetParameter(53107); }set { SetParameter(53107, value); }}
	/// <summary>PID: 53107  | Type: read</summary>
	public System.Object Arraydisklengthinmb {get { return GetParameter(53107); }set { SetParameter(53107, value); }}
	/// <summary>PID: 53108  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Arraydiskusedspaceinmb_53108 {get { return GetParameter(53108); }set { SetParameter(53108, value); }}
	/// <summary>PID: 53108  | Type: read</summary>
	public System.Object Arraydiskusedspaceinmb {get { return GetParameter(53108); }set { SetParameter(53108, value); }}
	/// <summary>PID: 53109  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Arraydiskfreespaceinmb_53109 {get { return GetParameter(53109); }set { SetParameter(53109, value); }}
	/// <summary>PID: 53109  | Type: read</summary>
	public System.Object Arraydiskfreespaceinmb {get { return GetParameter(53109); }set { SetParameter(53109, value); }}
	/// <summary>PID: 53110  | Type: read | DISCREETS: SCSI = 1, IDE = 2, Fiber Channel = 3, SSA = 4, USB = 6, SATA = 7, SAS = 8</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Arraydiskbustype_53110 {get { return GetParameter(53110); }set { SetParameter(53110, value); }}
	/// <summary>PID: 53110  | Type: read | DISCREETS: SCSI = 1, IDE = 2, Fiber Channel = 3, SSA = 4, USB = 6, SATA = 7, SAS = 8</summary>
	public System.Object Arraydiskbustype {get { return GetParameter(53110); }set { SetParameter(53110, value); }}
	/// <summary>PID: 53111  | Type: read | DISCREETS: Member VD = 1, Member DG = 2, Global Hot Spare = 3, Dedicated Hot Spare = 4, Not a Spare = 5, Not Applicable = 99</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Arraydisksparestate_53111 {get { return GetParameter(53111); }set { SetParameter(53111, value); }}
	/// <summary>PID: 53111  | Type: read | DISCREETS: Member VD = 1, Member DG = 2, Global Hot Spare = 3, Dedicated Hot Spare = 4, Not a Spare = 5, Not Applicable = 99</summary>
	public System.Object Arraydisksparestate {get { return GetParameter(53111); }set { SetParameter(53111, value); }}
	/// <summary>PID: 53112  | Type: read | DISCREETS: Other = 1, Unknown = 2, OK = 3, Non Critical = 4, Critical = 5, Non Recoverable = 6</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Arraydiskrollupstatus_53112 {get { return GetParameter(53112); }set { SetParameter(53112, value); }}
	/// <summary>PID: 53112  | Type: read | DISCREETS: Other = 1, Unknown = 2, OK = 3, Non Critical = 4, Critical = 5, Non Recoverable = 6</summary>
	public System.Object Arraydiskrollupstatus {get { return GetParameter(53112); }set { SetParameter(53112, value); }}
	/// <summary>PID: 53113  | Type: read | DISCREETS: Other = 1, Unknown = 2, OK = 3, Non Critical = 4, Critical = 5, Non Recoverable = 6</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Arraydiskcomponentstatus_53113 {get { return GetParameter(53113); }set { SetParameter(53113, value); }}
	/// <summary>PID: 53113  | Type: read | DISCREETS: Other = 1, Unknown = 2, OK = 3, Non Critical = 4, Critical = 5, Non Recoverable = 6</summary>
	public System.Object Arraydiskcomponentstatus {get { return GetParameter(53113); }set { SetParameter(53113, value); }}
	/// <summary>PID: 53114  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Arraydisknexusid_53114 {get { return GetParameter(53114); }set { SetParameter(53114, value); }}
	/// <summary>PID: 53114  | Type: read</summary>
	public System.Object Arraydisknexusid {get { return GetParameter(53114); }set { SetParameter(53114, value); }}
	/// <summary>PID: 53115  | Type: read | DISCREETS: No = 1, Yes = 2</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Arraydisksmartalertindication_53115 {get { return GetParameter(53115); }set { SetParameter(53115, value); }}
	/// <summary>PID: 53115  | Type: read | DISCREETS: No = 1, Yes = 2</summary>
	public System.Object Arraydisksmartalertindication {get { return GetParameter(53115); }set { SetParameter(53115, value); }}
	/// <summary>PID: 53116  | Type: read | DISCREETS: Unknown = 1, HDD = 2, SSD = 3</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Arraydiskmediatype_53116 {get { return GetParameter(53116); }set { SetParameter(53116, value); }}
	/// <summary>PID: 53116  | Type: read | DISCREETS: Unknown = 1, HDD = 2, SSD = 3</summary>
	public System.Object Arraydiskmediatype {get { return GetParameter(53116); }set { SetParameter(53116, value); }}
	/// <summary>PID: 53201  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Virtualdisknumber_53201 {get { return GetParameter(53201); }set { SetParameter(53201, value); }}
	/// <summary>PID: 53201  | Type: read</summary>
	public System.Object Virtualdisknumber {get { return GetParameter(53201); }set { SetParameter(53201, value); }}
	/// <summary>PID: 53202  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Virtualdiskname_53202 {get { return GetParameter(53202); }set { SetParameter(53202, value); }}
	/// <summary>PID: 53202  | Type: read</summary>
	public System.Object Virtualdiskname {get { return GetParameter(53202); }set { SetParameter(53202, value); }}
	/// <summary>PID: 53203  | Type: read | DISCREETS: Ready = 1, Failed = 2, Online = 3, Offline = 4, Degraded = 6, Verifying = 7, Resynching = 15, Regenerating = 16, Failed Redundancy = 18, Rebuilding = 24, Formatting = 26, Reconstructing = 32, Initializing = 35, Background Init = 36, Permanently Degraded = 52</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Virtualdiskstate_53203 {get { return GetParameter(53203); }set { SetParameter(53203, value); }}
	/// <summary>PID: 53203  | Type: read | DISCREETS: Ready = 1, Failed = 2, Online = 3, Offline = 4, Degraded = 6, Verifying = 7, Resynching = 15, Regenerating = 16, Failed Redundancy = 18, Rebuilding = 24, Formatting = 26, Reconstructing = 32, Initializing = 35, Background Init = 36, Permanently Degraded = 52</summary>
	public System.Object Virtualdiskstate {get { return GetParameter(53203); }set { SetParameter(53203, value); }}
	/// <summary>PID: 53204  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Virtualdisklengthinmb_53204 {get { return GetParameter(53204); }set { SetParameter(53204, value); }}
	/// <summary>PID: 53204  | Type: read</summary>
	public System.Object Virtualdisklengthinmb {get { return GetParameter(53204); }set { SetParameter(53204, value); }}
	/// <summary>PID: 53205  | Type: read | DISCREETS: Concatenated = 1, RAID-0 = 2, RAID-1 = 3, RAID-2 = 4, RAID-3 = 5, RAID-4 = 6, RAID-5 = 7, RAID-6 = 8, RAID-7 = 9, RAID-10 = 10, RAID-30 = 11, RAID-50 = 12, Add Spares = 13, Delete Logical = 14, Transform Logical = 15, RAID-0 -Plus-1 = 18, Concat RAID-1 = 19, Concat RAID-5 = 20, No RAID = 21, Volume = 22, RAID Morph = 23, RAID-60 = 24</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Virtualdisklayout_53205 {get { return GetParameter(53205); }set { SetParameter(53205, value); }}
	/// <summary>PID: 53205  | Type: read | DISCREETS: Concatenated = 1, RAID-0 = 2, RAID-1 = 3, RAID-2 = 4, RAID-3 = 5, RAID-4 = 6, RAID-5 = 7, RAID-6 = 8, RAID-7 = 9, RAID-10 = 10, RAID-30 = 11, RAID-50 = 12, Add Spares = 13, Delete Logical = 14, Transform Logical = 15, RAID-0 -Plus-1 = 18, Concat RAID-1 = 19, Concat RAID-5 = 20, No RAID = 21, Volume = 22, RAID Morph = 23, RAID-60 = 24</summary>
	public System.Object Virtualdisklayout {get { return GetParameter(53205); }set { SetParameter(53205, value); }}
	/// <summary>PID: 53206  | Type: read | DISCREETS: Other = 1, Unknown = 2, OK = 3, Non Critical = 4, Critical = 5, Non Recoverable = 6</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Virtualdiskrollupstatus_53206 {get { return GetParameter(53206); }set { SetParameter(53206, value); }}
	/// <summary>PID: 53206  | Type: read | DISCREETS: Other = 1, Unknown = 2, OK = 3, Non Critical = 4, Critical = 5, Non Recoverable = 6</summary>
	public System.Object Virtualdiskrollupstatus {get { return GetParameter(53206); }set { SetParameter(53206, value); }}
	/// <summary>PID: 53301  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Dellcpu_53301 {get { return GetParameter(53301); }set { SetParameter(53301, value); }}
	/// <summary>PID: 53301  | Type: read</summary>
	public System.Object Dellcpu {get { return GetParameter(53301); }set { SetParameter(53301, value); }}
	/// <summary>PID: 53302  | Type: read | DISCREETS: Other = 1, Unknown = 2, OK = 3, Non Critical = 4, Critical = 5, Non Recoverable = 6</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Processordevicestatus_53302 {get { return GetParameter(53302); }set { SetParameter(53302, value); }}
	/// <summary>PID: 53302  | Type: read | DISCREETS: Other = 1, Unknown = 2, OK = 3, Non Critical = 4, Critical = 5, Non Recoverable = 6</summary>
	public System.Object Processordevicestatus {get { return GetParameter(53302); }set { SetParameter(53302, value); }}
	/// <summary>PID: 53303  | Type: read | DISCREETS: Other = 1, Unknown = 2, CPU = 3, Processor = 4, DSP = 5, AVideo Processor = 6</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Processordevicetype_53303 {get { return GetParameter(53303); }set { SetParameter(53303, value); }}
	/// <summary>PID: 53303  | Type: read | DISCREETS: Other = 1, Unknown = 2, CPU = 3, Processor = 4, DSP = 5, AVideo Processor = 6</summary>
	public System.Object Processordevicetype {get { return GetParameter(53303); }set { SetParameter(53303, value); }}
	/// <summary>PID: 53304  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Processordevicemanufacturername_53304 {get { return GetParameter(53304); }set { SetParameter(53304, value); }}
	/// <summary>PID: 53304  | Type: read</summary>
	public System.Object Processordevicemanufacturername {get { return GetParameter(53304); }set { SetParameter(53304, value); }}
	/// <summary>PID: 53305  | Type: read | DISCREETS: Other = 1, Unknown = 2, 8086 = 3, 80286 = 4, Intel 386 = 5, Intel 486 = 6, 8087 = 7, 80287 = 8, 80387 = 9, 80487 = 10, Pentium = 11, Pentium Pro = 12, Pentium II = 13, Pentium MMX = 14, Celeron = 15, Pentium II Xeon = 16, Pentium III = 17, Pentium III Xeon = 18, Pentium III Speed Step = 19, Itanium = 20, Intel Xeon = 21, Pentium 4 = 22, Intel Xeon MP = 23, Intel Itanium 2 = 24, K5 = 25, K6 = 26, K6 -2 = 27, K6 -3 = 28, AMD Athlon = 29, AMD 2900 = 30, K6 -2 Plus = 31, Power PC = 32, Power PC601 = 33, Power PC603 = 34, Power PC603 Plus = 35, Power PC604 = 36, Power PC620 = 37, Power PCx704 = 38, Power PC750 = 39, Alpha = 48, Alpha 21064 = 49, Alpha 21066 = 50, Alpha 21164 = 51, Alpha 21164 PC = 52, Alpha 21164 A = 53, Alpha 21264 = 54, Alpha 21364 = 55, MIPS = 64, MIPSR4000 = 65, MIPSR4200 = 66, MIPSR4400 = 67, MIPSR4600 = 68, MIPSR10000 = 69, SPARC = 80, Super SPARC = 81, Micro SPARCII = 82, Micro SPARCIIep = 83, Ultra SPARC = 84, Ultra SPARCII = 85, Ultra SPARCIIi = 86, Ultra SPARCIII = 87, Ultra SPARCIIIi = 88, 68040 = 96, 68 XXX = 97, 68000 = 98, 68010 = 99, 68020 = 100, 68030 = 101, Hobbit = 112, Crusoe TM5000 = 120, Crusoe TM3000 = 121, Efficeon TM8000 = 122, Weitek = 128, AMD Athlon 64 = 131, AMD Opteron = 132, AMD Sempron = 133, AMDTurion64 Mobile = 134, Dual Core AMDOpteron = 135, AMD Athlon 64 X2 Dual Core = 136, AMD Turion 64 X2 Mobile = 137, Quad Core AMD Opteron = 138, Third Generation AMD Opteron = 139, PA- RISC = 144, PA- RISC8500 = 145, PA- RISC8000 = 146, PA- RISC7300 LC = 147, PA- RISC7200 = 148, PA- RISC7100 LC = 149, PA- RISC7100 = 150, V30 = 160, Dual Core Intel Xeon 5200 = 171, Dual Core Intel Xeon 7200 = 172, Quad Core Intel Xeon 7300 = 173, Quad Core Intel Xeon 7400 = 174, Multi Core Intel Xeon 7400 = 175, M1 = 176, M2 = 177, AS400 = 180, AMD Athlon XP = 182, AMD Athlon MP = 183, AMD Duron = 184, Intel Pentium M = 185, Intel Celeron D = 186, Intel Pentium D = 187, Intel Pentium Extreme = 188, Intel Core Solo = 189, Intel Core2 = 190, Intel Core2 Duo = 191, Intel Corei7 = 198, Dual Core Intel Celeron = 199, IBM390 = 200, G4 = 201, G5 = 202, ESA390 G6 = 203, z Architecture = 204, VIAC7 - M = 210, VIAC7 - D = 211, VIAC7 = 212, VIAEden = 213, Multi Core Intel Xeon = 214, Dual Core Intel Xeon3 XXX = 215, Quad Core Intel Xeon3 XXX = 216, Dual Core Intel Xeon5 XXX = 218, Quad Core Intel Xeon5 XXX = 219, Dual Core Intel Xeon7 XXX = 221, Quad Core Intel Xeon7 XXX = 222, Multi Core Intel Xeon7 XXX = 223, i860 = 250, i960 = 251</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Processordevicefamily_53305 {get { return GetParameter(53305); }set { SetParameter(53305, value); }}
	/// <summary>PID: 53305  | Type: read | DISCREETS: Other = 1, Unknown = 2, 8086 = 3, 80286 = 4, Intel 386 = 5, Intel 486 = 6, 8087 = 7, 80287 = 8, 80387 = 9, 80487 = 10, Pentium = 11, Pentium Pro = 12, Pentium II = 13, Pentium MMX = 14, Celeron = 15, Pentium II Xeon = 16, Pentium III = 17, Pentium III Xeon = 18, Pentium III Speed Step = 19, Itanium = 20, Intel Xeon = 21, Pentium 4 = 22, Intel Xeon MP = 23, Intel Itanium 2 = 24, K5 = 25, K6 = 26, K6 -2 = 27, K6 -3 = 28, AMD Athlon = 29, AMD 2900 = 30, K6 -2 Plus = 31, Power PC = 32, Power PC601 = 33, Power PC603 = 34, Power PC603 Plus = 35, Power PC604 = 36, Power PC620 = 37, Power PCx704 = 38, Power PC750 = 39, Alpha = 48, Alpha 21064 = 49, Alpha 21066 = 50, Alpha 21164 = 51, Alpha 21164 PC = 52, Alpha 21164 A = 53, Alpha 21264 = 54, Alpha 21364 = 55, MIPS = 64, MIPSR4000 = 65, MIPSR4200 = 66, MIPSR4400 = 67, MIPSR4600 = 68, MIPSR10000 = 69, SPARC = 80, Super SPARC = 81, Micro SPARCII = 82, Micro SPARCIIep = 83, Ultra SPARC = 84, Ultra SPARCII = 85, Ultra SPARCIIi = 86, Ultra SPARCIII = 87, Ultra SPARCIIIi = 88, 68040 = 96, 68 XXX = 97, 68000 = 98, 68010 = 99, 68020 = 100, 68030 = 101, Hobbit = 112, Crusoe TM5000 = 120, Crusoe TM3000 = 121, Efficeon TM8000 = 122, Weitek = 128, AMD Athlon 64 = 131, AMD Opteron = 132, AMD Sempron = 133, AMDTurion64 Mobile = 134, Dual Core AMDOpteron = 135, AMD Athlon 64 X2 Dual Core = 136, AMD Turion 64 X2 Mobile = 137, Quad Core AMD Opteron = 138, Third Generation AMD Opteron = 139, PA- RISC = 144, PA- RISC8500 = 145, PA- RISC8000 = 146, PA- RISC7300 LC = 147, PA- RISC7200 = 148, PA- RISC7100 LC = 149, PA- RISC7100 = 150, V30 = 160, Dual Core Intel Xeon 5200 = 171, Dual Core Intel Xeon 7200 = 172, Quad Core Intel Xeon 7300 = 173, Quad Core Intel Xeon 7400 = 174, Multi Core Intel Xeon 7400 = 175, M1 = 176, M2 = 177, AS400 = 180, AMD Athlon XP = 182, AMD Athlon MP = 183, AMD Duron = 184, Intel Pentium M = 185, Intel Celeron D = 186, Intel Pentium D = 187, Intel Pentium Extreme = 188, Intel Core Solo = 189, Intel Core2 = 190, Intel Core2 Duo = 191, Intel Corei7 = 198, Dual Core Intel Celeron = 199, IBM390 = 200, G4 = 201, G5 = 202, ESA390 G6 = 203, z Architecture = 204, VIAC7 - M = 210, VIAC7 - D = 211, VIAC7 = 212, VIAEden = 213, Multi Core Intel Xeon = 214, Dual Core Intel Xeon3 XXX = 215, Quad Core Intel Xeon3 XXX = 216, Dual Core Intel Xeon5 XXX = 218, Quad Core Intel Xeon5 XXX = 219, Dual Core Intel Xeon7 XXX = 221, Quad Core Intel Xeon7 XXX = 222, Multi Core Intel Xeon7 XXX = 223, i860 = 250, i960 = 251</summary>
	public System.Object Processordevicefamily {get { return GetParameter(53305); }set { SetParameter(53305, value); }}
	/// <summary>PID: 53306  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Processordevicemaximumspeed_53306 {get { return GetParameter(53306); }set { SetParameter(53306, value); }}
	/// <summary>PID: 53306  | Type: read</summary>
	public System.Object Processordevicemaximumspeed {get { return GetParameter(53306); }set { SetParameter(53306, value); }}
	/// <summary>PID: 53307  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Processordevicecurrentspeed_53307 {get { return GetParameter(53307); }set { SetParameter(53307, value); }}
	/// <summary>PID: 53307  | Type: read</summary>
	public System.Object Processordevicecurrentspeed {get { return GetParameter(53307); }set { SetParameter(53307, value); }}
	/// <summary>PID: 53308  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Processordevicecorecount_53308 {get { return GetParameter(53308); }set { SetParameter(53308, value); }}
	/// <summary>PID: 53308  | Type: read</summary>
	public System.Object Processordevicecorecount {get { return GetParameter(53308); }set { SetParameter(53308, value); }}
	/// <summary>PID: 53401  | Type: read | DISCREETS: Unknown = 1, Enabled = 2, Not Ready = 4, Enabled and Not Ready = 6</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Memorydevicestatesettings_53401 {get { return GetParameter(53401); }set { SetParameter(53401, value); }}
	/// <summary>PID: 53401  | Type: read | DISCREETS: Unknown = 1, Enabled = 2, Not Ready = 4, Enabled and Not Ready = 6</summary>
	public System.Object Memorydevicestatesettings {get { return GetParameter(53401); }set { SetParameter(53401, value); }}
	/// <summary>PID: 53402  | Type: read | DISCREETS: Other = 1, Unknown = 2, OK = 3, Non Critical = 4, Critical = 5, Non Recoverable = 6</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Memorydevicestatus_53402 {get { return GetParameter(53402); }set { SetParameter(53402, value); }}
	/// <summary>PID: 53402  | Type: read | DISCREETS: Other = 1, Unknown = 2, OK = 3, Non Critical = 4, Critical = 5, Non Recoverable = 6</summary>
	public System.Object Memorydevicestatus {get { return GetParameter(53402); }set { SetParameter(53402, value); }}
	/// <summary>PID: 53403  | Type: read | DISCREETS: Other = 1, Unknown = 2, DRAM = 3, EDRAM = 4, VRAM = 5, SRAM = 6, RAM = 7, ROM = 8, FLASH = 9, EEPROM = 10, FEPROM = 11, EPROM = 12, CDRAM = 13, 3DRAM = 14, SDRAM = 15, SGRAM = 16, RDRAM = 17, DDR = 18, DDR2 = 19, DDR2 FBDIMM = 20, DDR3 = 24</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Memorydevicetype_53403 {get { return GetParameter(53403); }set { SetParameter(53403, value); }}
	/// <summary>PID: 53403  | Type: read | DISCREETS: Other = 1, Unknown = 2, DRAM = 3, EDRAM = 4, VRAM = 5, SRAM = 6, RAM = 7, ROM = 8, FLASH = 9, EEPROM = 10, FEPROM = 11, EPROM = 12, CDRAM = 13, 3DRAM = 14, SDRAM = 15, SGRAM = 16, RDRAM = 17, DDR = 18, DDR2 = 19, DDR2 FBDIMM = 20, DDR3 = 24</summary>
	public System.Object Memorydevicetype {get { return GetParameter(53403); }set { SetParameter(53403, value); }}
	/// <summary>PID: 53404  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Memorydevicelocationname_53404 {get { return GetParameter(53404); }set { SetParameter(53404, value); }}
	/// <summary>PID: 53404  | Type: read</summary>
	public System.Object Memorydevicelocationname {get { return GetParameter(53404); }set { SetParameter(53404, value); }}
	/// <summary>PID: 53405  | Type: read | EXCEPTIONS: Unknown = 2147483647, No Mem. Installed = 0</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Memorydevicesize_53405 {get { return GetParameter(53405); }set { SetParameter(53405, value); }}
	/// <summary>PID: 53405  | Type: read | EXCEPTIONS: Unknown = 2147483647, No Mem. Installed = 0</summary>
	public System.Object Memorydevicesize {get { return GetParameter(53405); }set { SetParameter(53405, value); }}
	/// <summary>PID: 53406  | Type: read | EXCEPTIONS: Unknown = 0</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Memorydevicespeed_53406 {get { return GetParameter(53406); }set { SetParameter(53406, value); }}
	/// <summary>PID: 53406  | Type: read | EXCEPTIONS: Unknown = 0</summary>
	public System.Object Memorydevicespeed {get { return GetParameter(53406); }set { SetParameter(53406, value); }}
	/// <summary>PID: 53407  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Memorydevicepartnumbername_53407 {get { return GetParameter(53407); }set { SetParameter(53407, value); }}
	/// <summary>PID: 53407  | Type: read</summary>
	public System.Object Memorydevicepartnumbername {get { return GetParameter(53407); }set { SetParameter(53407, value); }}
	/// <summary>PID: 53421  | Type: write | DISCREETS: Unknown = 1, Enabled = 2, Not Ready = 4, Enabled and Not Ready = 6</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Memorydevicestatesettings_53421 {get { return GetParameter(53421); }set { SetParameter(53421, value); }}
	/// <summary>PID: 53441  | Type: write</summary>
	public System.Object Memorydevicestatesettingssnmpset_53441 {get { return GetParameter(53441); }set { SetParameter(53441, value); }}
	/// <summary>PID: 53441  | Type: write</summary>
	public System.Object Memorydevicestatesettingssnmpset {get { return Write.Memorydevicestatesettingssnmpset; }set { Write.Memorydevicestatesettingssnmpset = value; }}
	/// <summary>PID: 53490  | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Dellmemoryindex_53490 {get { return GetParameter(53490); }set { SetParameter(53490, value); }}
	/// <summary>PID: 53490  | Type: read</summary>
	public System.Object Dellmemoryindex {get { return GetParameter(53490); }set { SetParameter(53490, value); }}
	public WriteParameters Write { get; set; }
	public ConcreteSLProtocolExt()
	{
		hrdevicetype = new HrdevicetypeQActionTable(this, 50, "hrdevicetype");
		processcounter = new ProcesscounterQActionTable(this, 70, "processcounter");
		taskmanager = new TaskmanagerQActionTable(this, 80, "taskmanager");
		hrswrunperftable = new HrswrunperftableQActionTable(this, 90, "hrswrunperftable");
		normalizetaskmanager = new NormalizetaskmanagerQActionTable(this, 110, "normalizetaskmanager");
		softwareinfo = new SoftwareinfoQActionTable(this, 130, "softwareinfo");
		hrfstable = new HrfstableQActionTable(this, 140, "hrfstable");
		ipaddrtable = new IpaddrtableQActionTable(this, 150, "ipaddrtable");
		iproutetable = new IproutetableQActionTable(this, 160, "iproutetable");
		jobdatatable = new JobdatatableQActionTable(this, 210, "jobdatatable");
		inputswitcher = new InputswitcherQActionTable(this, 230, "inputswitcher");
		rftuning = new RftuningQActionTable(this, 250, "rftuning");
		channalList = new ChannalListQActionTable(this, 280, "channalList");
		jobstatistics = new JobstatisticsQActionTable(this, 290, "jobstatistics");
		storagestoragesize = new StoragestoragesizeQActionTable(this, 350, "storagestoragesize");
		storagestoragesize2 = new Storagestoragesize2QActionTable(this, 355, "storagestoragesize2");
		storageinstanceindex = new StorageinstanceindexQActionTable(this, 360, "storageinstanceindex");
		storagetable = new StoragetableQActionTable(this, 400, "storagetable");
		storageavailability = new StorageavailabilityQActionTable(this, 500, "storageavailability");
		interfacestable = new InterfacestableQActionTable(this, 600, "interfacestable");
		interfacetableconfig = new InterfacetableconfigQActionTable(this, 800, "interfacetableconfig");
		ifxtable = new IfxtableQActionTable(this, 900, "ifxtable");
		linuxmonitoredprocesseslist = new LinuxmonitoredprocesseslistQActionTable(this, 1020, "linuxmonitoredprocesseslist");
		mountavailability = new MountavailabilityQActionTable(this, 1040, "mountavailability");
		linuxmonitoreddisks = new LinuxmonitoreddisksQActionTable(this, 1050, "linuxmonitoreddisks");
		loadaverageinformation = new LoadaverageinformationQActionTable(this, 1100, "loadaverageinformation");
		processortable = new ProcessortableQActionTable(this, 1220, "processortable");
		lvsservicetable = new LvsservicetableQActionTable(this, 1600, "lvsservicetable");
		lvsrealtable = new LvsrealtableQActionTable(this, 1700, "lvsrealtable");
		externaldataoverview = new ExternaldataoverviewQActionTable(this, 8000, "externaldataoverview");
		processvalidationtable = new ProcessvalidationtableQActionTable(this, 8600, "processvalidationtable");
		exttable = new ExttableQActionTable(this, 10000, "exttable");
		diskiotable = new DiskiotableQActionTable(this, 10100, "diskiotable");
		ipsystemstatstable = new IpsystemstatstableQActionTable(this, 22000, "ipsystemstatstable");
		tcpconnectiontable = new TcpconnectiontableQActionTable(this, 22400, "tcpconnectiontable");
		portlist = new PortlistQActionTable(this, 40009, "portlist");
		remotedcfinterfacetable = new RemotedcfinterfacetableQActionTable(this, 49997, "remotedcfinterfacetable");
		cpqhetemperaturetable = new CpqhetemperaturetableQActionTable(this, 50300, "cpqhetemperaturetable");
		hppowersupplytable = new HppowersupplytableQActionTable(this, 50400, "hppowersupplytable");
		hpfantable = new HpfantableQActionTable(this, 50500, "hpfantable");
		cpqdacntlrtable = new CpqdacntlrtableQActionTable(this, 50600, "cpqdacntlrtable");
		cpqdaacceltable = new CpqdaacceltableQActionTable(this, 50700, "cpqdaacceltable");
		cpqheresmem2moduletable = new Cpqheresmem2moduletableQActionTable(this, 50750, "cpqheresmem2moduletable");
		cpqdaphydrvtable = new CpqdaphydrvtableQActionTable(this, 50800, "cpqdaphydrvtable");
		cpqdalogdrvtable = new CpqdalogdrvtableQActionTable(this, 50900, "cpqdalogdrvtable");
		cpqsecputable = new CpqsecputableQActionTable(this, 51000, "cpqsecputable");
		powersupplytable = new PowersupplytableQActionTable(this, 52200, "powersupplytable");
		temperatureprobetable = new TemperatureprobetableQActionTable(this, 52300, "temperatureprobetable");
		coolingdevicetable = new CoolingdevicetableQActionTable(this, 52400, "coolingdevicetable");
		controllertable = new ControllertableQActionTable(this, 52800, "controllertable");
		channeltable = new ChanneltableQActionTable(this, 52900, "channeltable");
		enclosuretable = new EnclosuretableQActionTable(this, 53000, "enclosuretable");
		arraydisktable = new ArraydisktableQActionTable(this, 53100, "arraydisktable");
		virtualdisktable = new VirtualdisktableQActionTable(this, 53200, "virtualdisktable");
		processordevicetable = new ProcessordevicetableQActionTable(this, 53300, "processordevicetable");
		memorydevicetable = new MemorydevicetableQActionTable(this, 53400, "memorydevicetable");
		Write = new WriteParameters(this);
	}
}
/// <summary>IDX: 0</summary>
public class HrdevicetypeQActionTable : QActionTable, IEnumerable<HrdevicetypeQActionRow>
{
	public HrdevicetypeQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<HrdevicetypeQActionRow> GetEnumerator() { return new QActionTableEnumerator<HrdevicetypeQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class ProcesscounterQActionTable : QActionTable, IEnumerable<ProcesscounterQActionRow>
{
	public ProcesscounterQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<ProcesscounterQActionRow> GetEnumerator() { return new QActionTableEnumerator<ProcesscounterQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class TaskmanagerQActionTable : QActionTable, IEnumerable<TaskmanagerQActionRow>
{
	public TaskmanagerQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<TaskmanagerQActionRow> GetEnumerator() { return new QActionTableEnumerator<TaskmanagerQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class HrswrunperftableQActionTable : QActionTable, IEnumerable<HrswrunperftableQActionRow>
{
	public HrswrunperftableQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<HrswrunperftableQActionRow> GetEnumerator() { return new QActionTableEnumerator<HrswrunperftableQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class NormalizetaskmanagerQActionTable : QActionTable, IEnumerable<NormalizetaskmanagerQActionRow>
{
	public NormalizetaskmanagerQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<NormalizetaskmanagerQActionRow> GetEnumerator() { return new QActionTableEnumerator<NormalizetaskmanagerQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class SoftwareinfoQActionTable : QActionTable, IEnumerable<SoftwareinfoQActionRow>
{
	public SoftwareinfoQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<SoftwareinfoQActionRow> GetEnumerator() { return new QActionTableEnumerator<SoftwareinfoQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class HrfstableQActionTable : QActionTable, IEnumerable<HrfstableQActionRow>
{
	public HrfstableQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<HrfstableQActionRow> GetEnumerator() { return new QActionTableEnumerator<HrfstableQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class IpaddrtableQActionTable : QActionTable, IEnumerable<IpaddrtableQActionRow>
{
	public IpaddrtableQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<IpaddrtableQActionRow> GetEnumerator() { return new QActionTableEnumerator<IpaddrtableQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class IproutetableQActionTable : QActionTable, IEnumerable<IproutetableQActionRow>
{
	public IproutetableQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<IproutetableQActionRow> GetEnumerator() { return new QActionTableEnumerator<IproutetableQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class JobdatatableQActionTable : QActionTable, IEnumerable<JobdatatableQActionRow>
{
	public JobdatatableQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<JobdatatableQActionRow> GetEnumerator() { return new QActionTableEnumerator<JobdatatableQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class InputswitcherQActionTable : QActionTable, IEnumerable<InputswitcherQActionRow>
{
	public InputswitcherQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<InputswitcherQActionRow> GetEnumerator() { return new QActionTableEnumerator<InputswitcherQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class RftuningQActionTable : QActionTable, IEnumerable<RftuningQActionRow>
{
	public RftuningQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<RftuningQActionRow> GetEnumerator() { return new QActionTableEnumerator<RftuningQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class ChannalListQActionTable : QActionTable, IEnumerable<ChannalListQActionRow>
{
	public ChannalListQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<ChannalListQActionRow> GetEnumerator() { return new QActionTableEnumerator<ChannalListQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class JobstatisticsQActionTable : QActionTable, IEnumerable<JobstatisticsQActionRow>
{
	public JobstatisticsQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<JobstatisticsQActionRow> GetEnumerator() { return new QActionTableEnumerator<JobstatisticsQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class StoragestoragesizeQActionTable : QActionTable, IEnumerable<StoragestoragesizeQActionRow>
{
	public StoragestoragesizeQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<StoragestoragesizeQActionRow> GetEnumerator() { return new QActionTableEnumerator<StoragestoragesizeQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class Storagestoragesize2QActionTable : QActionTable, IEnumerable<Storagestoragesize2QActionRow>
{
	public Storagestoragesize2QActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<Storagestoragesize2QActionRow> GetEnumerator() { return new QActionTableEnumerator<Storagestoragesize2QActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class StorageinstanceindexQActionTable : QActionTable, IEnumerable<StorageinstanceindexQActionRow>
{
	public StorageinstanceindexQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<StorageinstanceindexQActionRow> GetEnumerator() { return new QActionTableEnumerator<StorageinstanceindexQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class StoragetableQActionTable : QActionTable, IEnumerable<StoragetableQActionRow>
{
	public StoragetableQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<StoragetableQActionRow> GetEnumerator() { return new QActionTableEnumerator<StoragetableQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class StorageavailabilityQActionTable : QActionTable, IEnumerable<StorageavailabilityQActionRow>
{
	public StorageavailabilityQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<StorageavailabilityQActionRow> GetEnumerator() { return new QActionTableEnumerator<StorageavailabilityQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class InterfacestableQActionTable : QActionTable, IEnumerable<InterfacestableQActionRow>
{
	public InterfacestableQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<InterfacestableQActionRow> GetEnumerator() { return new QActionTableEnumerator<InterfacestableQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class InterfacetableconfigQActionTable : QActionTable, IEnumerable<InterfacetableconfigQActionRow>
{
	public InterfacetableconfigQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<InterfacetableconfigQActionRow> GetEnumerator() { return new QActionTableEnumerator<InterfacetableconfigQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class IfxtableQActionTable : QActionTable, IEnumerable<IfxtableQActionRow>
{
	public IfxtableQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<IfxtableQActionRow> GetEnumerator() { return new QActionTableEnumerator<IfxtableQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class LinuxmonitoredprocesseslistQActionTable : QActionTable, IEnumerable<LinuxmonitoredprocesseslistQActionRow>
{
	public LinuxmonitoredprocesseslistQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<LinuxmonitoredprocesseslistQActionRow> GetEnumerator() { return new QActionTableEnumerator<LinuxmonitoredprocesseslistQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class MountavailabilityQActionTable : QActionTable, IEnumerable<MountavailabilityQActionRow>
{
	public MountavailabilityQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<MountavailabilityQActionRow> GetEnumerator() { return new QActionTableEnumerator<MountavailabilityQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class LinuxmonitoreddisksQActionTable : QActionTable, IEnumerable<LinuxmonitoreddisksQActionRow>
{
	public LinuxmonitoreddisksQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<LinuxmonitoreddisksQActionRow> GetEnumerator() { return new QActionTableEnumerator<LinuxmonitoreddisksQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class LoadaverageinformationQActionTable : QActionTable, IEnumerable<LoadaverageinformationQActionRow>
{
	public LoadaverageinformationQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<LoadaverageinformationQActionRow> GetEnumerator() { return new QActionTableEnumerator<LoadaverageinformationQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class ProcessortableQActionTable : QActionTable, IEnumerable<ProcessortableQActionRow>
{
	public ProcessortableQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<ProcessortableQActionRow> GetEnumerator() { return new QActionTableEnumerator<ProcessortableQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class LvsservicetableQActionTable : QActionTable, IEnumerable<LvsservicetableQActionRow>
{
	public LvsservicetableQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<LvsservicetableQActionRow> GetEnumerator() { return new QActionTableEnumerator<LvsservicetableQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class LvsrealtableQActionTable : QActionTable, IEnumerable<LvsrealtableQActionRow>
{
	public LvsrealtableQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<LvsrealtableQActionRow> GetEnumerator() { return new QActionTableEnumerator<LvsrealtableQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class ExternaldataoverviewQActionTable : QActionTable, IEnumerable<ExternaldataoverviewQActionRow>
{
	public ExternaldataoverviewQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<ExternaldataoverviewQActionRow> GetEnumerator() { return new QActionTableEnumerator<ExternaldataoverviewQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class ProcessvalidationtableQActionTable : QActionTable, IEnumerable<ProcessvalidationtableQActionRow>
{
	public ProcessvalidationtableQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<ProcessvalidationtableQActionRow> GetEnumerator() { return new QActionTableEnumerator<ProcessvalidationtableQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class ExttableQActionTable : QActionTable, IEnumerable<ExttableQActionRow>
{
	public ExttableQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<ExttableQActionRow> GetEnumerator() { return new QActionTableEnumerator<ExttableQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class DiskiotableQActionTable : QActionTable, IEnumerable<DiskiotableQActionRow>
{
	public DiskiotableQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<DiskiotableQActionRow> GetEnumerator() { return new QActionTableEnumerator<DiskiotableQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class IpsystemstatstableQActionTable : QActionTable, IEnumerable<IpsystemstatstableQActionRow>
{
	public IpsystemstatstableQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<IpsystemstatstableQActionRow> GetEnumerator() { return new QActionTableEnumerator<IpsystemstatstableQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class TcpconnectiontableQActionTable : QActionTable, IEnumerable<TcpconnectiontableQActionRow>
{
	public TcpconnectiontableQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<TcpconnectiontableQActionRow> GetEnumerator() { return new QActionTableEnumerator<TcpconnectiontableQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class PortlistQActionTable : QActionTable, IEnumerable<PortlistQActionRow>
{
	public PortlistQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<PortlistQActionRow> GetEnumerator() { return new QActionTableEnumerator<PortlistQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class RemotedcfinterfacetableQActionTable : QActionTable, IEnumerable<RemotedcfinterfacetableQActionRow>
{
	public RemotedcfinterfacetableQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<RemotedcfinterfacetableQActionRow> GetEnumerator() { return new QActionTableEnumerator<RemotedcfinterfacetableQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class CpqhetemperaturetableQActionTable : QActionTable, IEnumerable<CpqhetemperaturetableQActionRow>
{
	public CpqhetemperaturetableQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<CpqhetemperaturetableQActionRow> GetEnumerator() { return new QActionTableEnumerator<CpqhetemperaturetableQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class HppowersupplytableQActionTable : QActionTable, IEnumerable<HppowersupplytableQActionRow>
{
	public HppowersupplytableQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<HppowersupplytableQActionRow> GetEnumerator() { return new QActionTableEnumerator<HppowersupplytableQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class HpfantableQActionTable : QActionTable, IEnumerable<HpfantableQActionRow>
{
	public HpfantableQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<HpfantableQActionRow> GetEnumerator() { return new QActionTableEnumerator<HpfantableQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class CpqdacntlrtableQActionTable : QActionTable, IEnumerable<CpqdacntlrtableQActionRow>
{
	public CpqdacntlrtableQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<CpqdacntlrtableQActionRow> GetEnumerator() { return new QActionTableEnumerator<CpqdacntlrtableQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class CpqdaacceltableQActionTable : QActionTable, IEnumerable<CpqdaacceltableQActionRow>
{
	public CpqdaacceltableQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<CpqdaacceltableQActionRow> GetEnumerator() { return new QActionTableEnumerator<CpqdaacceltableQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class Cpqheresmem2moduletableQActionTable : QActionTable, IEnumerable<Cpqheresmem2moduletableQActionRow>
{
	public Cpqheresmem2moduletableQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<Cpqheresmem2moduletableQActionRow> GetEnumerator() { return new QActionTableEnumerator<Cpqheresmem2moduletableQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class CpqdaphydrvtableQActionTable : QActionTable, IEnumerable<CpqdaphydrvtableQActionRow>
{
	public CpqdaphydrvtableQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<CpqdaphydrvtableQActionRow> GetEnumerator() { return new QActionTableEnumerator<CpqdaphydrvtableQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class CpqdalogdrvtableQActionTable : QActionTable, IEnumerable<CpqdalogdrvtableQActionRow>
{
	public CpqdalogdrvtableQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<CpqdalogdrvtableQActionRow> GetEnumerator() { return new QActionTableEnumerator<CpqdalogdrvtableQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class CpqsecputableQActionTable : QActionTable, IEnumerable<CpqsecputableQActionRow>
{
	public CpqsecputableQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<CpqsecputableQActionRow> GetEnumerator() { return new QActionTableEnumerator<CpqsecputableQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class PowersupplytableQActionTable : QActionTable, IEnumerable<PowersupplytableQActionRow>
{
	public PowersupplytableQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<PowersupplytableQActionRow> GetEnumerator() { return new QActionTableEnumerator<PowersupplytableQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class TemperatureprobetableQActionTable : QActionTable, IEnumerable<TemperatureprobetableQActionRow>
{
	public TemperatureprobetableQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<TemperatureprobetableQActionRow> GetEnumerator() { return new QActionTableEnumerator<TemperatureprobetableQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class CoolingdevicetableQActionTable : QActionTable, IEnumerable<CoolingdevicetableQActionRow>
{
	public CoolingdevicetableQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<CoolingdevicetableQActionRow> GetEnumerator() { return new QActionTableEnumerator<CoolingdevicetableQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class ControllertableQActionTable : QActionTable, IEnumerable<ControllertableQActionRow>
{
	public ControllertableQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<ControllertableQActionRow> GetEnumerator() { return new QActionTableEnumerator<ControllertableQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class ChanneltableQActionTable : QActionTable, IEnumerable<ChanneltableQActionRow>
{
	public ChanneltableQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<ChanneltableQActionRow> GetEnumerator() { return new QActionTableEnumerator<ChanneltableQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class EnclosuretableQActionTable : QActionTable, IEnumerable<EnclosuretableQActionRow>
{
	public EnclosuretableQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<EnclosuretableQActionRow> GetEnumerator() { return new QActionTableEnumerator<EnclosuretableQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class ArraydisktableQActionTable : QActionTable, IEnumerable<ArraydisktableQActionRow>
{
	public ArraydisktableQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<ArraydisktableQActionRow> GetEnumerator() { return new QActionTableEnumerator<ArraydisktableQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class VirtualdisktableQActionTable : QActionTable, IEnumerable<VirtualdisktableQActionRow>
{
	public VirtualdisktableQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<VirtualdisktableQActionRow> GetEnumerator() { return new QActionTableEnumerator<VirtualdisktableQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class ProcessordevicetableQActionTable : QActionTable, IEnumerable<ProcessordevicetableQActionRow>
{
	public ProcessordevicetableQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<ProcessordevicetableQActionRow> GetEnumerator() { return new QActionTableEnumerator<ProcessordevicetableQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class MemorydevicetableQActionTable : QActionTable, IEnumerable<MemorydevicetableQActionRow>
{
	public MemorydevicetableQActionTable(SLProtocol protocol, int tableId, string tableName) : base(protocol, tableId, tableName) { }
	IEnumerator IEnumerable.GetEnumerator() { return (IEnumerator) GetEnumerator(); }
	public IEnumerator<MemorydevicetableQActionRow> GetEnumerator() { return new QActionTableEnumerator<MemorydevicetableQActionRow>(this); }
}
/// <summary>IDX: 0</summary>
public class HrdevicetypeQActionRow : QActionTableRow
{
	/// <summary>PID: 51 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hrdevicetype_inst_51 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 51 | Type: read</summary>
	public System.Object Hrdevicetype_inst { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 52 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hrdevicetype_col_52 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 52 | Type: read</summary>
	public System.Object Hrdevicetype_col { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	public HrdevicetypeQActionRow() : base(0, 2) { }
	public HrdevicetypeQActionRow(System.Object[] oRow) : base(0, 2, oRow) { }
	public static implicit operator HrdevicetypeQActionRow(System.Object[] source) { return new HrdevicetypeQActionRow(source); }
	public static implicit operator System.Object[](HrdevicetypeQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class ProcesscounterQActionRow : QActionTableRow
{
	/// <summary>PID: 71 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Processcounterindex_71 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 71 | Type: read</summary>
	public System.Object Processcounterindex { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 72 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Processcounterinstancecount_72 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 72 | Type: read</summary>
	public System.Object Processcounterinstancecount { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 73 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Processcounterrunpath_73 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 73 | Type: read</summary>
	public System.Object Processcounterrunpath { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 69 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Processcounterdisplaykey_69 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 69 | Type: read</summary>
	public System.Object Processcounterdisplaykey { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 64 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Processcounterprocesscpu_64 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 64 | Type: read</summary>
	public System.Object Processcounterprocesscpu { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 66 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Processcounterprocessmemusage_66 { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 66 | Type: read</summary>
	public System.Object Processcounterprocessmemusage { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 67 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Processcounterprocessidentifier_67 { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 67 | Type: read</summary>
	public System.Object Processcounterprocessidentifier { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 63 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Processcounterrunarguments_63 { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 63 | Type: read</summary>
	public System.Object Processcounterrunarguments { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	public ProcesscounterQActionRow() : base(0, 8) { }
	public ProcesscounterQActionRow(System.Object[] oRow) : base(0, 8, oRow) { }
	public static implicit operator ProcesscounterQActionRow(System.Object[] source) { return new ProcesscounterQActionRow(source); }
	public static implicit operator System.Object[](ProcesscounterQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class TaskmanagerQActionRow : QActionTableRow
{
	/// <summary>PID: 83 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Taskmanagerprocessnameindex_83 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 83 | Type: read</summary>
	public System.Object Taskmanagerprocessnameindex { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 81 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Taskmanagerprocesspid_81 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 81 | Type: read</summary>
	public System.Object Taskmanagerprocesspid { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 82 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Taskmanagerprocessname_82 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 82 | Type: read</summary>
	public System.Object Taskmanagerprocessname { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 84 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Taskmanagerprocesscpu_84 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 84 | Type: read</summary>
	public System.Object Taskmanagerprocesscpu { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 85 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Taskmanagerprocesscputime_85 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 85 | Type: read</summary>
	public System.Object Taskmanagerprocesscputime { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 86 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Taskmanagerprocessmemusage_86 { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 86 | Type: read</summary>
	public System.Object Taskmanagerprocessmemusage { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 87 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Taskmanagerrowstatus_87 { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 87 | Type: read</summary>
	public System.Object Taskmanagerrowstatus { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 88 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Taskmanagerprevioustime_88 { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 88 | Type: read</summary>
	public System.Object Taskmanagerprevioustime { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 89 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Taskmanagerpreviousperf_89 { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 89 | Type: read</summary>
	public System.Object Taskmanagerpreviousperf { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 96 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Taskmanagerprocessrunstatus_96 { get { if (base.Columns.ContainsKey(9)) { return base.Columns[9]; } else { return null; } } set { if (base.Columns.ContainsKey(9)) { base.Columns[9] = value; } else { base.Columns.Add(9, value); } } }
	/// <summary>PID: 96 | Type: read</summary>
	public System.Object Taskmanagerprocessrunstatus { get { if (base.Columns.ContainsKey(9)) { return base.Columns[9]; } else { return null; } } set { if (base.Columns.ContainsKey(9)) { base.Columns[9] = value; } else { base.Columns.Add(9, value); } } }
	/// <summary>PID: 97 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Taskmanagerprocessrunpath_97 { get { if (base.Columns.ContainsKey(10)) { return base.Columns[10]; } else { return null; } } set { if (base.Columns.ContainsKey(10)) { base.Columns[10] = value; } else { base.Columns.Add(10, value); } } }
	/// <summary>PID: 97 | Type: read</summary>
	public System.Object Taskmanagerprocessrunpath { get { if (base.Columns.ContainsKey(10)) { return base.Columns[10]; } else { return null; } } set { if (base.Columns.ContainsKey(10)) { base.Columns[10] = value; } else { base.Columns.Add(10, value); } } }
	/// <summary>PID: 99 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Taskmanagerrunparameters_99 { get { if (base.Columns.ContainsKey(11)) { return base.Columns[11]; } else { return null; } } set { if (base.Columns.ContainsKey(11)) { base.Columns[11] = value; } else { base.Columns.Add(11, value); } } }
	/// <summary>PID: 99 | Type: read</summary>
	public System.Object Taskmanagerrunparameters { get { if (base.Columns.ContainsKey(11)) { return base.Columns[11]; } else { return null; } } set { if (base.Columns.ContainsKey(11)) { base.Columns[11] = value; } else { base.Columns.Add(11, value); } } }
	public TaskmanagerQActionRow() : base(0, 12) { }
	public TaskmanagerQActionRow(System.Object[] oRow) : base(0, 12, oRow) { }
	public static implicit operator TaskmanagerQActionRow(System.Object[] source) { return new TaskmanagerQActionRow(source); }
	public static implicit operator System.Object[](TaskmanagerQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class HrswrunperftableQActionRow : QActionTableRow
{
	/// <summary>PID: 91 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hrswrunperftable_instance_91 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 91 | Type: read</summary>
	public System.Object Hrswrunperftable_instance { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 92 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hrswrunperfcpu_92 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 92 | Type: read</summary>
	public System.Object Hrswrunperfcpu { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 93 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hrswrunperftable_currenttime_93 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 93 | Type: read</summary>
	public System.Object Hrswrunperftable_currenttime { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 94 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hrswrunperfpreviouscpu_94 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 94 | Type: read</summary>
	public System.Object Hrswrunperfpreviouscpu { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	public HrswrunperftableQActionRow() : base(0, 4) { }
	public HrswrunperftableQActionRow(System.Object[] oRow) : base(0, 4, oRow) { }
	public static implicit operator HrswrunperftableQActionRow(System.Object[] source) { return new HrswrunperftableQActionRow(source); }
	public static implicit operator System.Object[](HrswrunperftableQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class NormalizetaskmanagerQActionRow : QActionTableRow
{
	/// <summary>PID: 111 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Normalizetaskmanagerprocessname_111 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 111 | Type: read</summary>
	public System.Object Normalizetaskmanagerprocessname { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 112 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Normalizetaskmanagerprocesscpu_112 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 112 | Type: read</summary>
	public System.Object Normalizetaskmanagerprocesscpu { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 113 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Normalizetaskmanagerprocessmemusage_113 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 113 | Type: read</summary>
	public System.Object Normalizetaskmanagerprocessmemusage { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	public NormalizetaskmanagerQActionRow() : base(0, 3) { }
	public NormalizetaskmanagerQActionRow(System.Object[] oRow) : base(0, 3, oRow) { }
	public static implicit operator NormalizetaskmanagerQActionRow(System.Object[] source) { return new NormalizetaskmanagerQActionRow(source); }
	public static implicit operator System.Object[](NormalizetaskmanagerQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class SoftwareinfoQActionRow : QActionTableRow
{
	/// <summary>PID: 131 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Softwareinfohrswinstalledindex_131 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 131 | Type: read</summary>
	public System.Object Softwareinfohrswinstalledindex { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 132 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Softwareinfohrswinstalledname_132 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 132 | Type: read</summary>
	public System.Object Softwareinfohrswinstalledname { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 133 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Softwareinfohrswinstalleddate_133 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 133 | Type: read</summary>
	public System.Object Softwareinfohrswinstalleddate { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 134 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Softwareinfoswinstallationdate_134 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 134 | Type: read</summary>
	public System.Object Softwareinfoswinstallationdate { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	public SoftwareinfoQActionRow() : base(0, 4) { }
	public SoftwareinfoQActionRow(System.Object[] oRow) : base(0, 4, oRow) { }
	public static implicit operator SoftwareinfoQActionRow(System.Object[] source) { return new SoftwareinfoQActionRow(source); }
	public static implicit operator System.Object[](SoftwareinfoQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class HrfstableQActionRow : QActionTableRow
{
	/// <summary>PID: 141 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hrfsindex_141 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 141 | Type: read</summary>
	public System.Object Hrfsindex { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 142 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hrfstype_142 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 142 | Type: read</summary>
	public System.Object Hrfstype { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 143 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hrfsstorageindex_143 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 143 | Type: read</summary>
	public System.Object Hrfsstorageindex { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	public HrfstableQActionRow() : base(0, 3) { }
	public HrfstableQActionRow(System.Object[] oRow) : base(0, 3, oRow) { }
	public static implicit operator HrfstableQActionRow(System.Object[] source) { return new HrfstableQActionRow(source); }
	public static implicit operator System.Object[](HrfstableQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class IpaddrtableQActionRow : QActionTableRow
{
	/// <summary>PID: 151 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipaddrentaddr_151 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 151 | Type: read</summary>
	public System.Object Ipaddrentaddr { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 152 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipaddrentifindex_152 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 152 | Type: read</summary>
	public System.Object Ipaddrentifindex { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 153 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipaddrentnetmask_153 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 153 | Type: read</summary>
	public System.Object Ipaddrentnetmask { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	public IpaddrtableQActionRow() : base(0, 3) { }
	public IpaddrtableQActionRow(System.Object[] oRow) : base(0, 3, oRow) { }
	public static implicit operator IpaddrtableQActionRow(System.Object[] source) { return new IpaddrtableQActionRow(source); }
	public static implicit operator System.Object[](IpaddrtableQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class IproutetableQActionRow : QActionTableRow
{
	/// <summary>PID: 161 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Iproutedest_161 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 161 | Type: read</summary>
	public System.Object Iproutedest { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 162 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Iprouteifindex_162 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 162 | Type: read</summary>
	public System.Object Iprouteifindex { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 163 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Iproutenexthop_163 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 163 | Type: read</summary>
	public System.Object Iproutenexthop { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 164 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Iproutemask_164 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 164 | Type: read</summary>
	public System.Object Iproutemask { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	public IproutetableQActionRow() : base(0, 4) { }
	public IproutetableQActionRow(System.Object[] oRow) : base(0, 4, oRow) { }
	public static implicit operator IproutetableQActionRow(System.Object[] source) { return new IproutetableQActionRow(source); }
	public static implicit operator System.Object[](IproutetableQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class JobdatatableQActionRow : QActionTableRow
{
	/// <summary>PID: 211 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object JobName_211 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 211 | Type: read</summary>
	public System.Object JobName { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 212 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object JobType_212 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 212 | Type: read</summary>
	public System.Object JobType { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 213 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Jobstatus_213 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 213 | Type: read</summary>
	public System.Object Jobstatus { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 214 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object UpdatedTime_214 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 214 | Type: read</summary>
	public System.Object UpdatedTime { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 215 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object NodeName_215 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 215 | Type: read</summary>
	public System.Object NodeName { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 216 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Updatejobstatus_216 { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 216 | Type: read</summary>
	public System.Object Updatejobstatus { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	public JobdatatableQActionRow() : base(0, 6) { }
	public JobdatatableQActionRow(System.Object[] oRow) : base(0, 6, oRow) { }
	public static implicit operator JobdatatableQActionRow(System.Object[] source) { return new JobdatatableQActionRow(source); }
	public static implicit operator System.Object[](JobdatatableQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class InputswitcherQActionRow : QActionTableRow
{
	/// <summary>PID: 231 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Inputswitcherindex_231 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 231 | Type: read</summary>
	public System.Object Inputswitcherindex { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 232 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Inputswitcherjobname_232 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 232 | Type: read</summary>
	public System.Object Inputswitcherjobname { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 233 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Inputswitchergroupno_233 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 233 | Type: read</summary>
	public System.Object Inputswitchergroupno { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 234 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Inputswitcheractiveinput_234 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 234 | Type: read</summary>
	public System.Object Inputswitcheractiveinput { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 236 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Inputswitchercolumnname_236 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 236 | Type: read</summary>
	public System.Object Inputswitchercolumnname { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	public InputswitcherQActionRow() : base(0, 5) { }
	public InputswitcherQActionRow(System.Object[] oRow) : base(0, 5, oRow) { }
	public static implicit operator InputswitcherQActionRow(System.Object[] source) { return new InputswitcherQActionRow(source); }
	public static implicit operator System.Object[](InputswitcherQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class RftuningQActionRow : QActionTableRow
{
	/// <summary>PID: 251 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Rftunningindex_251 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 251 | Type: read</summary>
	public System.Object Rftunningindex { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 252 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Rftunningfrequency_252 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 252 | Type: read</summary>
	public System.Object Rftunningfrequency { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 253 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Rftunningsymbolrate_253 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 253 | Type: read</summary>
	public System.Object Rftunningsymbolrate { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 254 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Rftunningfec_254 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 254 | Type: read</summary>
	public System.Object Rftunningfec { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 262 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Rftunningsystem_262 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 262 | Type: read</summary>
	public System.Object Rftunningsystem { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 255 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Rftunningadopterport_255 { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 255 | Type: read</summary>
	public System.Object Rftunningadopterport { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 256 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Rftunninglnbvoltage_256 { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 256 | Type: read</summary>
	public System.Object Rftunninglnbvoltage { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 257 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Rftunninglnbtone_257 { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 257 | Type: read</summary>
	public System.Object Rftunninglnbtone { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 258 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Rftunningipandport_258 { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 258 | Type: read</summary>
	public System.Object Rftunningipandport { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 259 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Rftunningsignalstrength_259 { get { if (base.Columns.ContainsKey(9)) { return base.Columns[9]; } else { return null; } } set { if (base.Columns.ContainsKey(9)) { base.Columns[9] = value; } else { base.Columns.Add(9, value); } } }
	/// <summary>PID: 259 | Type: read</summary>
	public System.Object Rftunningsignalstrength { get { if (base.Columns.ContainsKey(9)) { return base.Columns[9]; } else { return null; } } set { if (base.Columns.ContainsKey(9)) { base.Columns[9] = value; } else { base.Columns.Add(9, value); } } }
	/// <summary>PID: 260 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Rftunningstatus_260 { get { if (base.Columns.ContainsKey(10)) { return base.Columns[10]; } else { return null; } } set { if (base.Columns.ContainsKey(10)) { base.Columns[10] = value; } else { base.Columns.Add(10, value); } } }
	/// <summary>PID: 260 | Type: read</summary>
	public System.Object Rftunningstatus { get { if (base.Columns.ContainsKey(10)) { return base.Columns[10]; } else { return null; } } set { if (base.Columns.ContainsKey(10)) { base.Columns[10] = value; } else { base.Columns.Add(10, value); } } }
	public RftuningQActionRow() : base(0, 11) { }
	public RftuningQActionRow(System.Object[] oRow) : base(0, 11, oRow) { }
	public static implicit operator RftuningQActionRow(System.Object[] source) { return new RftuningQActionRow(source); }
	public static implicit operator System.Object[](RftuningQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class ChannalListQActionRow : QActionTableRow
{
	/// <summary>PID: 281 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object ChannalListIndex_281 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 281 | Type: read</summary>
	public System.Object ChannalListIndex { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 288 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object ChannalListFrequency_288 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 288 | Type: read</summary>
	public System.Object ChannalListFrequency { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 282 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object ChannalListServiceName_282 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 282 | Type: read</summary>
	public System.Object ChannalListServiceName { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 283 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object ChannalListServiceId_283 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 283 | Type: read</summary>
	public System.Object ChannalListServiceId { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 284 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object ChannalListVideoPid_284 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 284 | Type: read</summary>
	public System.Object ChannalListVideoPid { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 285 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object ChannalListVideoCodec_285 { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 285 | Type: read</summary>
	public System.Object ChannalListVideoCodec { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 286 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object ChannalListAudioPid_286 { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 286 | Type: read</summary>
	public System.Object ChannalListAudioPid { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 287 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object ChannalListAudioCodec_287 { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 287 | Type: read</summary>
	public System.Object ChannalListAudioCodec { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	public ChannalListQActionRow() : base(0, 8) { }
	public ChannalListQActionRow(System.Object[] oRow) : base(0, 8, oRow) { }
	public static implicit operator ChannalListQActionRow(System.Object[] source) { return new ChannalListQActionRow(source); }
	public static implicit operator System.Object[](ChannalListQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class JobstatisticsQActionRow : QActionTableRow
{
	/// <summary>PID: 291 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Jobstatisticsjobname_291 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 291 | Type: read</summary>
	public System.Object Jobstatisticsjobname { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 292 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Jobstatisticsjobstatus_292 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 292 | Type: read</summary>
	public System.Object Jobstatisticsjobstatus { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 293 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Jobstatisticslatency_293 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 293 | Type: read</summary>
	public System.Object Jobstatisticslatency { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 294 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object JobstatisticsbufferedData_294 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 294 | Type: read</summary>
	public System.Object JobstatisticsbufferedData { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 295 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Jobstatisticscpuload_295 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 295 | Type: read</summary>
	public System.Object Jobstatisticscpuload { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 296 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Jobstatisticscpuavarageload_296 { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 296 | Type: read</summary>
	public System.Object Jobstatisticscpuavarageload { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 297 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Jobstatisticsmemoryload_297 { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 297 | Type: read</summary>
	public System.Object Jobstatisticsmemoryload { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 298 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Jobstatisticsavaragememoryload_298 { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 298 | Type: read</summary>
	public System.Object Jobstatisticsavaragememoryload { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	public JobstatisticsQActionRow() : base(0, 8) { }
	public JobstatisticsQActionRow(System.Object[] oRow) : base(0, 8, oRow) { }
	public static implicit operator JobstatisticsQActionRow(System.Object[] source) { return new JobstatisticsQActionRow(source); }
	public static implicit operator System.Object[](JobstatisticsQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class StoragestoragesizeQActionRow : QActionTableRow
{
	/// <summary>PID: 351 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Storagesizeinstance_351 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 351 | Type: read</summary>
	public System.Object Storagesizeinstance { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 352 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Storagesizesize_352 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 352 | Type: read</summary>
	public System.Object Storagesizesize { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	public StoragestoragesizeQActionRow() : base(0, 2) { }
	public StoragestoragesizeQActionRow(System.Object[] oRow) : base(0, 2, oRow) { }
	public static implicit operator StoragestoragesizeQActionRow(System.Object[] source) { return new StoragestoragesizeQActionRow(source); }
	public static implicit operator System.Object[](StoragestoragesizeQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class Storagestoragesize2QActionRow : QActionTableRow
{
	/// <summary>PID: 356 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Storageusedinstance_356 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 356 | Type: read</summary>
	public System.Object Storageusedinstance { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 357 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Storageusedsize2_357 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 357 | Type: read</summary>
	public System.Object Storageusedsize2 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	public Storagestoragesize2QActionRow() : base(0, 2) { }
	public Storagestoragesize2QActionRow(System.Object[] oRow) : base(0, 2, oRow) { }
	public static implicit operator Storagestoragesize2QActionRow(System.Object[] source) { return new Storagestoragesize2QActionRow(source); }
	public static implicit operator System.Object[](Storagestoragesize2QActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class StorageinstanceindexQActionRow : QActionTableRow
{
	/// <summary>PID: 363 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Storageinstanceindex_instance_363 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 363 | Type: read</summary>
	public System.Object Storageinstanceindex_instance { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 364 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Storageinstanceindex_firstcol_364 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 364 | Type: read</summary>
	public System.Object Storageinstanceindex_firstcol { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 365 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Storageinstanceindex_name_365 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 365 | Type: read</summary>
	public System.Object Storageinstanceindex_name { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	public StorageinstanceindexQActionRow() : base(0, 3) { }
	public StorageinstanceindexQActionRow(System.Object[] oRow) : base(0, 3, oRow) { }
	public static implicit operator StorageinstanceindexQActionRow(System.Object[] source) { return new StorageinstanceindexQActionRow(source); }
	public static implicit operator System.Object[](StorageinstanceindexQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class StoragetableQActionRow : QActionTableRow
{
	/// <summary>PID: 405 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Storageindex_405 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 405 | Type: read</summary>
	public System.Object Storageindex { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 406 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Storagedescription_406 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 406 | Type: read</summary>
	public System.Object Storagedescription { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 411 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Storagedescriptionidx_411 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 411 | Type: read</summary>
	public System.Object Storagedescriptionidx { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 410 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Storagetype_410 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 410 | Type: read</summary>
	public System.Object Storagetype { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 407 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Storageremainingstorage_407 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 407 | Type: read</summary>
	public System.Object Storageremainingstorage { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 408 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Storagesize_408 { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 408 | Type: read</summary>
	public System.Object Storagesize { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 409 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Storageuse_409 { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 409 | Type: read</summary>
	public System.Object Storageuse { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 412 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Storageallocationunit_412 { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 412 | Type: read</summary>
	public System.Object Storageallocationunit { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 413 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Storagetotalsize_413 { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 413 | Type: read</summary>
	public System.Object Storagetotalsize { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 414 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Storageusedsize_414 { get { if (base.Columns.ContainsKey(9)) { return base.Columns[9]; } else { return null; } } set { if (base.Columns.ContainsKey(9)) { base.Columns[9] = value; } else { base.Columns.Add(9, value); } } }
	/// <summary>PID: 414 | Type: read</summary>
	public System.Object Storageusedsize { get { if (base.Columns.ContainsKey(9)) { return base.Columns[9]; } else { return null; } } set { if (base.Columns.ContainsKey(9)) { base.Columns[9] = value; } else { base.Columns.Add(9, value); } } }
	public StoragetableQActionRow() : base(0, 10) { }
	public StoragetableQActionRow(System.Object[] oRow) : base(0, 10, oRow) { }
	public static implicit operator StoragetableQActionRow(System.Object[] source) { return new StoragetableQActionRow(source); }
	public static implicit operator System.Object[](StoragetableQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class StorageavailabilityQActionRow : QActionTableRow
{
	/// <summary>PID: 501 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mountnamemountstorage_501 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 501 | Type: read</summary>
	public System.Object Mountnamemountstorage { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 502 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Availabilitymountstorage_502 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 502 | Type: read</summary>
	public System.Object Availabilitymountstorage { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 505 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Descriptionmountstorage_505 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 505 | Type: read</summary>
	public System.Object Descriptionmountstorage { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	public StorageavailabilityQActionRow() : base(0, 3) { }
	public StorageavailabilityQActionRow(System.Object[] oRow) : base(0, 3, oRow) { }
	public static implicit operator StorageavailabilityQActionRow(System.Object[] source) { return new StorageavailabilityQActionRow(source); }
	public static implicit operator System.Object[](StorageavailabilityQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class InterfacestableQActionRow : QActionTableRow
{
	/// <summary>PID: 605 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesifindex_605 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 605 | Type: read</summary>
	public System.Object Interfacesifindex { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 606 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesifdescr_606 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 606 | Type: read</summary>
	public System.Object Interfacesifdescr { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 607 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesiftype_607 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 607 | Type: read</summary>
	public System.Object Interfacesiftype { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 608 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesphysaddress_608 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 608 | Type: read</summary>
	public System.Object Interfacesphysaddress { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 609 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesadminstatus_609 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 609 | Type: read</summary>
	public System.Object Interfacesadminstatus { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 610 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesoperstatus_610 { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 610 | Type: read</summary>
	public System.Object Interfacesoperstatus { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 615 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesinterfacebandwidth_615 { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 615 | Type: read</summary>
	public System.Object Interfacesinterfacebandwidth { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 620 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesifinoctets_620 { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 620 | Type: read</summary>
	public System.Object Interfacesifinoctets { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 621 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesifoutoctets_621 { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 621 | Type: read</summary>
	public System.Object Interfacesifoutoctets { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 626 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesifinucastpkts_626 { get { if (base.Columns.ContainsKey(9)) { return base.Columns[9]; } else { return null; } } set { if (base.Columns.ContainsKey(9)) { base.Columns[9] = value; } else { base.Columns.Add(9, value); } } }
	/// <summary>PID: 626 | Type: read</summary>
	public System.Object Interfacesifinucastpkts { get { if (base.Columns.ContainsKey(9)) { return base.Columns[9]; } else { return null; } } set { if (base.Columns.ContainsKey(9)) { base.Columns[9] = value; } else { base.Columns.Add(9, value); } } }
	/// <summary>PID: 627 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesifoutucastpkts_627 { get { if (base.Columns.ContainsKey(10)) { return base.Columns[10]; } else { return null; } } set { if (base.Columns.ContainsKey(10)) { base.Columns[10] = value; } else { base.Columns.Add(10, value); } } }
	/// <summary>PID: 627 | Type: read</summary>
	public System.Object Interfacesifoutucastpkts { get { if (base.Columns.ContainsKey(10)) { return base.Columns[10]; } else { return null; } } set { if (base.Columns.ContainsKey(10)) { base.Columns[10] = value; } else { base.Columns.Add(10, value); } } }
	/// <summary>PID: 604 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesinterface_idx__604 { get { if (base.Columns.ContainsKey(11)) { return base.Columns[11]; } else { return null; } } set { if (base.Columns.ContainsKey(11)) { base.Columns[11] = value; } else { base.Columns.Add(11, value); } } }
	/// <summary>PID: 604 | Type: read</summary>
	public System.Object Interfacesinterface_idx_ { get { if (base.Columns.ContainsKey(11)) { return base.Columns[11]; } else { return null; } } set { if (base.Columns.ContainsKey(11)) { base.Columns[11] = value; } else { base.Columns.Add(11, value); } } }
	/// <summary>PID: 614 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesinterfacestatus_614 { get { if (base.Columns.ContainsKey(12)) { return base.Columns[12]; } else { return null; } } set { if (base.Columns.ContainsKey(12)) { base.Columns[12] = value; } else { base.Columns.Add(12, value); } } }
	/// <summary>PID: 614 | Type: read</summary>
	public System.Object Interfacesinterfacestatus { get { if (base.Columns.ContainsKey(12)) { return base.Columns[12]; } else { return null; } } set { if (base.Columns.ContainsKey(12)) { base.Columns[12] = value; } else { base.Columns.Add(12, value); } } }
	/// <summary>PID: 611 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesinrate_611 { get { if (base.Columns.ContainsKey(13)) { return base.Columns[13]; } else { return null; } } set { if (base.Columns.ContainsKey(13)) { base.Columns[13] = value; } else { base.Columns.Add(13, value); } } }
	/// <summary>PID: 611 | Type: read</summary>
	public System.Object Interfacesinrate { get { if (base.Columns.ContainsKey(13)) { return base.Columns[13]; } else { return null; } } set { if (base.Columns.ContainsKey(13)) { base.Columns[13] = value; } else { base.Columns.Add(13, value); } } }
	/// <summary>PID: 612 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesoutrate_612 { get { if (base.Columns.ContainsKey(14)) { return base.Columns[14]; } else { return null; } } set { if (base.Columns.ContainsKey(14)) { base.Columns[14] = value; } else { base.Columns.Add(14, value); } } }
	/// <summary>PID: 612 | Type: read</summary>
	public System.Object Interfacesoutrate { get { if (base.Columns.ContainsKey(14)) { return base.Columns[14]; } else { return null; } } set { if (base.Columns.ContainsKey(14)) { base.Columns[14] = value; } else { base.Columns.Add(14, value); } } }
	/// <summary>PID: 613 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacestotalrate_613 { get { if (base.Columns.ContainsKey(15)) { return base.Columns[15]; } else { return null; } } set { if (base.Columns.ContainsKey(15)) { base.Columns[15] = value; } else { base.Columns.Add(15, value); } } }
	/// <summary>PID: 613 | Type: read</summary>
	public System.Object Interfacestotalrate { get { if (base.Columns.ContainsKey(15)) { return base.Columns[15]; } else { return null; } } set { if (base.Columns.ContainsKey(15)) { base.Columns[15] = value; } else { base.Columns.Add(15, value); } } }
	/// <summary>PID: 616 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesrxutilization_616 { get { if (base.Columns.ContainsKey(16)) { return base.Columns[16]; } else { return null; } } set { if (base.Columns.ContainsKey(16)) { base.Columns[16] = value; } else { base.Columns.Add(16, value); } } }
	/// <summary>PID: 616 | Type: read</summary>
	public System.Object Interfacesrxutilization { get { if (base.Columns.ContainsKey(16)) { return base.Columns[16]; } else { return null; } } set { if (base.Columns.ContainsKey(16)) { base.Columns[16] = value; } else { base.Columns.Add(16, value); } } }
	/// <summary>PID: 617 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacestxutilization_617 { get { if (base.Columns.ContainsKey(17)) { return base.Columns[17]; } else { return null; } } set { if (base.Columns.ContainsKey(17)) { base.Columns[17] = value; } else { base.Columns.Add(17, value); } } }
	/// <summary>PID: 617 | Type: read</summary>
	public System.Object Interfacestxutilization { get { if (base.Columns.ContainsKey(17)) { return base.Columns[17]; } else { return null; } } set { if (base.Columns.ContainsKey(17)) { base.Columns[17] = value; } else { base.Columns.Add(17, value); } } }
	/// <summary>PID: 622 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesifinoctetstime_622 { get { if (base.Columns.ContainsKey(18)) { return base.Columns[18]; } else { return null; } } set { if (base.Columns.ContainsKey(18)) { base.Columns[18] = value; } else { base.Columns.Add(18, value); } } }
	/// <summary>PID: 622 | Type: read</summary>
	public System.Object Interfacesifinoctetstime { get { if (base.Columns.ContainsKey(18)) { return base.Columns[18]; } else { return null; } } set { if (base.Columns.ContainsKey(18)) { base.Columns[18] = value; } else { base.Columns.Add(18, value); } } }
	/// <summary>PID: 623 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesifoutoctetstime_623 { get { if (base.Columns.ContainsKey(19)) { return base.Columns[19]; } else { return null; } } set { if (base.Columns.ContainsKey(19)) { base.Columns[19] = value; } else { base.Columns.Add(19, value); } } }
	/// <summary>PID: 623 | Type: read</summary>
	public System.Object Interfacesifoutoctetstime { get { if (base.Columns.ContainsKey(19)) { return base.Columns[19]; } else { return null; } } set { if (base.Columns.ContainsKey(19)) { base.Columns[19] = value; } else { base.Columns.Add(19, value); } } }
	/// <summary>PID: 642 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesipaddress_642 { get { if (base.Columns.ContainsKey(20)) { return base.Columns[20]; } else { return null; } } set { if (base.Columns.ContainsKey(20)) { base.Columns[20] = value; } else { base.Columns.Add(20, value); } } }
	/// <summary>PID: 642 | Type: read</summary>
	public System.Object Interfacesipaddress { get { if (base.Columns.ContainsKey(20)) { return base.Columns[20]; } else { return null; } } set { if (base.Columns.ContainsKey(20)) { base.Columns[20] = value; } else { base.Columns.Add(20, value); } } }
	/// <summary>PID: 643 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesipsubnet_643 { get { if (base.Columns.ContainsKey(21)) { return base.Columns[21]; } else { return null; } } set { if (base.Columns.ContainsKey(21)) { base.Columns[21] = value; } else { base.Columns.Add(21, value); } } }
	/// <summary>PID: 643 | Type: read</summary>
	public System.Object Interfacesipsubnet { get { if (base.Columns.ContainsKey(21)) { return base.Columns[21]; } else { return null; } } set { if (base.Columns.ContainsKey(21)) { base.Columns[21] = value; } else { base.Columns.Add(21, value); } } }
	/// <summary>PID: 644 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesdefaultipgateway_644 { get { if (base.Columns.ContainsKey(22)) { return base.Columns[22]; } else { return null; } } set { if (base.Columns.ContainsKey(22)) { base.Columns[22] = value; } else { base.Columns.Add(22, value); } } }
	/// <summary>PID: 644 | Type: read</summary>
	public System.Object Interfacesdefaultipgateway { get { if (base.Columns.ContainsKey(22)) { return base.Columns[22]; } else { return null; } } set { if (base.Columns.ContainsKey(22)) { base.Columns[22] = value; } else { base.Columns.Add(22, value); } } }
	/// <summary>PID: 645 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacestotalutilization_645 { get { if (base.Columns.ContainsKey(23)) { return base.Columns[23]; } else { return null; } } set { if (base.Columns.ContainsKey(23)) { base.Columns[23] = value; } else { base.Columns.Add(23, value); } } }
	/// <summary>PID: 645 | Type: read</summary>
	public System.Object Interfacestotalutilization { get { if (base.Columns.ContainsKey(23)) { return base.Columns[23]; } else { return null; } } set { if (base.Columns.ContainsKey(23)) { base.Columns[23] = value; } else { base.Columns.Add(23, value); } } }
	/// <summary>PID: 646 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Interfacesifcountertype_646 { get { if (base.Columns.ContainsKey(24)) { return base.Columns[24]; } else { return null; } } set { if (base.Columns.ContainsKey(24)) { base.Columns[24] = value; } else { base.Columns.Add(24, value); } } }
	/// <summary>PID: 646 | Type: read</summary>
	public System.Object Interfacesifcountertype { get { if (base.Columns.ContainsKey(24)) { return base.Columns[24]; } else { return null; } } set { if (base.Columns.ContainsKey(24)) { base.Columns[24] = value; } else { base.Columns.Add(24, value); } } }
	public InterfacestableQActionRow() : base(0, 25) { }
	public InterfacestableQActionRow(System.Object[] oRow) : base(0, 25, oRow) { }
	public static implicit operator InterfacestableQActionRow(System.Object[] source) { return new InterfacestableQActionRow(source); }
	public static implicit operator System.Object[](InterfacestableQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class InterfacetableconfigQActionRow : QActionTableRow
{
	/// <summary>PID: 801 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Indexinterfacetableconfig_801 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 801 | Type: read</summary>
	public System.Object Indexinterfacetableconfig { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 802 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Descriptioninterfacetableconfig_802 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 802 | Type: read</summary>
	public System.Object Descriptioninterfacetableconfig { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 803 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ififtype_803 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 803 | Type: read</summary>
	public System.Object Ififtype { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 805 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ifinterfacebandwidth_805 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 805 | Type: read</summary>
	public System.Object Ifinterfacebandwidth { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 806 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ifphysaddress_806 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 806 | Type: read</summary>
	public System.Object Ifphysaddress { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 807 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ifadminstatus_807 { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 807 | Type: read</summary>
	public System.Object Ifadminstatus { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 808 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Operationalstatusinterfacetableconfig_808 { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 808 | Type: read</summary>
	public System.Object Operationalstatusinterfacetableconfig { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 810 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ififinoctets_810 { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 810 | Type: read</summary>
	public System.Object Ififinoctets { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 811 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ififinucastpkts_811 { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 811 | Type: read</summary>
	public System.Object Ififinucastpkts { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 816 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ififoutoctets_816 { get { if (base.Columns.ContainsKey(9)) { return base.Columns[9]; } else { return null; } } set { if (base.Columns.ContainsKey(9)) { base.Columns[9] = value; } else { base.Columns.Add(9, value); } } }
	/// <summary>PID: 816 | Type: read</summary>
	public System.Object Ififoutoctets { get { if (base.Columns.ContainsKey(9)) { return base.Columns[9]; } else { return null; } } set { if (base.Columns.ContainsKey(9)) { base.Columns[9] = value; } else { base.Columns.Add(9, value); } } }
	/// <summary>PID: 817 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ififoutucastpkts_817 { get { if (base.Columns.ContainsKey(10)) { return base.Columns[10]; } else { return null; } } set { if (base.Columns.ContainsKey(10)) { base.Columns[10] = value; } else { base.Columns.Add(10, value); } } }
	/// <summary>PID: 817 | Type: read</summary>
	public System.Object Ififoutucastpkts { get { if (base.Columns.ContainsKey(10)) { return base.Columns[10]; } else { return null; } } set { if (base.Columns.ContainsKey(10)) { base.Columns[10] = value; } else { base.Columns.Add(10, value); } } }
	/// <summary>PID: 818 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Monitorinterfacetableconfig_818 { get { if (base.Columns.ContainsKey(11)) { return base.Columns[11]; } else { return null; } } set { if (base.Columns.ContainsKey(11)) { base.Columns[11] = value; } else { base.Columns.Add(11, value); } } }
	/// <summary>PID: 818 | Type: read</summary>
	public System.Object Monitorinterfacetableconfig { get { if (base.Columns.ContainsKey(11)) { return base.Columns[11]; } else { return null; } } set { if (base.Columns.ContainsKey(11)) { base.Columns[11] = value; } else { base.Columns.Add(11, value); } } }
	public InterfacetableconfigQActionRow() : base(0, 12) { }
	public InterfacetableconfigQActionRow(System.Object[] oRow) : base(0, 12, oRow) { }
	public static implicit operator InterfacetableconfigQActionRow(System.Object[] source) { return new InterfacetableconfigQActionRow(source); }
	public static implicit operator System.Object[](InterfacetableconfigQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class IfxtableQActionRow : QActionTableRow
{
	/// <summary>PID: 901 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ifinstance_901 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 901 | Type: read</summary>
	public System.Object Ifinstance { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 902 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ifname_902 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 902 | Type: read</summary>
	public System.Object Ifname { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 907 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ifhcinoctets_907 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 907 | Type: read</summary>
	public System.Object Ifhcinoctets { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 911 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ifhcoutoctets_911 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 911 | Type: read</summary>
	public System.Object Ifhcoutoctets { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 916 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ifhighspeed_916 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 916 | Type: read</summary>
	public System.Object Ifhighspeed { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	public IfxtableQActionRow() : base(0, 5) { }
	public IfxtableQActionRow(System.Object[] oRow) : base(0, 5, oRow) { }
	public static implicit operator IfxtableQActionRow(System.Object[] source) { return new IfxtableQActionRow(source); }
	public static implicit operator System.Object[](IfxtableQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class LinuxmonitoredprocesseslistQActionRow : QActionTableRow
{
	/// <summary>PID: 1024 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Linuxmonitoredprocesseslistprocess_index_1024 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 1024 | Type: read</summary>
	public System.Object Linuxmonitoredprocesseslistprocess_index { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 1025 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Linuxmonitoredprocesseslistprocess_id_1025 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 1025 | Type: read</summary>
	public System.Object Linuxmonitoredprocesseslistprocess_id { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 1026 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Linuxmonitoredprocesseslistprocess_name_1026 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 1026 | Type: read</summary>
	public System.Object Linuxmonitoredprocesseslistprocess_name { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 1027 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Linuxmonitoredprocesseslistprocess_minimum_1027 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 1027 | Type: read</summary>
	public System.Object Linuxmonitoredprocesseslistprocess_minimum { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 1028 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Linuxmonitoredprocesseslistprocess_maximum_1028 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 1028 | Type: read</summary>
	public System.Object Linuxmonitoredprocesseslistprocess_maximum { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 1029 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Linuxmonitoredprocesseslistprocess_current_1029 { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 1029 | Type: read</summary>
	public System.Object Linuxmonitoredprocesseslistprocess_current { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 1030 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Linuxmonitoredprocesseslistprocess_status_1030 { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 1030 | Type: read</summary>
	public System.Object Linuxmonitoredprocesseslistprocess_status { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 1031 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Linuxmonitoredprocesseslistprocess_errormessage_1031 { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 1031 | Type: read</summary>
	public System.Object Linuxmonitoredprocesseslistprocess_errormessage { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 1032 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Linuxmonitoredprocesseslistprocess_script_1032 { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 1032 | Type: read</summary>
	public System.Object Linuxmonitoredprocesseslistprocess_script { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 1033 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Linuxmonitoredprocesseslistprocess_command_1033 { get { if (base.Columns.ContainsKey(9)) { return base.Columns[9]; } else { return null; } } set { if (base.Columns.ContainsKey(9)) { base.Columns[9] = value; } else { base.Columns.Add(9, value); } } }
	/// <summary>PID: 1033 | Type: read</summary>
	public System.Object Linuxmonitoredprocesseslistprocess_command { get { if (base.Columns.ContainsKey(9)) { return base.Columns[9]; } else { return null; } } set { if (base.Columns.ContainsKey(9)) { base.Columns[9] = value; } else { base.Columns.Add(9, value); } } }
	public LinuxmonitoredprocesseslistQActionRow() : base(0, 10) { }
	public LinuxmonitoredprocesseslistQActionRow(System.Object[] oRow) : base(0, 10, oRow) { }
	public static implicit operator LinuxmonitoredprocesseslistQActionRow(System.Object[] source) { return new LinuxmonitoredprocesseslistQActionRow(source); }
	public static implicit operator System.Object[](LinuxmonitoredprocesseslistQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class MountavailabilityQActionRow : QActionTableRow
{
	/// <summary>PID: 1041 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mountavailabilitymountname_1041 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 1041 | Type: read</summary>
	public System.Object Mountavailabilitymountname { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 1042 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Mountavailabilityavailability_1042 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 1042 | Type: read</summary>
	public System.Object Mountavailabilityavailability { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	public MountavailabilityQActionRow() : base(0, 2) { }
	public MountavailabilityQActionRow(System.Object[] oRow) : base(0, 2, oRow) { }
	public static implicit operator MountavailabilityQActionRow(System.Object[] source) { return new MountavailabilityQActionRow(source); }
	public static implicit operator System.Object[](MountavailabilityQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class LinuxmonitoreddisksQActionRow : QActionTableRow
{
	/// <summary>PID: 1056 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Linuxmonitoreddisksindex_1056 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 1056 | Type: read</summary>
	public System.Object Linuxmonitoreddisksindex { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 1054 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Linuxmonitoreddisksidentifier_1054 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 1054 | Type: read</summary>
	public System.Object Linuxmonitoreddisksidentifier { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 1057 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Linuxmonitoreddisksmountpath_1057 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 1057 | Type: read</summary>
	public System.Object Linuxmonitoreddisksmountpath { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 1058 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Linuxmonitoreddisksdevicepath_1058 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 1058 | Type: read</summary>
	public System.Object Linuxmonitoreddisksdevicepath { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 1059 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Linuxmonitoreddisksminimum_1059 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 1059 | Type: read</summary>
	public System.Object Linuxmonitoreddisksminimum { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 1060 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Linuxmonitoreddiskspercentagediskminimum_1060 { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 1060 | Type: read</summary>
	public System.Object Linuxmonitoreddiskspercentagediskminimum { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 1061 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Linuxmonitoreddiskstotalsize_1061 { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 1061 | Type: read</summary>
	public System.Object Linuxmonitoreddiskstotalsize { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 1062 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Linuxmonitoreddisksavailablespace_1062 { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 1062 | Type: read</summary>
	public System.Object Linuxmonitoreddisksavailablespace { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 1064 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Linuxmonitoreddisksusedspace_1064 { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 1064 | Type: read</summary>
	public System.Object Linuxmonitoreddisksusedspace { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 1065 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Linuxmonitoreddisksstatus_1065 { get { if (base.Columns.ContainsKey(9)) { return base.Columns[9]; } else { return null; } } set { if (base.Columns.ContainsKey(9)) { base.Columns[9] = value; } else { base.Columns.Add(9, value); } } }
	/// <summary>PID: 1065 | Type: read</summary>
	public System.Object Linuxmonitoreddisksstatus { get { if (base.Columns.ContainsKey(9)) { return base.Columns[9]; } else { return null; } } set { if (base.Columns.ContainsKey(9)) { base.Columns[9] = value; } else { base.Columns.Add(9, value); } } }
	/// <summary>PID: 1066 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Linuxmonitoreddiskswarning_1066 { get { if (base.Columns.ContainsKey(10)) { return base.Columns[10]; } else { return null; } } set { if (base.Columns.ContainsKey(10)) { base.Columns[10] = value; } else { base.Columns.Add(10, value); } } }
	/// <summary>PID: 1066 | Type: read</summary>
	public System.Object Linuxmonitoreddiskswarning { get { if (base.Columns.ContainsKey(10)) { return base.Columns[10]; } else { return null; } } set { if (base.Columns.ContainsKey(10)) { base.Columns[10] = value; } else { base.Columns.Add(10, value); } } }
	/// <summary>PID: 1067 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Linuxmonitoreddisksusedspaceabsolute_1067 { get { if (base.Columns.ContainsKey(11)) { return base.Columns[11]; } else { return null; } } set { if (base.Columns.ContainsKey(11)) { base.Columns[11] = value; } else { base.Columns.Add(11, value); } } }
	/// <summary>PID: 1067 | Type: read</summary>
	public System.Object Linuxmonitoreddisksusedspaceabsolute { get { if (base.Columns.ContainsKey(11)) { return base.Columns[11]; } else { return null; } } set { if (base.Columns.ContainsKey(11)) { base.Columns[11] = value; } else { base.Columns.Add(11, value); } } }
	public LinuxmonitoreddisksQActionRow() : base(0, 12) { }
	public LinuxmonitoreddisksQActionRow(System.Object[] oRow) : base(0, 12, oRow) { }
	public static implicit operator LinuxmonitoreddisksQActionRow(System.Object[] source) { return new LinuxmonitoreddisksQActionRow(source); }
	public static implicit operator System.Object[](LinuxmonitoreddisksQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class LoadaverageinformationQActionRow : QActionTableRow
{
	/// <summary>PID: 1105 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Loadaverageinformationindex_1105 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 1105 | Type: read</summary>
	public System.Object Loadaverageinformationindex { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 1106 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Loadaverageinformationname_1106 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 1106 | Type: read</summary>
	public System.Object Loadaverageinformationname { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 1107 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Loadaverageinformationvalue_1107 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 1107 | Type: read</summary>
	public System.Object Loadaverageinformationvalue { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	public LoadaverageinformationQActionRow() : base(0, 3) { }
	public LoadaverageinformationQActionRow(System.Object[] oRow) : base(0, 3, oRow) { }
	public static implicit operator LoadaverageinformationQActionRow(System.Object[] source) { return new LoadaverageinformationQActionRow(source); }
	public static implicit operator System.Object[](LoadaverageinformationQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class ProcessortableQActionRow : QActionTableRow
{
	/// <summary>PID: 1221 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Processorinstance_1221 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 1221 | Type: read</summary>
	public System.Object Processorinstance { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 1222 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Processorfrwid_1222 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 1222 | Type: read</summary>
	public System.Object Processorfrwid { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 1223 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Processorload_1223 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 1223 | Type: read</summary>
	public System.Object Processorload { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 1224 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Processordevicedescr_1224 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 1224 | Type: read</summary>
	public System.Object Processordevicedescr { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 1225 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Processorindex_1225 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 1225 | Type: read</summary>
	public System.Object Processorindex { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	public ProcessortableQActionRow() : base(0, 5) { }
	public ProcessortableQActionRow(System.Object[] oRow) : base(0, 5, oRow) { }
	public static implicit operator ProcessortableQActionRow(System.Object[] source) { return new ProcessortableQActionRow(source); }
	public static implicit operator System.Object[](ProcessortableQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class LvsservicetableQActionRow : QActionTableRow
{
	/// <summary>PID: 1601 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsservicenumber_1601 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 1601 | Type: read</summary>
	public System.Object Lvsservicenumber { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 1602 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsserviceschedtype_1602 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 1602 | Type: read</summary>
	public System.Object Lvsserviceschedtype { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 1603 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsserviceproto_1603 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 1603 | Type: read</summary>
	public System.Object Lvsserviceproto { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 1604 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsserviceaddr_1604 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 1604 | Type: read</summary>
	public System.Object Lvsserviceaddr { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 1605 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsserviceport_1605 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 1605 | Type: read</summary>
	public System.Object Lvsserviceport { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 1606 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsservicefwmark_1606 { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 1606 | Type: read</summary>
	public System.Object Lvsservicefwmark { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 1607 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsservicepersisttimeout_1607 { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 1607 | Type: read</summary>
	public System.Object Lvsservicepersisttimeout { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 1608 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsservicepersistnetmask_1608 { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 1608 | Type: read</summary>
	public System.Object Lvsservicepersistnetmask { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 1609 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsservicenumdests_1609 { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 1609 | Type: read</summary>
	public System.Object Lvsservicenumdests { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 1610 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsservicestatsconns_1610 { get { if (base.Columns.ContainsKey(9)) { return base.Columns[9]; } else { return null; } } set { if (base.Columns.ContainsKey(9)) { base.Columns[9] = value; } else { base.Columns.Add(9, value); } } }
	/// <summary>PID: 1610 | Type: read</summary>
	public System.Object Lvsservicestatsconns { get { if (base.Columns.ContainsKey(9)) { return base.Columns[9]; } else { return null; } } set { if (base.Columns.ContainsKey(9)) { base.Columns[9] = value; } else { base.Columns.Add(9, value); } } }
	/// <summary>PID: 1611 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsservicestatsinpkts_1611 { get { if (base.Columns.ContainsKey(10)) { return base.Columns[10]; } else { return null; } } set { if (base.Columns.ContainsKey(10)) { base.Columns[10] = value; } else { base.Columns.Add(10, value); } } }
	/// <summary>PID: 1611 | Type: read</summary>
	public System.Object Lvsservicestatsinpkts { get { if (base.Columns.ContainsKey(10)) { return base.Columns[10]; } else { return null; } } set { if (base.Columns.ContainsKey(10)) { base.Columns[10] = value; } else { base.Columns.Add(10, value); } } }
	/// <summary>PID: 1612 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsservicestatsoutpkts_1612 { get { if (base.Columns.ContainsKey(11)) { return base.Columns[11]; } else { return null; } } set { if (base.Columns.ContainsKey(11)) { base.Columns[11] = value; } else { base.Columns.Add(11, value); } } }
	/// <summary>PID: 1612 | Type: read</summary>
	public System.Object Lvsservicestatsoutpkts { get { if (base.Columns.ContainsKey(11)) { return base.Columns[11]; } else { return null; } } set { if (base.Columns.ContainsKey(11)) { base.Columns[11] = value; } else { base.Columns.Add(11, value); } } }
	/// <summary>PID: 1613 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsservicestatsinbytes_1613 { get { if (base.Columns.ContainsKey(12)) { return base.Columns[12]; } else { return null; } } set { if (base.Columns.ContainsKey(12)) { base.Columns[12] = value; } else { base.Columns.Add(12, value); } } }
	/// <summary>PID: 1613 | Type: read</summary>
	public System.Object Lvsservicestatsinbytes { get { if (base.Columns.ContainsKey(12)) { return base.Columns[12]; } else { return null; } } set { if (base.Columns.ContainsKey(12)) { base.Columns[12] = value; } else { base.Columns.Add(12, value); } } }
	/// <summary>PID: 1614 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsservicestatsoutbytes_1614 { get { if (base.Columns.ContainsKey(13)) { return base.Columns[13]; } else { return null; } } set { if (base.Columns.ContainsKey(13)) { base.Columns[13] = value; } else { base.Columns.Add(13, value); } } }
	/// <summary>PID: 1614 | Type: read</summary>
	public System.Object Lvsservicestatsoutbytes { get { if (base.Columns.ContainsKey(13)) { return base.Columns[13]; } else { return null; } } set { if (base.Columns.ContainsKey(13)) { base.Columns[13] = value; } else { base.Columns.Add(13, value); } } }
	/// <summary>PID: 1615 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsserviceratecps_1615 { get { if (base.Columns.ContainsKey(14)) { return base.Columns[14]; } else { return null; } } set { if (base.Columns.ContainsKey(14)) { base.Columns[14] = value; } else { base.Columns.Add(14, value); } } }
	/// <summary>PID: 1615 | Type: read</summary>
	public System.Object Lvsserviceratecps { get { if (base.Columns.ContainsKey(14)) { return base.Columns[14]; } else { return null; } } set { if (base.Columns.ContainsKey(14)) { base.Columns[14] = value; } else { base.Columns.Add(14, value); } } }
	/// <summary>PID: 1616 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsservicerateinpps_1616 { get { if (base.Columns.ContainsKey(15)) { return base.Columns[15]; } else { return null; } } set { if (base.Columns.ContainsKey(15)) { base.Columns[15] = value; } else { base.Columns.Add(15, value); } } }
	/// <summary>PID: 1616 | Type: read</summary>
	public System.Object Lvsservicerateinpps { get { if (base.Columns.ContainsKey(15)) { return base.Columns[15]; } else { return null; } } set { if (base.Columns.ContainsKey(15)) { base.Columns[15] = value; } else { base.Columns.Add(15, value); } } }
	/// <summary>PID: 1617 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsservicerateoutpps_1617 { get { if (base.Columns.ContainsKey(16)) { return base.Columns[16]; } else { return null; } } set { if (base.Columns.ContainsKey(16)) { base.Columns[16] = value; } else { base.Columns.Add(16, value); } } }
	/// <summary>PID: 1617 | Type: read</summary>
	public System.Object Lvsservicerateoutpps { get { if (base.Columns.ContainsKey(16)) { return base.Columns[16]; } else { return null; } } set { if (base.Columns.ContainsKey(16)) { base.Columns[16] = value; } else { base.Columns.Add(16, value); } } }
	/// <summary>PID: 1618 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsservicerateinbps_1618 { get { if (base.Columns.ContainsKey(17)) { return base.Columns[17]; } else { return null; } } set { if (base.Columns.ContainsKey(17)) { base.Columns[17] = value; } else { base.Columns.Add(17, value); } } }
	/// <summary>PID: 1618 | Type: read</summary>
	public System.Object Lvsservicerateinbps { get { if (base.Columns.ContainsKey(17)) { return base.Columns[17]; } else { return null; } } set { if (base.Columns.ContainsKey(17)) { base.Columns[17] = value; } else { base.Columns.Add(17, value); } } }
	/// <summary>PID: 1619 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsservicerateoutbps_1619 { get { if (base.Columns.ContainsKey(18)) { return base.Columns[18]; } else { return null; } } set { if (base.Columns.ContainsKey(18)) { base.Columns[18] = value; } else { base.Columns.Add(18, value); } } }
	/// <summary>PID: 1619 | Type: read</summary>
	public System.Object Lvsservicerateoutbps { get { if (base.Columns.ContainsKey(18)) { return base.Columns[18]; } else { return null; } } set { if (base.Columns.ContainsKey(18)) { base.Columns[18] = value; } else { base.Columns.Add(18, value); } } }
	public LvsservicetableQActionRow() : base(0, 19) { }
	public LvsservicetableQActionRow(System.Object[] oRow) : base(0, 19, oRow) { }
	public static implicit operator LvsservicetableQActionRow(System.Object[] source) { return new LvsservicetableQActionRow(source); }
	public static implicit operator System.Object[](LvsservicetableQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class LvsrealtableQActionRow : QActionTableRow
{
	/// <summary>PID: 1701 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsrealservicenumber_1701 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 1701 | Type: read</summary>
	public System.Object Lvsrealservicenumber { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 1702 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsrealservernumber_1702 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 1702 | Type: read</summary>
	public System.Object Lvsrealservernumber { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 1703 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsrealserveraddr_1703 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 1703 | Type: read</summary>
	public System.Object Lvsrealserveraddr { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 1704 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsrealserverport_1704 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 1704 | Type: read</summary>
	public System.Object Lvsrealserverport { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 1705 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsrealserverflags_1705 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 1705 | Type: read</summary>
	public System.Object Lvsrealserverflags { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 1706 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsrealserverweight_1706 { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 1706 | Type: read</summary>
	public System.Object Lvsrealserverweight { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 1707 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsrealstatsconns_1707 { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 1707 | Type: read</summary>
	public System.Object Lvsrealstatsconns { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 1708 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsrealstatsinpkts_1708 { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 1708 | Type: read</summary>
	public System.Object Lvsrealstatsinpkts { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 1709 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsrealstatsoutpkts_1709 { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 1709 | Type: read</summary>
	public System.Object Lvsrealstatsoutpkts { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 1710 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsrealstatsinbytes_1710 { get { if (base.Columns.ContainsKey(9)) { return base.Columns[9]; } else { return null; } } set { if (base.Columns.ContainsKey(9)) { base.Columns[9] = value; } else { base.Columns.Add(9, value); } } }
	/// <summary>PID: 1710 | Type: read</summary>
	public System.Object Lvsrealstatsinbytes { get { if (base.Columns.ContainsKey(9)) { return base.Columns[9]; } else { return null; } } set { if (base.Columns.ContainsKey(9)) { base.Columns[9] = value; } else { base.Columns.Add(9, value); } } }
	/// <summary>PID: 1711 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsrealstatsoutbytes_1711 { get { if (base.Columns.ContainsKey(10)) { return base.Columns[10]; } else { return null; } } set { if (base.Columns.ContainsKey(10)) { base.Columns[10] = value; } else { base.Columns.Add(10, value); } } }
	/// <summary>PID: 1711 | Type: read</summary>
	public System.Object Lvsrealstatsoutbytes { get { if (base.Columns.ContainsKey(10)) { return base.Columns[10]; } else { return null; } } set { if (base.Columns.ContainsKey(10)) { base.Columns[10] = value; } else { base.Columns.Add(10, value); } } }
	/// <summary>PID: 1712 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsrealratecps_1712 { get { if (base.Columns.ContainsKey(11)) { return base.Columns[11]; } else { return null; } } set { if (base.Columns.ContainsKey(11)) { base.Columns[11] = value; } else { base.Columns.Add(11, value); } } }
	/// <summary>PID: 1712 | Type: read</summary>
	public System.Object Lvsrealratecps { get { if (base.Columns.ContainsKey(11)) { return base.Columns[11]; } else { return null; } } set { if (base.Columns.ContainsKey(11)) { base.Columns[11] = value; } else { base.Columns.Add(11, value); } } }
	/// <summary>PID: 1713 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsrealrateinpps_1713 { get { if (base.Columns.ContainsKey(12)) { return base.Columns[12]; } else { return null; } } set { if (base.Columns.ContainsKey(12)) { base.Columns[12] = value; } else { base.Columns.Add(12, value); } } }
	/// <summary>PID: 1713 | Type: read</summary>
	public System.Object Lvsrealrateinpps { get { if (base.Columns.ContainsKey(12)) { return base.Columns[12]; } else { return null; } } set { if (base.Columns.ContainsKey(12)) { base.Columns[12] = value; } else { base.Columns.Add(12, value); } } }
	/// <summary>PID: 1714 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsrealrateoutpps_1714 { get { if (base.Columns.ContainsKey(13)) { return base.Columns[13]; } else { return null; } } set { if (base.Columns.ContainsKey(13)) { base.Columns[13] = value; } else { base.Columns.Add(13, value); } } }
	/// <summary>PID: 1714 | Type: read</summary>
	public System.Object Lvsrealrateoutpps { get { if (base.Columns.ContainsKey(13)) { return base.Columns[13]; } else { return null; } } set { if (base.Columns.ContainsKey(13)) { base.Columns[13] = value; } else { base.Columns.Add(13, value); } } }
	/// <summary>PID: 1715 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsrealrateinbps_1715 { get { if (base.Columns.ContainsKey(14)) { return base.Columns[14]; } else { return null; } } set { if (base.Columns.ContainsKey(14)) { base.Columns[14] = value; } else { base.Columns.Add(14, value); } } }
	/// <summary>PID: 1715 | Type: read</summary>
	public System.Object Lvsrealrateinbps { get { if (base.Columns.ContainsKey(14)) { return base.Columns[14]; } else { return null; } } set { if (base.Columns.ContainsKey(14)) { base.Columns[14] = value; } else { base.Columns.Add(14, value); } } }
	/// <summary>PID: 1716 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Lvsrealrateoutbps_1716 { get { if (base.Columns.ContainsKey(15)) { return base.Columns[15]; } else { return null; } } set { if (base.Columns.ContainsKey(15)) { base.Columns[15] = value; } else { base.Columns.Add(15, value); } } }
	/// <summary>PID: 1716 | Type: read</summary>
	public System.Object Lvsrealrateoutbps { get { if (base.Columns.ContainsKey(15)) { return base.Columns[15]; } else { return null; } } set { if (base.Columns.ContainsKey(15)) { base.Columns[15] = value; } else { base.Columns.Add(15, value); } } }
	public LvsrealtableQActionRow() : base(0, 16) { }
	public LvsrealtableQActionRow(System.Object[] oRow) : base(0, 16, oRow) { }
	public static implicit operator LvsrealtableQActionRow(System.Object[] source) { return new LvsrealtableQActionRow(source); }
	public static implicit operator System.Object[](LvsrealtableQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class ExternaldataoverviewQActionRow : QActionTableRow
{
	/// <summary>PID: 8001 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Externaldataoverviewid_idx__8001 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 8001 | Type: read</summary>
	public System.Object Externaldataoverviewid_idx_ { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 8002 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Externaldataoverviewvalue_8002 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 8002 | Type: read</summary>
	public System.Object Externaldataoverviewvalue { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 8003 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Externaldataoverviewstring_8003 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 8003 | Type: read</summary>
	public System.Object Externaldataoverviewstring { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 8004 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Externaldataoverviewfunctionality_8004 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 8004 | Type: read</summary>
	public System.Object Externaldataoverviewfunctionality { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	public ExternaldataoverviewQActionRow() : base(0, 4) { }
	public ExternaldataoverviewQActionRow(System.Object[] oRow) : base(0, 4, oRow) { }
	public static implicit operator ExternaldataoverviewQActionRow(System.Object[] source) { return new ExternaldataoverviewQActionRow(source); }
	public static implicit operator System.Object[](ExternaldataoverviewQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class ProcessvalidationtableQActionRow : QActionTableRow
{
	/// <summary>PID: 8601 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Processvalidationprocesstovalidate_8601 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 8601 | Type: read</summary>
	public System.Object Processvalidationprocesstovalidate { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 8602 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Processvalidationstatus_8602 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 8602 | Type: read</summary>
	public System.Object Processvalidationstatus { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 8603 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Processvalidationprocessmonitoring_8603 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 8603 | Type: read</summary>
	public System.Object Processvalidationprocessmonitoring { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	public ProcessvalidationtableQActionRow() : base(0, 3) { }
	public ProcessvalidationtableQActionRow(System.Object[] oRow) : base(0, 3, oRow) { }
	public static implicit operator ProcessvalidationtableQActionRow(System.Object[] source) { return new ProcessvalidationtableQActionRow(source); }
	public static implicit operator System.Object[](ProcessvalidationtableQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class ExttableQActionRow : QActionTableRow
{
	/// <summary>PID: 10001 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Exttableindex_10001 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 10001 | Type: read</summary>
	public System.Object Exttableindex { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 10002 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Extnames_10002 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 10002 | Type: read</summary>
	public System.Object Extnames { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 10003 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Extcommand_10003 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 10003 | Type: read</summary>
	public System.Object Extcommand { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 10004 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Extresult_10004 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 10004 | Type: read</summary>
	public System.Object Extresult { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 10005 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Extoutput_10005 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 10005 | Type: read</summary>
	public System.Object Extoutput { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 10006 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Exterrfix_10006 { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 10006 | Type: read</summary>
	public System.Object Exterrfix { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 10007 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Exterrfixcmd_10007 { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 10007 | Type: read</summary>
	public System.Object Exterrfixcmd { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	public ExttableQActionRow() : base(0, 7) { }
	public ExttableQActionRow(System.Object[] oRow) : base(0, 7, oRow) { }
	public static implicit operator ExttableQActionRow(System.Object[] source) { return new ExttableQActionRow(source); }
	public static implicit operator System.Object[](ExttableQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class DiskiotableQActionRow : QActionTableRow
{
	/// <summary>PID: 10101 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Diskioindex_10101 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 10101 | Type: read</summary>
	public System.Object Diskioindex { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 10102 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Diskiodevice_10102 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 10102 | Type: read</summary>
	public System.Object Diskiodevice { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 10103 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Diskionread_10103 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 10103 | Type: read</summary>
	public System.Object Diskionread { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 10104 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Diskionreadrate_10104 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 10104 | Type: read</summary>
	public System.Object Diskionreadrate { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 10105 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Diskionreadbefore_10105 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 10105 | Type: read</summary>
	public System.Object Diskionreadbefore { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 10106 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Diskionwritten_10106 { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 10106 | Type: read</summary>
	public System.Object Diskionwritten { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 10107 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Diskionwrittenrate_10107 { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 10107 | Type: read</summary>
	public System.Object Diskionwrittenrate { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 10108 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Diskionwrittenbefore_10108 { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 10108 | Type: read</summary>
	public System.Object Diskionwrittenbefore { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 10109 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Diskioreads_10109 { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 10109 | Type: read</summary>
	public System.Object Diskioreads { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 10110 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Diskiowrites_10110 { get { if (base.Columns.ContainsKey(9)) { return base.Columns[9]; } else { return null; } } set { if (base.Columns.ContainsKey(9)) { base.Columns[9] = value; } else { base.Columns.Add(9, value); } } }
	/// <summary>PID: 10110 | Type: read</summary>
	public System.Object Diskiowrites { get { if (base.Columns.ContainsKey(9)) { return base.Columns[9]; } else { return null; } } set { if (base.Columns.ContainsKey(9)) { base.Columns[9] = value; } else { base.Columns.Add(9, value); } } }
	/// <summary>PID: 10111 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Diskioreadsrate_10111 { get { if (base.Columns.ContainsKey(10)) { return base.Columns[10]; } else { return null; } } set { if (base.Columns.ContainsKey(10)) { base.Columns[10] = value; } else { base.Columns.Add(10, value); } } }
	/// <summary>PID: 10111 | Type: read</summary>
	public System.Object Diskioreadsrate { get { if (base.Columns.ContainsKey(10)) { return base.Columns[10]; } else { return null; } } set { if (base.Columns.ContainsKey(10)) { base.Columns[10] = value; } else { base.Columns.Add(10, value); } } }
	/// <summary>PID: 10112 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Diskioreadsbefore_10112 { get { if (base.Columns.ContainsKey(11)) { return base.Columns[11]; } else { return null; } } set { if (base.Columns.ContainsKey(11)) { base.Columns[11] = value; } else { base.Columns.Add(11, value); } } }
	/// <summary>PID: 10112 | Type: read</summary>
	public System.Object Diskioreadsbefore { get { if (base.Columns.ContainsKey(11)) { return base.Columns[11]; } else { return null; } } set { if (base.Columns.ContainsKey(11)) { base.Columns[11] = value; } else { base.Columns.Add(11, value); } } }
	/// <summary>PID: 10113 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Diskiowritesrate_10113 { get { if (base.Columns.ContainsKey(12)) { return base.Columns[12]; } else { return null; } } set { if (base.Columns.ContainsKey(12)) { base.Columns[12] = value; } else { base.Columns.Add(12, value); } } }
	/// <summary>PID: 10113 | Type: read</summary>
	public System.Object Diskiowritesrate { get { if (base.Columns.ContainsKey(12)) { return base.Columns[12]; } else { return null; } } set { if (base.Columns.ContainsKey(12)) { base.Columns[12] = value; } else { base.Columns.Add(12, value); } } }
	/// <summary>PID: 10114 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Diskiowritesbefore_10114 { get { if (base.Columns.ContainsKey(13)) { return base.Columns[13]; } else { return null; } } set { if (base.Columns.ContainsKey(13)) { base.Columns[13] = value; } else { base.Columns.Add(13, value); } } }
	/// <summary>PID: 10114 | Type: read</summary>
	public System.Object Diskiowritesbefore { get { if (base.Columns.ContainsKey(13)) { return base.Columns[13]; } else { return null; } } set { if (base.Columns.ContainsKey(13)) { base.Columns[13] = value; } else { base.Columns.Add(13, value); } } }
	/// <summary>PID: 10115 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Diskioaveragesecondread_10115 { get { if (base.Columns.ContainsKey(14)) { return base.Columns[14]; } else { return null; } } set { if (base.Columns.ContainsKey(14)) { base.Columns[14] = value; } else { base.Columns.Add(14, value); } } }
	/// <summary>PID: 10115 | Type: read</summary>
	public System.Object Diskioaveragesecondread { get { if (base.Columns.ContainsKey(14)) { return base.Columns[14]; } else { return null; } } set { if (base.Columns.ContainsKey(14)) { base.Columns[14] = value; } else { base.Columns.Add(14, value); } } }
	/// <summary>PID: 10116 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Diskioaveragesecondwrite_10116 { get { if (base.Columns.ContainsKey(15)) { return base.Columns[15]; } else { return null; } } set { if (base.Columns.ContainsKey(15)) { base.Columns[15] = value; } else { base.Columns.Add(15, value); } } }
	/// <summary>PID: 10116 | Type: read</summary>
	public System.Object Diskioaveragesecondwrite { get { if (base.Columns.ContainsKey(15)) { return base.Columns[15]; } else { return null; } } set { if (base.Columns.ContainsKey(15)) { base.Columns[15] = value; } else { base.Columns.Add(15, value); } } }
	public DiskiotableQActionRow() : base(0, 16) { }
	public DiskiotableQActionRow(System.Object[] oRow) : base(0, 16, oRow) { }
	public static implicit operator DiskiotableQActionRow(System.Object[] source) { return new DiskiotableQActionRow(source); }
	public static implicit operator System.Object[](DiskiotableQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class IpsystemstatstableQActionRow : QActionTableRow
{
	/// <summary>PID: 22001 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsipversion_22001 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 22001 | Type: read</summary>
	public System.Object Ipsystemstatsipversion { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 22002 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsinreceives_22002 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 22002 | Type: read</summary>
	public System.Object Ipsystemstatsinreceives { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 22003 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatshcinreceives_22003 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 22003 | Type: read</summary>
	public System.Object Ipsystemstatshcinreceives { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 22004 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsinoctets_22004 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 22004 | Type: read</summary>
	public System.Object Ipsystemstatsinoctets { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 22005 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatshcinoctets_22005 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 22005 | Type: read</summary>
	public System.Object Ipsystemstatshcinoctets { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 22006 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsinhdrerrors_22006 { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 22006 | Type: read</summary>
	public System.Object Ipsystemstatsinhdrerrors { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 22007 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsinnoroutes_22007 { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 22007 | Type: read</summary>
	public System.Object Ipsystemstatsinnoroutes { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 22008 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsinaddrerrors_22008 { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 22008 | Type: read</summary>
	public System.Object Ipsystemstatsinaddrerrors { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 22009 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsinunknownprotos_22009 { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 22009 | Type: read</summary>
	public System.Object Ipsystemstatsinunknownprotos { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 22010 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsintruncatedpkts_22010 { get { if (base.Columns.ContainsKey(9)) { return base.Columns[9]; } else { return null; } } set { if (base.Columns.ContainsKey(9)) { base.Columns[9] = value; } else { base.Columns.Add(9, value); } } }
	/// <summary>PID: 22010 | Type: read</summary>
	public System.Object Ipsystemstatsintruncatedpkts { get { if (base.Columns.ContainsKey(9)) { return base.Columns[9]; } else { return null; } } set { if (base.Columns.ContainsKey(9)) { base.Columns[9] = value; } else { base.Columns.Add(9, value); } } }
	/// <summary>PID: 22011 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsinforwdatagrams_22011 { get { if (base.Columns.ContainsKey(10)) { return base.Columns[10]; } else { return null; } } set { if (base.Columns.ContainsKey(10)) { base.Columns[10] = value; } else { base.Columns.Add(10, value); } } }
	/// <summary>PID: 22011 | Type: read</summary>
	public System.Object Ipsystemstatsinforwdatagrams { get { if (base.Columns.ContainsKey(10)) { return base.Columns[10]; } else { return null; } } set { if (base.Columns.ContainsKey(10)) { base.Columns[10] = value; } else { base.Columns.Add(10, value); } } }
	/// <summary>PID: 22012 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatshcinforwdatagrams_22012 { get { if (base.Columns.ContainsKey(11)) { return base.Columns[11]; } else { return null; } } set { if (base.Columns.ContainsKey(11)) { base.Columns[11] = value; } else { base.Columns.Add(11, value); } } }
	/// <summary>PID: 22012 | Type: read</summary>
	public System.Object Ipsystemstatshcinforwdatagrams { get { if (base.Columns.ContainsKey(11)) { return base.Columns[11]; } else { return null; } } set { if (base.Columns.ContainsKey(11)) { base.Columns[11] = value; } else { base.Columns.Add(11, value); } } }
	/// <summary>PID: 22013 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsreasmreqds_22013 { get { if (base.Columns.ContainsKey(12)) { return base.Columns[12]; } else { return null; } } set { if (base.Columns.ContainsKey(12)) { base.Columns[12] = value; } else { base.Columns.Add(12, value); } } }
	/// <summary>PID: 22013 | Type: read</summary>
	public System.Object Ipsystemstatsreasmreqds { get { if (base.Columns.ContainsKey(12)) { return base.Columns[12]; } else { return null; } } set { if (base.Columns.ContainsKey(12)) { base.Columns[12] = value; } else { base.Columns.Add(12, value); } } }
	/// <summary>PID: 22014 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsreasmoks_22014 { get { if (base.Columns.ContainsKey(13)) { return base.Columns[13]; } else { return null; } } set { if (base.Columns.ContainsKey(13)) { base.Columns[13] = value; } else { base.Columns.Add(13, value); } } }
	/// <summary>PID: 22014 | Type: read</summary>
	public System.Object Ipsystemstatsreasmoks { get { if (base.Columns.ContainsKey(13)) { return base.Columns[13]; } else { return null; } } set { if (base.Columns.ContainsKey(13)) { base.Columns[13] = value; } else { base.Columns.Add(13, value); } } }
	/// <summary>PID: 22015 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsreasmfails_22015 { get { if (base.Columns.ContainsKey(14)) { return base.Columns[14]; } else { return null; } } set { if (base.Columns.ContainsKey(14)) { base.Columns[14] = value; } else { base.Columns.Add(14, value); } } }
	/// <summary>PID: 22015 | Type: read</summary>
	public System.Object Ipsystemstatsreasmfails { get { if (base.Columns.ContainsKey(14)) { return base.Columns[14]; } else { return null; } } set { if (base.Columns.ContainsKey(14)) { base.Columns[14] = value; } else { base.Columns.Add(14, value); } } }
	/// <summary>PID: 22016 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsindiscards_22016 { get { if (base.Columns.ContainsKey(15)) { return base.Columns[15]; } else { return null; } } set { if (base.Columns.ContainsKey(15)) { base.Columns[15] = value; } else { base.Columns.Add(15, value); } } }
	/// <summary>PID: 22016 | Type: read</summary>
	public System.Object Ipsystemstatsindiscards { get { if (base.Columns.ContainsKey(15)) { return base.Columns[15]; } else { return null; } } set { if (base.Columns.ContainsKey(15)) { base.Columns[15] = value; } else { base.Columns.Add(15, value); } } }
	/// <summary>PID: 22017 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsindelivers_22017 { get { if (base.Columns.ContainsKey(16)) { return base.Columns[16]; } else { return null; } } set { if (base.Columns.ContainsKey(16)) { base.Columns[16] = value; } else { base.Columns.Add(16, value); } } }
	/// <summary>PID: 22017 | Type: read</summary>
	public System.Object Ipsystemstatsindelivers { get { if (base.Columns.ContainsKey(16)) { return base.Columns[16]; } else { return null; } } set { if (base.Columns.ContainsKey(16)) { base.Columns[16] = value; } else { base.Columns.Add(16, value); } } }
	/// <summary>PID: 22018 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatshcindelivers_22018 { get { if (base.Columns.ContainsKey(17)) { return base.Columns[17]; } else { return null; } } set { if (base.Columns.ContainsKey(17)) { base.Columns[17] = value; } else { base.Columns.Add(17, value); } } }
	/// <summary>PID: 22018 | Type: read</summary>
	public System.Object Ipsystemstatshcindelivers { get { if (base.Columns.ContainsKey(17)) { return base.Columns[17]; } else { return null; } } set { if (base.Columns.ContainsKey(17)) { base.Columns[17] = value; } else { base.Columns.Add(17, value); } } }
	/// <summary>PID: 22019 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsoutrequests_22019 { get { if (base.Columns.ContainsKey(18)) { return base.Columns[18]; } else { return null; } } set { if (base.Columns.ContainsKey(18)) { base.Columns[18] = value; } else { base.Columns.Add(18, value); } } }
	/// <summary>PID: 22019 | Type: read</summary>
	public System.Object Ipsystemstatsoutrequests { get { if (base.Columns.ContainsKey(18)) { return base.Columns[18]; } else { return null; } } set { if (base.Columns.ContainsKey(18)) { base.Columns[18] = value; } else { base.Columns.Add(18, value); } } }
	/// <summary>PID: 22020 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatshcoutrequests_22020 { get { if (base.Columns.ContainsKey(19)) { return base.Columns[19]; } else { return null; } } set { if (base.Columns.ContainsKey(19)) { base.Columns[19] = value; } else { base.Columns.Add(19, value); } } }
	/// <summary>PID: 22020 | Type: read</summary>
	public System.Object Ipsystemstatshcoutrequests { get { if (base.Columns.ContainsKey(19)) { return base.Columns[19]; } else { return null; } } set { if (base.Columns.ContainsKey(19)) { base.Columns[19] = value; } else { base.Columns.Add(19, value); } } }
	/// <summary>PID: 22021 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsoutnoroutes_22021 { get { if (base.Columns.ContainsKey(20)) { return base.Columns[20]; } else { return null; } } set { if (base.Columns.ContainsKey(20)) { base.Columns[20] = value; } else { base.Columns.Add(20, value); } } }
	/// <summary>PID: 22021 | Type: read</summary>
	public System.Object Ipsystemstatsoutnoroutes { get { if (base.Columns.ContainsKey(20)) { return base.Columns[20]; } else { return null; } } set { if (base.Columns.ContainsKey(20)) { base.Columns[20] = value; } else { base.Columns.Add(20, value); } } }
	/// <summary>PID: 22022 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsoutforwdatagrams_22022 { get { if (base.Columns.ContainsKey(21)) { return base.Columns[21]; } else { return null; } } set { if (base.Columns.ContainsKey(21)) { base.Columns[21] = value; } else { base.Columns.Add(21, value); } } }
	/// <summary>PID: 22022 | Type: read</summary>
	public System.Object Ipsystemstatsoutforwdatagrams { get { if (base.Columns.ContainsKey(21)) { return base.Columns[21]; } else { return null; } } set { if (base.Columns.ContainsKey(21)) { base.Columns[21] = value; } else { base.Columns.Add(21, value); } } }
	/// <summary>PID: 22023 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatshcoutforwdatagrams_22023 { get { if (base.Columns.ContainsKey(22)) { return base.Columns[22]; } else { return null; } } set { if (base.Columns.ContainsKey(22)) { base.Columns[22] = value; } else { base.Columns.Add(22, value); } } }
	/// <summary>PID: 22023 | Type: read</summary>
	public System.Object Ipsystemstatshcoutforwdatagrams { get { if (base.Columns.ContainsKey(22)) { return base.Columns[22]; } else { return null; } } set { if (base.Columns.ContainsKey(22)) { base.Columns[22] = value; } else { base.Columns.Add(22, value); } } }
	/// <summary>PID: 22024 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsoutdiscards_22024 { get { if (base.Columns.ContainsKey(23)) { return base.Columns[23]; } else { return null; } } set { if (base.Columns.ContainsKey(23)) { base.Columns[23] = value; } else { base.Columns.Add(23, value); } } }
	/// <summary>PID: 22024 | Type: read</summary>
	public System.Object Ipsystemstatsoutdiscards { get { if (base.Columns.ContainsKey(23)) { return base.Columns[23]; } else { return null; } } set { if (base.Columns.ContainsKey(23)) { base.Columns[23] = value; } else { base.Columns.Add(23, value); } } }
	/// <summary>PID: 22025 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsoutfragreqds_22025 { get { if (base.Columns.ContainsKey(24)) { return base.Columns[24]; } else { return null; } } set { if (base.Columns.ContainsKey(24)) { base.Columns[24] = value; } else { base.Columns.Add(24, value); } } }
	/// <summary>PID: 22025 | Type: read</summary>
	public System.Object Ipsystemstatsoutfragreqds { get { if (base.Columns.ContainsKey(24)) { return base.Columns[24]; } else { return null; } } set { if (base.Columns.ContainsKey(24)) { base.Columns[24] = value; } else { base.Columns.Add(24, value); } } }
	/// <summary>PID: 22026 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsoutfragoks_22026 { get { if (base.Columns.ContainsKey(25)) { return base.Columns[25]; } else { return null; } } set { if (base.Columns.ContainsKey(25)) { base.Columns[25] = value; } else { base.Columns.Add(25, value); } } }
	/// <summary>PID: 22026 | Type: read</summary>
	public System.Object Ipsystemstatsoutfragoks { get { if (base.Columns.ContainsKey(25)) { return base.Columns[25]; } else { return null; } } set { if (base.Columns.ContainsKey(25)) { base.Columns[25] = value; } else { base.Columns.Add(25, value); } } }
	/// <summary>PID: 22027 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsoutfragfails_22027 { get { if (base.Columns.ContainsKey(26)) { return base.Columns[26]; } else { return null; } } set { if (base.Columns.ContainsKey(26)) { base.Columns[26] = value; } else { base.Columns.Add(26, value); } } }
	/// <summary>PID: 22027 | Type: read</summary>
	public System.Object Ipsystemstatsoutfragfails { get { if (base.Columns.ContainsKey(26)) { return base.Columns[26]; } else { return null; } } set { if (base.Columns.ContainsKey(26)) { base.Columns[26] = value; } else { base.Columns.Add(26, value); } } }
	/// <summary>PID: 22028 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsoutfragcreates_22028 { get { if (base.Columns.ContainsKey(27)) { return base.Columns[27]; } else { return null; } } set { if (base.Columns.ContainsKey(27)) { base.Columns[27] = value; } else { base.Columns.Add(27, value); } } }
	/// <summary>PID: 22028 | Type: read</summary>
	public System.Object Ipsystemstatsoutfragcreates { get { if (base.Columns.ContainsKey(27)) { return base.Columns[27]; } else { return null; } } set { if (base.Columns.ContainsKey(27)) { base.Columns[27] = value; } else { base.Columns.Add(27, value); } } }
	/// <summary>PID: 22029 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsouttransmits_22029 { get { if (base.Columns.ContainsKey(28)) { return base.Columns[28]; } else { return null; } } set { if (base.Columns.ContainsKey(28)) { base.Columns[28] = value; } else { base.Columns.Add(28, value); } } }
	/// <summary>PID: 22029 | Type: read</summary>
	public System.Object Ipsystemstatsouttransmits { get { if (base.Columns.ContainsKey(28)) { return base.Columns[28]; } else { return null; } } set { if (base.Columns.ContainsKey(28)) { base.Columns[28] = value; } else { base.Columns.Add(28, value); } } }
	/// <summary>PID: 22030 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatshcouttransmits_22030 { get { if (base.Columns.ContainsKey(29)) { return base.Columns[29]; } else { return null; } } set { if (base.Columns.ContainsKey(29)) { base.Columns[29] = value; } else { base.Columns.Add(29, value); } } }
	/// <summary>PID: 22030 | Type: read</summary>
	public System.Object Ipsystemstatshcouttransmits { get { if (base.Columns.ContainsKey(29)) { return base.Columns[29]; } else { return null; } } set { if (base.Columns.ContainsKey(29)) { base.Columns[29] = value; } else { base.Columns.Add(29, value); } } }
	/// <summary>PID: 22031 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsoutoctets_22031 { get { if (base.Columns.ContainsKey(30)) { return base.Columns[30]; } else { return null; } } set { if (base.Columns.ContainsKey(30)) { base.Columns[30] = value; } else { base.Columns.Add(30, value); } } }
	/// <summary>PID: 22031 | Type: read</summary>
	public System.Object Ipsystemstatsoutoctets { get { if (base.Columns.ContainsKey(30)) { return base.Columns[30]; } else { return null; } } set { if (base.Columns.ContainsKey(30)) { base.Columns[30] = value; } else { base.Columns.Add(30, value); } } }
	/// <summary>PID: 22032 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatshcoutoctets_22032 { get { if (base.Columns.ContainsKey(31)) { return base.Columns[31]; } else { return null; } } set { if (base.Columns.ContainsKey(31)) { base.Columns[31] = value; } else { base.Columns.Add(31, value); } } }
	/// <summary>PID: 22032 | Type: read</summary>
	public System.Object Ipsystemstatshcoutoctets { get { if (base.Columns.ContainsKey(31)) { return base.Columns[31]; } else { return null; } } set { if (base.Columns.ContainsKey(31)) { base.Columns[31] = value; } else { base.Columns.Add(31, value); } } }
	/// <summary>PID: 22033 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsinmcastpkts_22033 { get { if (base.Columns.ContainsKey(32)) { return base.Columns[32]; } else { return null; } } set { if (base.Columns.ContainsKey(32)) { base.Columns[32] = value; } else { base.Columns.Add(32, value); } } }
	/// <summary>PID: 22033 | Type: read</summary>
	public System.Object Ipsystemstatsinmcastpkts { get { if (base.Columns.ContainsKey(32)) { return base.Columns[32]; } else { return null; } } set { if (base.Columns.ContainsKey(32)) { base.Columns[32] = value; } else { base.Columns.Add(32, value); } } }
	/// <summary>PID: 22034 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatshcinmcastpkts_22034 { get { if (base.Columns.ContainsKey(33)) { return base.Columns[33]; } else { return null; } } set { if (base.Columns.ContainsKey(33)) { base.Columns[33] = value; } else { base.Columns.Add(33, value); } } }
	/// <summary>PID: 22034 | Type: read</summary>
	public System.Object Ipsystemstatshcinmcastpkts { get { if (base.Columns.ContainsKey(33)) { return base.Columns[33]; } else { return null; } } set { if (base.Columns.ContainsKey(33)) { base.Columns[33] = value; } else { base.Columns.Add(33, value); } } }
	/// <summary>PID: 22035 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsinmcastoctets_22035 { get { if (base.Columns.ContainsKey(34)) { return base.Columns[34]; } else { return null; } } set { if (base.Columns.ContainsKey(34)) { base.Columns[34] = value; } else { base.Columns.Add(34, value); } } }
	/// <summary>PID: 22035 | Type: read</summary>
	public System.Object Ipsystemstatsinmcastoctets { get { if (base.Columns.ContainsKey(34)) { return base.Columns[34]; } else { return null; } } set { if (base.Columns.ContainsKey(34)) { base.Columns[34] = value; } else { base.Columns.Add(34, value); } } }
	/// <summary>PID: 22036 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatshcinmcastoctets_22036 { get { if (base.Columns.ContainsKey(35)) { return base.Columns[35]; } else { return null; } } set { if (base.Columns.ContainsKey(35)) { base.Columns[35] = value; } else { base.Columns.Add(35, value); } } }
	/// <summary>PID: 22036 | Type: read</summary>
	public System.Object Ipsystemstatshcinmcastoctets { get { if (base.Columns.ContainsKey(35)) { return base.Columns[35]; } else { return null; } } set { if (base.Columns.ContainsKey(35)) { base.Columns[35] = value; } else { base.Columns.Add(35, value); } } }
	/// <summary>PID: 22037 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsoutmcastpkts_22037 { get { if (base.Columns.ContainsKey(36)) { return base.Columns[36]; } else { return null; } } set { if (base.Columns.ContainsKey(36)) { base.Columns[36] = value; } else { base.Columns.Add(36, value); } } }
	/// <summary>PID: 22037 | Type: read</summary>
	public System.Object Ipsystemstatsoutmcastpkts { get { if (base.Columns.ContainsKey(36)) { return base.Columns[36]; } else { return null; } } set { if (base.Columns.ContainsKey(36)) { base.Columns[36] = value; } else { base.Columns.Add(36, value); } } }
	/// <summary>PID: 22038 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatshcoutmcastpkts_22038 { get { if (base.Columns.ContainsKey(37)) { return base.Columns[37]; } else { return null; } } set { if (base.Columns.ContainsKey(37)) { base.Columns[37] = value; } else { base.Columns.Add(37, value); } } }
	/// <summary>PID: 22038 | Type: read</summary>
	public System.Object Ipsystemstatshcoutmcastpkts { get { if (base.Columns.ContainsKey(37)) { return base.Columns[37]; } else { return null; } } set { if (base.Columns.ContainsKey(37)) { base.Columns[37] = value; } else { base.Columns.Add(37, value); } } }
	/// <summary>PID: 22039 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsoutmcastoctets_22039 { get { if (base.Columns.ContainsKey(38)) { return base.Columns[38]; } else { return null; } } set { if (base.Columns.ContainsKey(38)) { base.Columns[38] = value; } else { base.Columns.Add(38, value); } } }
	/// <summary>PID: 22039 | Type: read</summary>
	public System.Object Ipsystemstatsoutmcastoctets { get { if (base.Columns.ContainsKey(38)) { return base.Columns[38]; } else { return null; } } set { if (base.Columns.ContainsKey(38)) { base.Columns[38] = value; } else { base.Columns.Add(38, value); } } }
	/// <summary>PID: 22040 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatshcoutmcastoctets_22040 { get { if (base.Columns.ContainsKey(39)) { return base.Columns[39]; } else { return null; } } set { if (base.Columns.ContainsKey(39)) { base.Columns[39] = value; } else { base.Columns.Add(39, value); } } }
	/// <summary>PID: 22040 | Type: read</summary>
	public System.Object Ipsystemstatshcoutmcastoctets { get { if (base.Columns.ContainsKey(39)) { return base.Columns[39]; } else { return null; } } set { if (base.Columns.ContainsKey(39)) { base.Columns[39] = value; } else { base.Columns.Add(39, value); } } }
	/// <summary>PID: 22041 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsinbcastpkts_22041 { get { if (base.Columns.ContainsKey(40)) { return base.Columns[40]; } else { return null; } } set { if (base.Columns.ContainsKey(40)) { base.Columns[40] = value; } else { base.Columns.Add(40, value); } } }
	/// <summary>PID: 22041 | Type: read</summary>
	public System.Object Ipsystemstatsinbcastpkts { get { if (base.Columns.ContainsKey(40)) { return base.Columns[40]; } else { return null; } } set { if (base.Columns.ContainsKey(40)) { base.Columns[40] = value; } else { base.Columns.Add(40, value); } } }
	/// <summary>PID: 22042 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatshcinbcastpkts_22042 { get { if (base.Columns.ContainsKey(41)) { return base.Columns[41]; } else { return null; } } set { if (base.Columns.ContainsKey(41)) { base.Columns[41] = value; } else { base.Columns.Add(41, value); } } }
	/// <summary>PID: 22042 | Type: read</summary>
	public System.Object Ipsystemstatshcinbcastpkts { get { if (base.Columns.ContainsKey(41)) { return base.Columns[41]; } else { return null; } } set { if (base.Columns.ContainsKey(41)) { base.Columns[41] = value; } else { base.Columns.Add(41, value); } } }
	/// <summary>PID: 22043 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsoutbcastpkts_22043 { get { if (base.Columns.ContainsKey(42)) { return base.Columns[42]; } else { return null; } } set { if (base.Columns.ContainsKey(42)) { base.Columns[42] = value; } else { base.Columns.Add(42, value); } } }
	/// <summary>PID: 22043 | Type: read</summary>
	public System.Object Ipsystemstatsoutbcastpkts { get { if (base.Columns.ContainsKey(42)) { return base.Columns[42]; } else { return null; } } set { if (base.Columns.ContainsKey(42)) { base.Columns[42] = value; } else { base.Columns.Add(42, value); } } }
	/// <summary>PID: 22044 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatshcoutbcastpkts_22044 { get { if (base.Columns.ContainsKey(43)) { return base.Columns[43]; } else { return null; } } set { if (base.Columns.ContainsKey(43)) { base.Columns[43] = value; } else { base.Columns.Add(43, value); } } }
	/// <summary>PID: 22044 | Type: read</summary>
	public System.Object Ipsystemstatshcoutbcastpkts { get { if (base.Columns.ContainsKey(43)) { return base.Columns[43]; } else { return null; } } set { if (base.Columns.ContainsKey(43)) { base.Columns[43] = value; } else { base.Columns.Add(43, value); } } }
	/// <summary>PID: 22045 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsdiscontinuitytime_22045 { get { if (base.Columns.ContainsKey(44)) { return base.Columns[44]; } else { return null; } } set { if (base.Columns.ContainsKey(44)) { base.Columns[44] = value; } else { base.Columns.Add(44, value); } } }
	/// <summary>PID: 22045 | Type: read</summary>
	public System.Object Ipsystemstatsdiscontinuitytime { get { if (base.Columns.ContainsKey(44)) { return base.Columns[44]; } else { return null; } } set { if (base.Columns.ContainsKey(44)) { base.Columns[44] = value; } else { base.Columns.Add(44, value); } } }
	/// <summary>PID: 22046 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Ipsystemstatsrefreshrate_22046 { get { if (base.Columns.ContainsKey(45)) { return base.Columns[45]; } else { return null; } } set { if (base.Columns.ContainsKey(45)) { base.Columns[45] = value; } else { base.Columns.Add(45, value); } } }
	/// <summary>PID: 22046 | Type: read</summary>
	public System.Object Ipsystemstatsrefreshrate { get { if (base.Columns.ContainsKey(45)) { return base.Columns[45]; } else { return null; } } set { if (base.Columns.ContainsKey(45)) { base.Columns[45] = value; } else { base.Columns.Add(45, value); } } }
	public IpsystemstatstableQActionRow() : base(0, 46) { }
	public IpsystemstatstableQActionRow(System.Object[] oRow) : base(0, 46, oRow) { }
	public static implicit operator IpsystemstatstableQActionRow(System.Object[] source) { return new IpsystemstatstableQActionRow(source); }
	public static implicit operator System.Object[](IpsystemstatstableQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class TcpconnectiontableQActionRow : QActionTableRow
{
	/// <summary>PID: 22401 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Tcpconnectiontableinstance_22401 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 22401 | Type: read</summary>
	public System.Object Tcpconnectiontableinstance { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 22402 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Tcpconnectionstate_22402 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 22402 | Type: read</summary>
	public System.Object Tcpconnectionstate { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 22403 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Tcpconnectionprocess_22403 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 22403 | Type: read</summary>
	public System.Object Tcpconnectionprocess { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 22404 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Tcpconnectionlocalipaddresstype_22404 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 22404 | Type: read</summary>
	public System.Object Tcpconnectionlocalipaddresstype { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 22405 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Tcpconnectionlocalipaddress_22405 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 22405 | Type: read</summary>
	public System.Object Tcpconnectionlocalipaddress { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 22406 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Tcpconnectionlocalipaddressport_22406 { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 22406 | Type: read</summary>
	public System.Object Tcpconnectionlocalipaddressport { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 22407 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Tcpconnectionremoteipaddresstype_22407 { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 22407 | Type: read</summary>
	public System.Object Tcpconnectionremoteipaddresstype { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 22408 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Tcpconnectionremoteipaddress_22408 { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 22408 | Type: read</summary>
	public System.Object Tcpconnectionremoteipaddress { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 22409 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Tcpconnectionremoteipaddressport_22409 { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 22409 | Type: read</summary>
	public System.Object Tcpconnectionremoteipaddressport { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	public TcpconnectiontableQActionRow() : base(0, 9) { }
	public TcpconnectiontableQActionRow(System.Object[] oRow) : base(0, 9, oRow) { }
	public static implicit operator TcpconnectiontableQActionRow(System.Object[] source) { return new TcpconnectiontableQActionRow(source); }
	public static implicit operator System.Object[](TcpconnectiontableQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class PortlistQActionRow : QActionTableRow
{
	/// <summary>PID: 40010 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Portlistportnumber_40010 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 40010 | Type: read</summary>
	public System.Object Portlistportnumber { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 40011 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Portlisttimeoutport_40011 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 40011 | Type: read</summary>
	public System.Object Portlisttimeoutport { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 40012 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Portliststatus_40012 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 40012 | Type: read</summary>
	public System.Object Portliststatus { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 40013 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Portlistportresult_40013 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 40013 | Type: read</summary>
	public System.Object Portlistportresult { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 40014 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Portlistdelay_40014 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 40014 | Type: read</summary>
	public System.Object Portlistdelay { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 40015 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Portlistpreviousexecution_40015 { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 40015 | Type: read</summary>
	public System.Object Portlistpreviousexecution { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 40016 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Portlistcomment_40016 { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 40016 | Type: read</summary>
	public System.Object Portlistcomment { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 40017 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Portlistpreviousexecutionbackup_40017 { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 40017 | Type: read</summary>
	public System.Object Portlistpreviousexecutionbackup { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 40018 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Portlistretries_40018 { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 40018 | Type: read</summary>
	public System.Object Portlistretries { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 40019 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Portlisttimeuntilnextpoll_40019 { get { if (base.Columns.ContainsKey(9)) { return base.Columns[9]; } else { return null; } } set { if (base.Columns.ContainsKey(9)) { base.Columns[9] = value; } else { base.Columns.Add(9, value); } } }
	/// <summary>PID: 40019 | Type: read</summary>
	public System.Object Portlisttimeuntilnextpoll { get { if (base.Columns.ContainsKey(9)) { return base.Columns[9]; } else { return null; } } set { if (base.Columns.ContainsKey(9)) { base.Columns[9] = value; } else { base.Columns.Add(9, value); } } }
	public PortlistQActionRow() : base(0, 10) { }
	public PortlistQActionRow(System.Object[] oRow) : base(0, 10, oRow) { }
	public static implicit operator PortlistQActionRow(System.Object[] source) { return new PortlistQActionRow(source); }
	public static implicit operator System.Object[](PortlistQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class RemotedcfinterfacetableQActionRow : QActionTableRow
{
	/// <summary>PID: 49998 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Remotedcfinterfaceid_49998 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 49998 | Type: read</summary>
	public System.Object Remotedcfinterfaceid { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	public RemotedcfinterfacetableQActionRow() : base(0, 1) { }
	public RemotedcfinterfacetableQActionRow(System.Object[] oRow) : base(0, 1, oRow) { }
	public static implicit operator RemotedcfinterfacetableQActionRow(System.Object[] source) { return new RemotedcfinterfacetableQActionRow(source); }
	public static implicit operator System.Object[](RemotedcfinterfacetableQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class CpqhetemperaturetableQActionRow : QActionTableRow
{
	/// <summary>PID: 50311 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hptemptable_instance_50311 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 50311 | Type: read</summary>
	public System.Object Hptemptable_instance { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 50312 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqhetemperaturechassis_50312 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 50312 | Type: read</summary>
	public System.Object Cpqhetemperaturechassis { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 50313 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqhetemperatureindex_50313 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 50313 | Type: read</summary>
	public System.Object Cpqhetemperatureindex { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 50314 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqhetemperaturelocale_50314 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 50314 | Type: read</summary>
	public System.Object Cpqhetemperaturelocale { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 50315 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqhetemperaturecelsius_50315 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 50315 | Type: read</summary>
	public System.Object Cpqhetemperaturecelsius { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 50316 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqhetemperaturethreshold_50316 { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 50316 | Type: read</summary>
	public System.Object Cpqhetemperaturethreshold { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 50317 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqhetemperaturecondition_50317 { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 50317 | Type: read</summary>
	public System.Object Cpqhetemperaturecondition { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 50318 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqhetemperaturethresholdtype_50318 { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 50318 | Type: read</summary>
	public System.Object Cpqhetemperaturethresholdtype { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 50319 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqhetemperaturehwlocation_50319 { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 50319 | Type: read</summary>
	public System.Object Cpqhetemperaturehwlocation { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 50320 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hptempidx_50320 { get { if (base.Columns.ContainsKey(9)) { return base.Columns[9]; } else { return null; } } set { if (base.Columns.ContainsKey(9)) { base.Columns[9] = value; } else { base.Columns.Add(9, value); } } }
	/// <summary>PID: 50320 | Type: read</summary>
	public System.Object Hptempidx { get { if (base.Columns.ContainsKey(9)) { return base.Columns[9]; } else { return null; } } set { if (base.Columns.ContainsKey(9)) { base.Columns[9] = value; } else { base.Columns.Add(9, value); } } }
	public CpqhetemperaturetableQActionRow() : base(0, 10) { }
	public CpqhetemperaturetableQActionRow(System.Object[] oRow) : base(0, 10, oRow) { }
	public static implicit operator CpqhetemperaturetableQActionRow(System.Object[] source) { return new CpqhetemperaturetableQActionRow(source); }
	public static implicit operator System.Object[](CpqhetemperaturetableQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class HppowersupplytableQActionRow : QActionTableRow
{
	/// <summary>PID: 50401 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hppowersupplyinstance_50401 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 50401 | Type: read</summary>
	public System.Object Hppowersupplyinstance { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 50402 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hppowersupplychassis_50402 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 50402 | Type: read</summary>
	public System.Object Hppowersupplychassis { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 50404 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hppowersupplypresent_50404 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 50404 | Type: read</summary>
	public System.Object Hppowersupplypresent { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 50405 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hppowersupplycondition_50405 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 50405 | Type: read</summary>
	public System.Object Hppowersupplycondition { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 50406 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hppowersupplystatus_50406 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 50406 | Type: read</summary>
	public System.Object Hppowersupplystatus { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 50407 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hppowersupplymainvoltage_50407 { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 50407 | Type: read</summary>
	public System.Object Hppowersupplymainvoltage { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 50408 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hppowersupplycapacityused_50408 { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 50408 | Type: read</summary>
	public System.Object Hppowersupplycapacityused { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 50409 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hppowersupplycapacitymaximum_50409 { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 50409 | Type: read</summary>
	public System.Object Hppowersupplycapacitymaximum { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 50410 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hppowersupplyredundant_50410 { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 50410 | Type: read</summary>
	public System.Object Hppowersupplyredundant { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 50414 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hppowersupplyhotplug_50414 { get { if (base.Columns.ContainsKey(9)) { return base.Columns[9]; } else { return null; } } set { if (base.Columns.ContainsKey(9)) { base.Columns[9] = value; } else { base.Columns.Add(9, value); } } }
	/// <summary>PID: 50414 | Type: read</summary>
	public System.Object Hppowersupplyhotplug { get { if (base.Columns.ContainsKey(9)) { return base.Columns[9]; } else { return null; } } set { if (base.Columns.ContainsKey(9)) { base.Columns[9] = value; } else { base.Columns.Add(9, value); } } }
	public HppowersupplytableQActionRow() : base(0, 10) { }
	public HppowersupplytableQActionRow(System.Object[] oRow) : base(0, 10, oRow) { }
	public static implicit operator HppowersupplytableQActionRow(System.Object[] source) { return new HppowersupplytableQActionRow(source); }
	public static implicit operator System.Object[](HppowersupplytableQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class HpfantableQActionRow : QActionTableRow
{
	/// <summary>PID: 50501 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hpfantable_instance_50501 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 50501 | Type: read</summary>
	public System.Object Hpfantable_instance { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 50502 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hpfanchassis_50502 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 50502 | Type: read</summary>
	public System.Object Hpfanchassis { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 50503 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqheflttolfanindex_50503 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 50503 | Type: read</summary>
	public System.Object Cpqheflttolfanindex { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 50504 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqheflttolfanlocale_50504 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 50504 | Type: read</summary>
	public System.Object Cpqheflttolfanlocale { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 50505 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqheflttolfanpresent_50505 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 50505 | Type: read</summary>
	public System.Object Cpqheflttolfanpresent { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 50506 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqheflttolfantype_50506 { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 50506 | Type: read</summary>
	public System.Object Cpqheflttolfantype { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 50507 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqheflttolfanspeed_50507 { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 50507 | Type: read</summary>
	public System.Object Cpqheflttolfanspeed { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 50508 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqheflttolfanredundant_50508 { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 50508 | Type: read</summary>
	public System.Object Cpqheflttolfanredundant { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 50510 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqheflttolfancondition_50510 { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 50510 | Type: read</summary>
	public System.Object Cpqheflttolfancondition { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 50511 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqheflttolfanhotplug_50511 { get { if (base.Columns.ContainsKey(9)) { return base.Columns[9]; } else { return null; } } set { if (base.Columns.ContainsKey(9)) { base.Columns[9] = value; } else { base.Columns.Add(9, value); } } }
	/// <summary>PID: 50511 | Type: read</summary>
	public System.Object Cpqheflttolfanhotplug { get { if (base.Columns.ContainsKey(9)) { return base.Columns[9]; } else { return null; } } set { if (base.Columns.ContainsKey(9)) { base.Columns[9] = value; } else { base.Columns.Add(9, value); } } }
	/// <summary>PID: 50513 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqheflttolfancurrentspeed_50513 { get { if (base.Columns.ContainsKey(10)) { return base.Columns[10]; } else { return null; } } set { if (base.Columns.ContainsKey(10)) { base.Columns[10] = value; } else { base.Columns.Add(10, value); } } }
	/// <summary>PID: 50513 | Type: read</summary>
	public System.Object Cpqheflttolfancurrentspeed { get { if (base.Columns.ContainsKey(10)) { return base.Columns[10]; } else { return null; } } set { if (base.Columns.ContainsKey(10)) { base.Columns[10] = value; } else { base.Columns.Add(10, value); } } }
	/// <summary>PID: 50520 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hpfanidx_50520 { get { if (base.Columns.ContainsKey(11)) { return base.Columns[11]; } else { return null; } } set { if (base.Columns.ContainsKey(11)) { base.Columns[11] = value; } else { base.Columns.Add(11, value); } } }
	/// <summary>PID: 50520 | Type: read</summary>
	public System.Object Hpfanidx { get { if (base.Columns.ContainsKey(11)) { return base.Columns[11]; } else { return null; } } set { if (base.Columns.ContainsKey(11)) { base.Columns[11] = value; } else { base.Columns.Add(11, value); } } }
	public HpfantableQActionRow() : base(0, 12) { }
	public HpfantableQActionRow(System.Object[] oRow) : base(0, 12, oRow) { }
	public static implicit operator HpfantableQActionRow(System.Object[] source) { return new HpfantableQActionRow(source); }
	public static implicit operator System.Object[](HpfantableQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class CpqdacntlrtableQActionRow : QActionTableRow
{
	/// <summary>PID: 50601 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqdacntlrindex_50601 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 50601 | Type: read</summary>
	public System.Object Cpqdacntlrindex { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 50602 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqdacntlrmodel_50602 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 50602 | Type: read</summary>
	public System.Object Cpqdacntlrmodel { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 50606 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqdacntlrcondition_50606 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 50606 | Type: read</summary>
	public System.Object Cpqdacntlrcondition { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 50610 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqdacntlrboardstatus_50610 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 50610 | Type: read</summary>
	public System.Object Cpqdacntlrboardstatus { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 50612 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqdacntlrboardcondition_50612 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 50612 | Type: read</summary>
	public System.Object Cpqdacntlrboardcondition { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 50616 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqdacntlrredundancytype_50616 { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 50616 | Type: read</summary>
	public System.Object Cpqdacntlrredundancytype { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 50617 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqdacntlrredundancyerror_50617 { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 50617 | Type: read</summary>
	public System.Object Cpqdacntlrredundancyerror { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 50618 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqdacntlraccessmodulestatus_50618 { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 50618 | Type: read</summary>
	public System.Object Cpqdacntlraccessmodulestatus { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	public CpqdacntlrtableQActionRow() : base(0, 8) { }
	public CpqdacntlrtableQActionRow(System.Object[] oRow) : base(0, 8, oRow) { }
	public static implicit operator CpqdacntlrtableQActionRow(System.Object[] source) { return new CpqdacntlrtableQActionRow(source); }
	public static implicit operator System.Object[](CpqdacntlrtableQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class CpqdaacceltableQActionRow : QActionTableRow
{
	/// <summary>PID: 50701 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqdaaccelcntlrindex_50701 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 50701 | Type: read</summary>
	public System.Object Cpqdaaccelcntlrindex { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 50702 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqdaaccelstatus_50702 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 50702 | Type: read</summary>
	public System.Object Cpqdaaccelstatus { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 50704 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqdaaccelbaddata_50704 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 50704 | Type: read</summary>
	public System.Object Cpqdaaccelbaddata { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 50705 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqdaaccelerrcode_50705 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 50705 | Type: read</summary>
	public System.Object Cpqdaaccelerrcode { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 50706 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqdaaccelbattery_50706 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 50706 | Type: read</summary>
	public System.Object Cpqdaaccelbattery { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 50709 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqdaaccelcondition_50709 { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 50709 | Type: read</summary>
	public System.Object Cpqdaaccelcondition { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	public CpqdaacceltableQActionRow() : base(0, 6) { }
	public CpqdaacceltableQActionRow(System.Object[] oRow) : base(0, 6, oRow) { }
	public static implicit operator CpqdaacceltableQActionRow(System.Object[] source) { return new CpqdaacceltableQActionRow(source); }
	public static implicit operator System.Object[](CpqdaacceltableQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class Cpqheresmem2moduletableQActionRow : QActionTableRow
{
	/// <summary>PID: 50751 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqheresmem2module_50751 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 50751 | Type: read</summary>
	public System.Object Cpqheresmem2module { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 50752 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqheresmem2boardnum_50752 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 50752 | Type: read</summary>
	public System.Object Cpqheresmem2boardnum { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 50753 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqheresmem2cpunum_50753 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 50753 | Type: read</summary>
	public System.Object Cpqheresmem2cpunum { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 50754 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqheresmem2modulenum_50754 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 50754 | Type: read</summary>
	public System.Object Cpqheresmem2modulenum { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 50755 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqheresmem2modulesize_50755 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 50755 | Type: read</summary>
	public System.Object Cpqheresmem2modulesize { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 50756 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqheresmem2moduletype_50756 { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 50756 | Type: read</summary>
	public System.Object Cpqheresmem2moduletype { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 50757 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqheresmem2modulefrequency_50757 { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 50757 | Type: read</summary>
	public System.Object Cpqheresmem2modulefrequency { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 50758 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqheresmem2modulestatus_50758 { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 50758 | Type: read</summary>
	public System.Object Cpqheresmem2modulestatus { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 50759 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqheresmem2modulecondition_50759 { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 50759 | Type: read</summary>
	public System.Object Cpqheresmem2modulecondition { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	public Cpqheresmem2moduletableQActionRow() : base(0, 9) { }
	public Cpqheresmem2moduletableQActionRow(System.Object[] oRow) : base(0, 9, oRow) { }
	public static implicit operator Cpqheresmem2moduletableQActionRow(System.Object[] source) { return new Cpqheresmem2moduletableQActionRow(source); }
	public static implicit operator System.Object[](Cpqheresmem2moduletableQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class CpqdaphydrvtableQActionRow : QActionTableRow
{
	/// <summary>PID: 50801 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hpphysicaldrivetable_instance_50801 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 50801 | Type: read</summary>
	public System.Object Hpphysicaldrivetable_instance { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 50803 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqdaphydrvmodel_50803 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 50803 | Type: read</summary>
	public System.Object Cpqdaphydrvmodel { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 50806 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqdaphydrvstatus_50806 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 50806 | Type: read</summary>
	public System.Object Cpqdaphydrvstatus { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 50837 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqdaphydrvcondition_50837 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 50837 | Type: read</summary>
	public System.Object Cpqdaphydrvcondition { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 50845 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqdaphydrvsize_50845 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 50845 | Type: read</summary>
	public System.Object Cpqdaphydrvsize { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 50855 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqdaphydrvfailurecode_50855 { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 50855 | Type: read</summary>
	public System.Object Cpqdaphydrvfailurecode { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 50857 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqdaphydrvsmartstatus_50857 { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 50857 | Type: read</summary>
	public System.Object Cpqdaphydrvsmartstatus { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 50858 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqdaphydrvconfigurationstatus_50858 { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 50858 | Type: read</summary>
	public System.Object Cpqdaphydrvconfigurationstatus { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 50859 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqdaphydrvrotationalspeed_50859 { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 50859 | Type: read</summary>
	public System.Object Cpqdaphydrvrotationalspeed { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 50860 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqdaphydrvtype_50860 { get { if (base.Columns.ContainsKey(9)) { return base.Columns[9]; } else { return null; } } set { if (base.Columns.ContainsKey(9)) { base.Columns[9] = value; } else { base.Columns.Add(9, value); } } }
	/// <summary>PID: 50860 | Type: read</summary>
	public System.Object Cpqdaphydrvtype { get { if (base.Columns.ContainsKey(9)) { return base.Columns[9]; } else { return null; } } set { if (base.Columns.ContainsKey(9)) { base.Columns[9] = value; } else { base.Columns.Add(9, value); } } }
	/// <summary>PID: 50864 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqdaphydrvlocationstring_50864 { get { if (base.Columns.ContainsKey(10)) { return base.Columns[10]; } else { return null; } } set { if (base.Columns.ContainsKey(10)) { base.Columns[10] = value; } else { base.Columns.Add(10, value); } } }
	/// <summary>PID: 50864 | Type: read</summary>
	public System.Object Cpqdaphydrvlocationstring { get { if (base.Columns.ContainsKey(10)) { return base.Columns[10]; } else { return null; } } set { if (base.Columns.ContainsKey(10)) { base.Columns[10] = value; } else { base.Columns.Add(10, value); } } }
	/// <summary>PID: 50865 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqdaphydrvnegotiatedlinkrate_50865 { get { if (base.Columns.ContainsKey(11)) { return base.Columns[11]; } else { return null; } } set { if (base.Columns.ContainsKey(11)) { base.Columns[11] = value; } else { base.Columns.Add(11, value); } } }
	/// <summary>PID: 50865 | Type: read</summary>
	public System.Object Cpqdaphydrvnegotiatedlinkrate { get { if (base.Columns.ContainsKey(11)) { return base.Columns[11]; } else { return null; } } set { if (base.Columns.ContainsKey(11)) { base.Columns[11] = value; } else { base.Columns.Add(11, value); } } }
	public CpqdaphydrvtableQActionRow() : base(0, 12) { }
	public CpqdaphydrvtableQActionRow(System.Object[] oRow) : base(0, 12, oRow) { }
	public static implicit operator CpqdaphydrvtableQActionRow(System.Object[] source) { return new CpqdaphydrvtableQActionRow(source); }
	public static implicit operator System.Object[](CpqdaphydrvtableQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class CpqdalogdrvtableQActionRow : QActionTableRow
{
	/// <summary>PID: 50901 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Hplogicaldrivetable_instance_50901 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 50901 | Type: read</summary>
	public System.Object Hplogicaldrivetable_instance { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 50902 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqdalogdrvfaulttol_50902 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 50902 | Type: read</summary>
	public System.Object Cpqdalogdrvfaulttol { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 50903 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqdalogdrvstatus_50903 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 50903 | Type: read</summary>
	public System.Object Cpqdalogdrvstatus { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 50904 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqdalogdrvsize_50904 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 50904 | Type: read</summary>
	public System.Object Cpqdalogdrvsize { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 50905 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqdalogdrvcondition_50905 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 50905 | Type: read</summary>
	public System.Object Cpqdalogdrvcondition { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	public CpqdalogdrvtableQActionRow() : base(0, 5) { }
	public CpqdalogdrvtableQActionRow(System.Object[] oRow) : base(0, 5, oRow) { }
	public static implicit operator CpqdalogdrvtableQActionRow(System.Object[] source) { return new CpqdalogdrvtableQActionRow(source); }
	public static implicit operator System.Object[](CpqdalogdrvtableQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class CpqsecputableQActionRow : QActionTableRow
{
	/// <summary>PID: 51001 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqsecpuunitindex_51001 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 51001 | Type: read</summary>
	public System.Object Cpqsecpuunitindex { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 51002 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqsecpuname_51002 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 51002 | Type: read</summary>
	public System.Object Cpqsecpuname { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 51003 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqsecpuspeed_51003 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 51003 | Type: read</summary>
	public System.Object Cpqsecpuspeed { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 51004 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqsecpustatus_51004 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 51004 | Type: read</summary>
	public System.Object Cpqsecpustatus { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 51005 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Cpqsecpucore_51005 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 51005 | Type: read</summary>
	public System.Object Cpqsecpucore { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	public CpqsecputableQActionRow() : base(0, 5) { }
	public CpqsecputableQActionRow(System.Object[] oRow) : base(0, 5, oRow) { }
	public static implicit operator CpqsecputableQActionRow(System.Object[] source) { return new CpqsecputableQActionRow(source); }
	public static implicit operator System.Object[](CpqsecputableQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class PowersupplytableQActionRow : QActionTableRow
{
	/// <summary>PID: 52201 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Dellpowersupply_52201 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 52201 | Type: read</summary>
	public System.Object Dellpowersupply { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 52202 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Powersupplylocationname_52202 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 52202 | Type: read</summary>
	public System.Object Powersupplylocationname { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 52203 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Powersupplystatus_52203 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 52203 | Type: read</summary>
	public System.Object Powersupplystatus { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 52204 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Powersupplytype_52204 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 52204 | Type: read</summary>
	public System.Object Powersupplytype { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	public PowersupplytableQActionRow() : base(0, 4) { }
	public PowersupplytableQActionRow(System.Object[] oRow) : base(0, 4, oRow) { }
	public static implicit operator PowersupplytableQActionRow(System.Object[] source) { return new PowersupplytableQActionRow(source); }
	public static implicit operator System.Object[](PowersupplytableQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class TemperatureprobetableQActionRow : QActionTableRow
{
	/// <summary>PID: 52301 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Instancetemperatureprobetable_52301 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 52301 | Type: read</summary>
	public System.Object Instancetemperatureprobetable { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 52302 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Temperatureprobelocationname_52302 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 52302 | Type: read</summary>
	public System.Object Temperatureprobelocationname { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 52303 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Temperatureprobestatesettings_52303 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 52303 | Type: read</summary>
	public System.Object Temperatureprobestatesettings { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 52304 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Temperatureprobestatus_52304 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 52304 | Type: read</summary>
	public System.Object Temperatureprobestatus { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 52305 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Temperatureprobetype_52305 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 52305 | Type: read</summary>
	public System.Object Temperatureprobetype { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 52306 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Temperatureprobereading_52306 { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 52306 | Type: read</summary>
	public System.Object Temperatureprobereading { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 52307 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Temperatureprobediscretereading_52307 { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 52307 | Type: read</summary>
	public System.Object Temperatureprobediscretereading { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	public TemperatureprobetableQActionRow() : base(0, 7) { }
	public TemperatureprobetableQActionRow(System.Object[] oRow) : base(0, 7, oRow) { }
	public static implicit operator TemperatureprobetableQActionRow(System.Object[] source) { return new TemperatureprobetableQActionRow(source); }
	public static implicit operator System.Object[](TemperatureprobetableQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class CoolingdevicetableQActionRow : QActionTableRow
{
	/// <summary>PID: 52401 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Instancecoolingdevicetable_52401 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 52401 | Type: read</summary>
	public System.Object Instancecoolingdevicetable { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 52402 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Coolingdevicelocationname_52402 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 52402 | Type: read</summary>
	public System.Object Coolingdevicelocationname { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 52403 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Coolingdevicestatesettings_52403 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 52403 | Type: read</summary>
	public System.Object Coolingdevicestatesettings { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 52404 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Coolingdevicestatus_52404 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 52404 | Type: read</summary>
	public System.Object Coolingdevicestatus { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 52405 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Coolingdevicetype_52405 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 52405 | Type: read</summary>
	public System.Object Coolingdevicetype { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 52406 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Coolingdevicereading_52406 { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 52406 | Type: read</summary>
	public System.Object Coolingdevicereading { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 52407 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Coolingdevicediscretereading_52407 { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 52407 | Type: read</summary>
	public System.Object Coolingdevicediscretereading { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	public CoolingdevicetableQActionRow() : base(0, 7) { }
	public CoolingdevicetableQActionRow(System.Object[] oRow) : base(0, 7, oRow) { }
	public static implicit operator CoolingdevicetableQActionRow(System.Object[] source) { return new CoolingdevicetableQActionRow(source); }
	public static implicit operator System.Object[](CoolingdevicetableQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class ControllertableQActionRow : QActionTableRow
{
	/// <summary>PID: 52801 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Controllernumber_52801 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 52801 | Type: read</summary>
	public System.Object Controllernumber { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 52802 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Controllername_52802 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 52802 | Type: read</summary>
	public System.Object Controllername { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 52803 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Controllertype_52803 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 52803 | Type: read</summary>
	public System.Object Controllertype { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 52804 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Controllerstate_52804 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 52804 | Type: read</summary>
	public System.Object Controllerstate { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 52805 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Controllerfwversion_52805 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 52805 | Type: read</summary>
	public System.Object Controllerfwversion { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 52806 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Controllerrollupstatus_52806 { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 52806 | Type: read</summary>
	public System.Object Controllerrollupstatus { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 52807 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Controllercomponentstatus_52807 { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 52807 | Type: read</summary>
	public System.Object Controllercomponentstatus { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 52808 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Controllernexusid_52808 { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 52808 | Type: read</summary>
	public System.Object Controllernexusid { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 52809 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Controllerdriverversion_52809 { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 52809 | Type: read</summary>
	public System.Object Controllerdriverversion { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	public ControllertableQActionRow() : base(0, 9) { }
	public ControllertableQActionRow(System.Object[] oRow) : base(0, 9, oRow) { }
	public static implicit operator ControllertableQActionRow(System.Object[] source) { return new ControllertableQActionRow(source); }
	public static implicit operator System.Object[](ControllertableQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class ChanneltableQActionRow : QActionTableRow
{
	/// <summary>PID: 52901 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Channelnumber_52901 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 52901 | Type: read</summary>
	public System.Object Channelnumber { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 52902 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Channelname_52902 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 52902 | Type: read</summary>
	public System.Object Channelname { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 52903 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Channelstate_52903 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 52903 | Type: read</summary>
	public System.Object Channelstate { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 52904 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Channelrollupstatus_52904 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 52904 | Type: read</summary>
	public System.Object Channelrollupstatus { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 52905 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Channelcomponentstatus_52905 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 52905 | Type: read</summary>
	public System.Object Channelcomponentstatus { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 52906 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Channelnexusid_52906 { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 52906 | Type: read</summary>
	public System.Object Channelnexusid { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 52907 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Channelbustype_52907 { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 52907 | Type: read</summary>
	public System.Object Channelbustype { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	public ChanneltableQActionRow() : base(0, 7) { }
	public ChanneltableQActionRow(System.Object[] oRow) : base(0, 7, oRow) { }
	public static implicit operator ChanneltableQActionRow(System.Object[] source) { return new ChanneltableQActionRow(source); }
	public static implicit operator System.Object[](ChanneltableQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class EnclosuretableQActionRow : QActionTableRow
{
	/// <summary>PID: 53001 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Enclosurenumber_53001 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 53001 | Type: read</summary>
	public System.Object Enclosurenumber { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 53002 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Enclosurename_53002 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 53002 | Type: read</summary>
	public System.Object Enclosurename { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 53003 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Enclosurestate_53003 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 53003 | Type: read</summary>
	public System.Object Enclosurestate { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 53004 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Enclosuretype_53004 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 53004 | Type: read</summary>
	public System.Object Enclosuretype { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 53005 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Enclosurerollupstatus_53005 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 53005 | Type: read</summary>
	public System.Object Enclosurerollupstatus { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 53006 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Enclosurecomponentstatus_53006 { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 53006 | Type: read</summary>
	public System.Object Enclosurecomponentstatus { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 53007 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Enclosurenexusid_53007 { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 53007 | Type: read</summary>
	public System.Object Enclosurenexusid { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 53008 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Enclosurefirmwareversion_53008 { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 53008 | Type: read</summary>
	public System.Object Enclosurefirmwareversion { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	public EnclosuretableQActionRow() : base(0, 8) { }
	public EnclosuretableQActionRow(System.Object[] oRow) : base(0, 8, oRow) { }
	public static implicit operator EnclosuretableQActionRow(System.Object[] source) { return new EnclosuretableQActionRow(source); }
	public static implicit operator System.Object[](EnclosuretableQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class ArraydisktableQActionRow : QActionTableRow
{
	/// <summary>PID: 53101 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Arraydisknumber_53101 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 53101 | Type: read</summary>
	public System.Object Arraydisknumber { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 53102 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Arraydiskname_53102 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 53102 | Type: read</summary>
	public System.Object Arraydiskname { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 53103 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Arraydiskstate_53103 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 53103 | Type: read</summary>
	public System.Object Arraydiskstate { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 53104 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Arraydiskproductid_53104 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 53104 | Type: read</summary>
	public System.Object Arraydiskproductid { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 53105 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Arraydiskserialno_53105 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 53105 | Type: read</summary>
	public System.Object Arraydiskserialno { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 53106 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Arraydiskrevision_53106 { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 53106 | Type: read</summary>
	public System.Object Arraydiskrevision { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 53107 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Arraydisklengthinmb_53107 { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 53107 | Type: read</summary>
	public System.Object Arraydisklengthinmb { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 53108 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Arraydiskusedspaceinmb_53108 { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 53108 | Type: read</summary>
	public System.Object Arraydiskusedspaceinmb { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 53109 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Arraydiskfreespaceinmb_53109 { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 53109 | Type: read</summary>
	public System.Object Arraydiskfreespaceinmb { get { if (base.Columns.ContainsKey(8)) { return base.Columns[8]; } else { return null; } } set { if (base.Columns.ContainsKey(8)) { base.Columns[8] = value; } else { base.Columns.Add(8, value); } } }
	/// <summary>PID: 53110 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Arraydiskbustype_53110 { get { if (base.Columns.ContainsKey(9)) { return base.Columns[9]; } else { return null; } } set { if (base.Columns.ContainsKey(9)) { base.Columns[9] = value; } else { base.Columns.Add(9, value); } } }
	/// <summary>PID: 53110 | Type: read</summary>
	public System.Object Arraydiskbustype { get { if (base.Columns.ContainsKey(9)) { return base.Columns[9]; } else { return null; } } set { if (base.Columns.ContainsKey(9)) { base.Columns[9] = value; } else { base.Columns.Add(9, value); } } }
	/// <summary>PID: 53111 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Arraydisksparestate_53111 { get { if (base.Columns.ContainsKey(10)) { return base.Columns[10]; } else { return null; } } set { if (base.Columns.ContainsKey(10)) { base.Columns[10] = value; } else { base.Columns.Add(10, value); } } }
	/// <summary>PID: 53111 | Type: read</summary>
	public System.Object Arraydisksparestate { get { if (base.Columns.ContainsKey(10)) { return base.Columns[10]; } else { return null; } } set { if (base.Columns.ContainsKey(10)) { base.Columns[10] = value; } else { base.Columns.Add(10, value); } } }
	/// <summary>PID: 53112 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Arraydiskrollupstatus_53112 { get { if (base.Columns.ContainsKey(11)) { return base.Columns[11]; } else { return null; } } set { if (base.Columns.ContainsKey(11)) { base.Columns[11] = value; } else { base.Columns.Add(11, value); } } }
	/// <summary>PID: 53112 | Type: read</summary>
	public System.Object Arraydiskrollupstatus { get { if (base.Columns.ContainsKey(11)) { return base.Columns[11]; } else { return null; } } set { if (base.Columns.ContainsKey(11)) { base.Columns[11] = value; } else { base.Columns.Add(11, value); } } }
	/// <summary>PID: 53113 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Arraydiskcomponentstatus_53113 { get { if (base.Columns.ContainsKey(12)) { return base.Columns[12]; } else { return null; } } set { if (base.Columns.ContainsKey(12)) { base.Columns[12] = value; } else { base.Columns.Add(12, value); } } }
	/// <summary>PID: 53113 | Type: read</summary>
	public System.Object Arraydiskcomponentstatus { get { if (base.Columns.ContainsKey(12)) { return base.Columns[12]; } else { return null; } } set { if (base.Columns.ContainsKey(12)) { base.Columns[12] = value; } else { base.Columns.Add(12, value); } } }
	/// <summary>PID: 53114 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Arraydisknexusid_53114 { get { if (base.Columns.ContainsKey(13)) { return base.Columns[13]; } else { return null; } } set { if (base.Columns.ContainsKey(13)) { base.Columns[13] = value; } else { base.Columns.Add(13, value); } } }
	/// <summary>PID: 53114 | Type: read</summary>
	public System.Object Arraydisknexusid { get { if (base.Columns.ContainsKey(13)) { return base.Columns[13]; } else { return null; } } set { if (base.Columns.ContainsKey(13)) { base.Columns[13] = value; } else { base.Columns.Add(13, value); } } }
	/// <summary>PID: 53115 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Arraydisksmartalertindication_53115 { get { if (base.Columns.ContainsKey(14)) { return base.Columns[14]; } else { return null; } } set { if (base.Columns.ContainsKey(14)) { base.Columns[14] = value; } else { base.Columns.Add(14, value); } } }
	/// <summary>PID: 53115 | Type: read</summary>
	public System.Object Arraydisksmartalertindication { get { if (base.Columns.ContainsKey(14)) { return base.Columns[14]; } else { return null; } } set { if (base.Columns.ContainsKey(14)) { base.Columns[14] = value; } else { base.Columns.Add(14, value); } } }
	/// <summary>PID: 53116 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Arraydiskmediatype_53116 { get { if (base.Columns.ContainsKey(15)) { return base.Columns[15]; } else { return null; } } set { if (base.Columns.ContainsKey(15)) { base.Columns[15] = value; } else { base.Columns.Add(15, value); } } }
	/// <summary>PID: 53116 | Type: read</summary>
	public System.Object Arraydiskmediatype { get { if (base.Columns.ContainsKey(15)) { return base.Columns[15]; } else { return null; } } set { if (base.Columns.ContainsKey(15)) { base.Columns[15] = value; } else { base.Columns.Add(15, value); } } }
	public ArraydisktableQActionRow() : base(0, 16) { }
	public ArraydisktableQActionRow(System.Object[] oRow) : base(0, 16, oRow) { }
	public static implicit operator ArraydisktableQActionRow(System.Object[] source) { return new ArraydisktableQActionRow(source); }
	public static implicit operator System.Object[](ArraydisktableQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class VirtualdisktableQActionRow : QActionTableRow
{
	/// <summary>PID: 53201 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Virtualdisknumber_53201 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 53201 | Type: read</summary>
	public System.Object Virtualdisknumber { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 53202 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Virtualdiskname_53202 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 53202 | Type: read</summary>
	public System.Object Virtualdiskname { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 53203 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Virtualdiskstate_53203 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 53203 | Type: read</summary>
	public System.Object Virtualdiskstate { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 53204 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Virtualdisklengthinmb_53204 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 53204 | Type: read</summary>
	public System.Object Virtualdisklengthinmb { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 53205 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Virtualdisklayout_53205 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 53205 | Type: read</summary>
	public System.Object Virtualdisklayout { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 53206 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Virtualdiskrollupstatus_53206 { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 53206 | Type: read</summary>
	public System.Object Virtualdiskrollupstatus { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	public VirtualdisktableQActionRow() : base(0, 6) { }
	public VirtualdisktableQActionRow(System.Object[] oRow) : base(0, 6, oRow) { }
	public static implicit operator VirtualdisktableQActionRow(System.Object[] source) { return new VirtualdisktableQActionRow(source); }
	public static implicit operator System.Object[](VirtualdisktableQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class ProcessordevicetableQActionRow : QActionTableRow
{
	/// <summary>PID: 53301 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Dellcpu_53301 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 53301 | Type: read</summary>
	public System.Object Dellcpu { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 53302 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Processordevicestatus_53302 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 53302 | Type: read</summary>
	public System.Object Processordevicestatus { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 53303 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Processordevicetype_53303 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 53303 | Type: read</summary>
	public System.Object Processordevicetype { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 53304 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Processordevicemanufacturername_53304 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 53304 | Type: read</summary>
	public System.Object Processordevicemanufacturername { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 53305 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Processordevicefamily_53305 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 53305 | Type: read</summary>
	public System.Object Processordevicefamily { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 53306 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Processordevicemaximumspeed_53306 { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 53306 | Type: read</summary>
	public System.Object Processordevicemaximumspeed { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 53307 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Processordevicecurrentspeed_53307 { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 53307 | Type: read</summary>
	public System.Object Processordevicecurrentspeed { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 53308 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Processordevicecorecount_53308 { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 53308 | Type: read</summary>
	public System.Object Processordevicecorecount { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	public ProcessordevicetableQActionRow() : base(0, 8) { }
	public ProcessordevicetableQActionRow(System.Object[] oRow) : base(0, 8, oRow) { }
	public static implicit operator ProcessordevicetableQActionRow(System.Object[] source) { return new ProcessordevicetableQActionRow(source); }
	public static implicit operator System.Object[](ProcessordevicetableQActionRow source) { return source.ToObjectArray(); }
}
/// <summary>IDX: 0</summary>
public class MemorydevicetableQActionRow : QActionTableRow
{
	/// <summary>PID: 53490 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Dellmemoryindex_53490 { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 53490 | Type: read</summary>
	public System.Object Dellmemoryindex { get { if (base.Columns.ContainsKey(0)) { return base.Columns[0]; } else { return null; } } set { if (base.Columns.ContainsKey(0)) { base.Columns[0] = value; } else { base.Columns.Add(0, value); } } }
	/// <summary>PID: 53401 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Memorydevicestatesettings_53401 { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 53401 | Type: read</summary>
	public System.Object Memorydevicestatesettings { get { if (base.Columns.ContainsKey(1)) { return base.Columns[1]; } else { return null; } } set { if (base.Columns.ContainsKey(1)) { base.Columns[1] = value; } else { base.Columns.Add(1, value); } } }
	/// <summary>PID: 53402 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Memorydevicestatus_53402 { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 53402 | Type: read</summary>
	public System.Object Memorydevicestatus { get { if (base.Columns.ContainsKey(2)) { return base.Columns[2]; } else { return null; } } set { if (base.Columns.ContainsKey(2)) { base.Columns[2] = value; } else { base.Columns.Add(2, value); } } }
	/// <summary>PID: 53403 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Memorydevicetype_53403 { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 53403 | Type: read</summary>
	public System.Object Memorydevicetype { get { if (base.Columns.ContainsKey(3)) { return base.Columns[3]; } else { return null; } } set { if (base.Columns.ContainsKey(3)) { base.Columns[3] = value; } else { base.Columns.Add(3, value); } } }
	/// <summary>PID: 53404 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Memorydevicelocationname_53404 { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 53404 | Type: read</summary>
	public System.Object Memorydevicelocationname { get { if (base.Columns.ContainsKey(4)) { return base.Columns[4]; } else { return null; } } set { if (base.Columns.ContainsKey(4)) { base.Columns[4] = value; } else { base.Columns.Add(4, value); } } }
	/// <summary>PID: 53405 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Memorydevicesize_53405 { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 53405 | Type: read</summary>
	public System.Object Memorydevicesize { get { if (base.Columns.ContainsKey(5)) { return base.Columns[5]; } else { return null; } } set { if (base.Columns.ContainsKey(5)) { base.Columns[5] = value; } else { base.Columns.Add(5, value); } } }
	/// <summary>PID: 53406 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Memorydevicespeed_53406 { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 53406 | Type: read</summary>
	public System.Object Memorydevicespeed { get { if (base.Columns.ContainsKey(6)) { return base.Columns[6]; } else { return null; } } set { if (base.Columns.ContainsKey(6)) { base.Columns[6] = value; } else { base.Columns.Add(6, value); } } }
	/// <summary>PID: 53407 | Type: read</summary>
	[EditorBrowsable(EditorBrowsableState.Never)]
	public System.Object Memorydevicepartnumbername_53407 { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	/// <summary>PID: 53407 | Type: read</summary>
	public System.Object Memorydevicepartnumbername { get { if (base.Columns.ContainsKey(7)) { return base.Columns[7]; } else { return null; } } set { if (base.Columns.ContainsKey(7)) { base.Columns[7] = value; } else { base.Columns.Add(7, value); } } }
	public MemorydevicetableQActionRow() : base(0, 8) { }
	public MemorydevicetableQActionRow(System.Object[] oRow) : base(0, 8, oRow) { }
	public static implicit operator MemorydevicetableQActionRow(System.Object[] source) { return new MemorydevicetableQActionRow(source); }
	public static implicit operator System.Object[](MemorydevicetableQActionRow source) { return source.ToObjectArray(); }
}
}
